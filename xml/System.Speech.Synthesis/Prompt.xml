<Type Name="Prompt" FullName="System.Speech.Synthesis.Prompt">
  <Metadata><Meta Name="ms.openlocfilehash" Value="539186caab87ac6507256a1717a3210a7e8911e8" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86826408" /></Metadata><TypeSignature Language="C#" Value="public class Prompt" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Prompt extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.Prompt" />
  <TypeSignature Language="VB.NET" Value="Public Class Prompt" />
  <TypeSignature Language="C++ CLI" Value="public ref class Prompt" />
  <TypeSignature Language="F#" Value="type Prompt = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("{_text}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("{_text}")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6ccca-101">表示 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 可以呈现的内容（文本或音频文件）的相关信息。</span><span class="sxs-lookup"><span data-stu-id="6ccca-101">Represents information about what can be rendered, either text or an audio file, by the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ccca-102"><xref:System.Speech.Synthesis.Prompt>对象可以包含纯文本、使用标记语言设置格式的文本或音频文件。</span><span class="sxs-lookup"><span data-stu-id="6ccca-102">A <xref:System.Speech.Synthesis.Prompt> object can contain plain text, text formatted with markup language, or audio files.</span></span>  
  
 <span data-ttu-id="6ccca-103">使用的 <xref:System.Speech.Synthesis.Prompt> 每个新实例创建一个空对象 <xref:System.Speech.Synthesis.PromptBuilder> 。</span><span class="sxs-lookup"><span data-stu-id="6ccca-103">An empty <xref:System.Speech.Synthesis.Prompt> object is created with each new instance of <xref:System.Speech.Synthesis.PromptBuilder>.</span></span>  <span data-ttu-id="6ccca-104"><xref:System.Speech.Synthesis.PromptBuilder>类提供一些方法，用于将内容（包括文本、SSML 标记、书签和预先录制的音频文件） (如 .wav 文件) ）添加到 <xref:System.Speech.Synthesis.Prompt> 它包含的空对象。</span><span class="sxs-lookup"><span data-stu-id="6ccca-104">The <xref:System.Speech.Synthesis.PromptBuilder> class provides methods for adding content, including text, SSML markup, bookmarks, and prerecorded audio files (such as .wav files), to the empty <xref:System.Speech.Synthesis.Prompt> object that it contains.</span></span> <span data-ttu-id="6ccca-105">通常，应用程序将使用 <xref:System.Speech.Synthesis.PromptBuilder> （而不是 <xref:System.Speech.Synthesis.Prompt> 对象）创建提示并向其填充内容。</span><span class="sxs-lookup"><span data-stu-id="6ccca-105">Typically, applications will use <xref:System.Speech.Synthesis.PromptBuilder>, rather than a <xref:System.Speech.Synthesis.Prompt> object, to create prompts and populate them with content.</span></span>  
  
 <span data-ttu-id="6ccca-106">若要从对象的内容生成语音 <xref:System.Speech.Synthesis.Prompt> ，请使用 <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="6ccca-106">To generate speech from the contents of a <xref:System.Speech.Synthesis.Prompt> object, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6ccca-107">创建 <see cref="T:System.Speech.Synthesis.Prompt" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="6ccca-107">Creates a new instance of the <see cref="T:System.Speech.Synthesis.Prompt" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Prompt (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.Prompt.#ctor(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (promptBuilder As PromptBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Prompt(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberSignature Language="F#" Value="new System.Speech.Synthesis.Prompt : System.Speech.Synthesis.PromptBuilder -&gt; System.Speech.Synthesis.Prompt" Usage="new System.Speech.Synthesis.Prompt promptBuilder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder"><span data-ttu-id="6ccca-108">要讲述的内容。</span><span class="sxs-lookup"><span data-stu-id="6ccca-108">The content to be spoken.</span></span></param>
        <summary><span data-ttu-id="6ccca-109">从 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象创建 <see cref="T:System.Speech.Synthesis.Prompt" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="6ccca-109">Creates a new instance of the <see cref="T:System.Speech.Synthesis.Prompt" /> class from a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Prompt (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.Prompt.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Prompt(System::String ^ textToSpeak);" />
      <MemberSignature Language="F#" Value="new System.Speech.Synthesis.Prompt : string -&gt; System.Speech.Synthesis.Prompt" Usage="new System.Speech.Synthesis.Prompt textToSpeak" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="6ccca-110">要朗读的文本。</span><span class="sxs-lookup"><span data-stu-id="6ccca-110">The text to be spoken.</span></span></param>
        <summary><span data-ttu-id="6ccca-111">创建 <see cref="T:System.Speech.Synthesis.Prompt" /> 类的新实例，并指定要朗读的文本。</span><span class="sxs-lookup"><span data-stu-id="6ccca-111">Creates a new instance of the <see cref="T:System.Speech.Synthesis.Prompt" /> class and specifies the text to be spoken.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6ccca-112">下面的示例 <xref:System.Speech.Synthesis.Prompt> 从字符串创建对象并将该对象作为参数传递给 <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="6ccca-112">The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a prompt from a string.  
        Prompt color = new Prompt("What is your favorite color?");  
  
        // Speak the contents of the prompt synchronously.  
        synth.Speak(color);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Prompt (string textToSpeak, System.Speech.Synthesis.SynthesisTextFormat media);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string textToSpeak, valuetype System.Speech.Synthesis.SynthesisTextFormat media) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.Prompt.#ctor(System.String,System.Speech.Synthesis.SynthesisTextFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (textToSpeak As String, media As SynthesisTextFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Prompt(System::String ^ textToSpeak, System::Speech::Synthesis::SynthesisTextFormat media);" />
      <MemberSignature Language="F#" Value="new System.Speech.Synthesis.Prompt : string * System.Speech.Synthesis.SynthesisTextFormat -&gt; System.Speech.Synthesis.Prompt" Usage="new System.Speech.Synthesis.Prompt (textToSpeak, media)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="media" Type="System.Speech.Synthesis.SynthesisTextFormat" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="6ccca-113">要朗读的文本。</span><span class="sxs-lookup"><span data-stu-id="6ccca-113">The text to be spoken.</span></span></param>
        <param name="media"><span data-ttu-id="6ccca-114">用来指定文本格式的值。</span><span class="sxs-lookup"><span data-stu-id="6ccca-114">A value that specifies the format of the text.</span></span></param>
        <summary><span data-ttu-id="6ccca-115">创建 <see cref="T:System.Speech.Synthesis.Prompt" /> 类的新实例，并指定要朗读的文本以及其格式是纯文本还是标记语言。</span><span class="sxs-lookup"><span data-stu-id="6ccca-115">Creates a new instance of the <see cref="T:System.Speech.Synthesis.Prompt" /> class and specifies the text to be spoken and whether its format is plain text or markup language.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ccca-116">参数的内容 `textToSpeak` 必须包括一个 `speak` 元素，并且必须符合 [语音合成标记语言 (SSML) 版本 1.0](https://go.microsoft.com/fwlink/?LinkId=201763)。</span><span class="sxs-lookup"><span data-stu-id="6ccca-116">The contents of the `textToSpeak` parameter must include a `speak` element and must conform to the [Speech Synthesis Markup Language (SSML) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201763).</span></span> <span data-ttu-id="6ccca-117">有关详细信息，请参阅 [语音合成标记语言参考](https://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94)。</span><span class="sxs-lookup"><span data-stu-id="6ccca-117">For more information, see [Speech Synthesis Markup Language Reference](https://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ccca-118">下面的示例生成包含 SSML 标记的字符串， <xref:System.Speech.Synthesis.Prompt> 从该字符串创建对象，并讲述提示。</span><span class="sxs-lookup"><span data-stu-id="6ccca-118">The following example builds a string that contains SSML markup, creates a <xref:System.Speech.Synthesis.Prompt> object from the string, and speaks the prompt.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Build an SSML prompt in a string.  
        string fileName = "<speak version=\"1.0\" ";  
        fileName += "xmlns=\"http://www.w3.org/2001/10/synthesis\" ";  
        fileName += "xml:lang=\"en-US\">";  
        fileName += "Say a name for the new file <mark name=\"fileName\" />.";  
        fileName += "</speak>";  
  
        // Create a Prompt object from the string.  
        Prompt ssmlFile = new Prompt(fileName, SynthesisTextFormat.Ssml);  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(ssmlFile);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.Prompt.IsCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompleted : bool" Usage="System.Speech.Synthesis.Prompt.IsCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6ccca-119">获取 <see cref="T:System.Speech.Synthesis.Prompt" /> 是否播放完毕的信息。</span><span class="sxs-lookup"><span data-stu-id="6ccca-119">Gets whether the <see cref="T:System.Speech.Synthesis.Prompt" /> has finished playing.</span></span></summary>
        <value><span data-ttu-id="6ccca-120">如果提示播放完毕，则返回 <see langword="true" />；否则返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6ccca-120">Returns <see langword="true" /> if the prompt has completed; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
