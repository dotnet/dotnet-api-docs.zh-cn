<Type Name="ServicePoint" FullName="System.Net.ServicePoint">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bad5a58a2feb0d3461bb78a275e84d2ab5dd8061" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89758112" /></Metadata><TypeSignature Language="C#" Value="public class ServicePoint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServicePoint extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.ServicePoint" />
  <TypeSignature Language="VB.NET" Value="Public Class ServicePoint" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServicePoint" />
  <TypeSignature Language="F#" Value="type ServicePoint = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.ServicePoint</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Net.ServicePoint" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.FriendAccessAllowed]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.FriendAccessAllowed&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="102d6-101">提供 HTTP 连接的连接管理。</span><span class="sxs-lookup"><span data-stu-id="102d6-101">Provides connection management for HTTP connections.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="102d6-102"><xref:System.Net.ServicePoint>类根据在资源的统一资源标识符中传递的主机信息 (URI) 来处理与 Internet 资源的连接。</span><span class="sxs-lookup"><span data-stu-id="102d6-102">The <xref:System.Net.ServicePoint> class handles connections to an Internet resource based on the host information passed in the resource's Uniform Resource Identifier (URI).</span></span> <span data-ttu-id="102d6-103">与资源的初始连接将确定对象维护的信息 <xref:System.Net.ServicePoint> ，该信息随后由对该资源的所有后续请求共享。</span><span class="sxs-lookup"><span data-stu-id="102d6-103">The initial connection to the resource determines the information that the <xref:System.Net.ServicePoint> object maintains, which is then shared by all subsequent requests to that resource.</span></span>  
  
 <span data-ttu-id="102d6-104"><xref:System.Net.ServicePoint> 对象由类管理， <xref:System.Net.ServicePointManager> 并根据需要由 <xref:System.Net.ServicePointManager.FindServicePoint%2A?displayProperty=nameWithType> 方法创建。</span><span class="sxs-lookup"><span data-stu-id="102d6-104"><xref:System.Net.ServicePoint> objects are managed by the <xref:System.Net.ServicePointManager> class and are created, if necessary, by the <xref:System.Net.ServicePointManager.FindServicePoint%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="102d6-105"><xref:System.Net.ServicePoint> 永远不会直接创建对象，而是始终由类创建和管理对象 <xref:System.Net.ServicePointManager> 。</span><span class="sxs-lookup"><span data-stu-id="102d6-105"><xref:System.Net.ServicePoint> objects are never created directly but are always created and managed by the <xref:System.Net.ServicePointManager> class.</span></span> <span data-ttu-id="102d6-106">可创建的最大 <xref:System.Net.ServicePoint> 对象数由 <xref:System.Net.ServicePointManager.MaxServicePoints?displayProperty=nameWithType> 属性设置。</span><span class="sxs-lookup"><span data-stu-id="102d6-106">The maximum number of <xref:System.Net.ServicePoint> objects that can be created is set by the <xref:System.Net.ServicePointManager.MaxServicePoints?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="102d6-107">每个 <xref:System.Net.ServicePoint> 对象都保持与 Internet 资源的连接，直到它的空闲时间超过在属性中指定的时间 <xref:System.Net.ServicePoint.MaxIdleTime> 。</span><span class="sxs-lookup"><span data-stu-id="102d6-107">Each <xref:System.Net.ServicePoint> object maintains its connection to an Internet resource until it has been idle longer than the time specified in the <xref:System.Net.ServicePoint.MaxIdleTime> property.</span></span> <span data-ttu-id="102d6-108">当 <xref:System.Net.ServicePoint> 超出该值时 <xref:System.Net.ServicePoint.MaxIdleTime> ，可以将其回收到其他连接。</span><span class="sxs-lookup"><span data-stu-id="102d6-108">When a <xref:System.Net.ServicePoint> exceeds the <xref:System.Net.ServicePoint.MaxIdleTime> value, it can be recycled to another connection.</span></span> <span data-ttu-id="102d6-109">的默认值 <xref:System.Net.ServicePoint.MaxIdleTime> 由 <xref:System.Net.ServicePointManager.MaxServicePointIdleTime?displayProperty=nameWithType> 属性设置。</span><span class="sxs-lookup"><span data-stu-id="102d6-109">The default value of <xref:System.Net.ServicePoint.MaxIdleTime> is set by the <xref:System.Net.ServicePointManager.MaxServicePointIdleTime?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="102d6-110">如果 <xref:System.Net.ServicePoint.ConnectionLeaseTimeout> 将属性设置为-1 以外的值，并且在指定的时间过后，则在 <xref:System.Net.ServicePoint> 服务下一个请求后将关闭活动连接。</span><span class="sxs-lookup"><span data-stu-id="102d6-110">When the <xref:System.Net.ServicePoint.ConnectionLeaseTimeout> property is set to a value other than -1, and after the specified time elapses, an active <xref:System.Net.ServicePoint> connection is closed after it services the next request.</span></span> <span data-ttu-id="102d6-111">这对于不需要无限期打开的活动连接的应用程序非常有用，因为这些应用程序默认为。</span><span class="sxs-lookup"><span data-stu-id="102d6-111">This is useful for applications that do not require active connections that are opened indefinitely, as they are by default.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="102d6-112">在高负载情况下，某些应用程序可能会耗尽 ThreadPool 中的可用线程，这可能导致系统性能不佳 (如) 的高和可变事务时间。</span><span class="sxs-lookup"><span data-stu-id="102d6-112">In high load conditions, some applications may run out of free threads in the ThreadPool, which may lead to poor system performance (such as high and variable transaction times).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="102d6-113">下面的代码示例创建一个 <xref:System.Net.ServicePoint> 连接到 URI 的对象 `www.contoso.com` 。</span><span class="sxs-lookup"><span data-stu-id="102d6-113">The following code example creates a <xref:System.Net.ServicePoint> object that connects to the URI `www.contoso.com`.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#1)]
 [!code-csharp[System.Net.ServicePoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#1)]
 [!code-vb[System.Net.ServicePoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public Uri Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Address { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Address : Uri" Usage="System.Net.ServicePoint.Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="102d6-114">获取此 <see cref="T:System.Net.ServicePoint" /> 对象连接到的服务器的统一资源标识符 (URI)。</span><span class="sxs-lookup"><span data-stu-id="102d6-114">Gets the Uniform Resource Identifier (URI) of the server that this <see cref="T:System.Net.ServicePoint" /> object connects to.</span></span></summary>
        <value><span data-ttu-id="102d6-115"><see cref="T:System.Uri" /> 类的实例，包含此 <see cref="T:System.Net.ServicePoint" /> 对象连接到的 Internet 服务器的 URI。</span><span class="sxs-lookup"><span data-stu-id="102d6-115">An instance of the <see cref="T:System.Uri" /> class that contains the URI of the Internet server that this <see cref="T:System.Net.ServicePoint" /> object connects to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="102d6-116">下面的代码示例显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="102d6-116">The following code example displays the value of this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#2)]
 [!code-csharp[System.Net.ServicePoint#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#2)]
 [!code-vb[System.Net.ServicePoint#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="102d6-117"><see cref="T:System.Net.ServicePoint" /> 处于宿主模式。</span><span class="sxs-lookup"><span data-stu-id="102d6-117">The <see cref="T:System.Net.ServicePoint" /> is in host mode.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BindIPEndPointDelegate">
      <MemberSignature Language="C#" Value="public System.Net.BindIPEndPoint? BindIPEndPointDelegate { get; set; }" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.BindIPEndPoint BindIPEndPointDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.BindIPEndPointDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Property BindIPEndPointDelegate As BindIPEndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::BindIPEndPoint ^ BindIPEndPointDelegate { System::Net::BindIPEndPoint ^ get(); void set(System::Net::BindIPEndPoint ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BindIPEndPointDelegate : System.Net.BindIPEndPoint with get, set" Usage="System.Net.ServicePoint.BindIPEndPointDelegate" />
      <MemberSignature Language="C#" Value="public System.Net.BindIPEndPoint BindIPEndPointDelegate { get; set; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.BindIPEndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="102d6-118">指定用于将本地 <see cref="T:System.Net.IPEndPoint" /> 与 <see cref="T:System.Net.ServicePoint" /> 关联的委托。</span><span class="sxs-lookup"><span data-stu-id="102d6-118">Specifies the delegate to associate a local <see cref="T:System.Net.IPEndPoint" /> with a <see cref="T:System.Net.ServicePoint" />.</span></span></summary>
        <value><span data-ttu-id="102d6-119">强制 <see cref="T:System.Net.ServicePoint" /> 使用特定的本地 Internet 协议 (IP) 地址和端口号的委托。</span><span class="sxs-lookup"><span data-stu-id="102d6-119">A delegate that forces a <see cref="T:System.Net.ServicePoint" /> to use a particular local Internet Protocol (IP) address and port number.</span></span> <span data-ttu-id="102d6-120">默认值是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="102d6-120">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="102d6-121">某些负载平衡技术要求客户端使用特定的本地 IP 地址和端口号，而不是 <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> (或 <xref:System.Net.IPAddress.IPv6Any?displayProperty=nameWithType> Internet 协议版本 6) 和临时端口。</span><span class="sxs-lookup"><span data-stu-id="102d6-121">Some load balancing techniques require a client to use a specific local IP address and port number, rather than <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> (or <xref:System.Net.IPAddress.IPv6Any?displayProperty=nameWithType> for Internet Protocol Version 6) and an ephemeral port.</span></span> <span data-ttu-id="102d6-122">您 <xref:System.Net.ServicePoint.BindIPEndPointDelegate> 可以满足此要求。</span><span class="sxs-lookup"><span data-stu-id="102d6-122">Your <xref:System.Net.ServicePoint.BindIPEndPointDelegate> can satisfy this requirement.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Certificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate? Certificate { get; }" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate Certificate" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.Certificate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Certificate As X509Certificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate ^ Certificate { System::Security::Cryptography::X509Certificates::X509Certificate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Certificate : System.Security.Cryptography.X509Certificates.X509Certificate" Usage="System.Net.ServicePoint.Certificate" />
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate Certificate { get; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="102d6-123">获取为此 <see cref="T:System.Net.ServicePoint" /> 对象接收的证书。</span><span class="sxs-lookup"><span data-stu-id="102d6-123">Gets the certificate received for this <see cref="T:System.Net.ServicePoint" /> object.</span></span></summary>
        <value><span data-ttu-id="102d6-124"><see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> 类的实例，包含为此 <see cref="T:System.Net.ServicePoint" /> 对象接收的安全证书。</span><span class="sxs-lookup"><span data-stu-id="102d6-124">An instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> class that contains the security certificate received for this <see cref="T:System.Net.ServicePoint" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="102d6-125">尽管 <xref:System.Net.ServicePoint> 对象可以与 Internet 资源建立多个连接，但它只能维护一个证书。</span><span class="sxs-lookup"><span data-stu-id="102d6-125">Although a <xref:System.Net.ServicePoint> object can make multiple connections to an Internet resource, it can maintain only one certificate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="102d6-126">下面的代码示例显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="102d6-126">The following code example displays the value of this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#5)]
 [!code-csharp[System.Net.ServicePoint#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#5)]
 [!code-vb[System.Net.ServicePoint#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate? ClientCertificate { get; }" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate ClientCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ClientCertificate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificate As X509Certificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate ^ ClientCertificate { System::Security::Cryptography::X509Certificates::X509Certificate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificate : System.Security.Cryptography.X509Certificates.X509Certificate" Usage="System.Net.ServicePoint.ClientCertificate" />
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate ClientCertificate { get; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="102d6-127">获取发送到服务器的上一个客户端证书。</span><span class="sxs-lookup"><span data-stu-id="102d6-127">Gets the last client certificate sent to the server.</span></span></summary>
        <value><span data-ttu-id="102d6-128"><see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> 对象，包含发送到服务器的上一个客户端证书的公共值。</span><span class="sxs-lookup"><span data-stu-id="102d6-128">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object that contains the public values of the last client certificate sent to the server.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="102d6-129">下面的代码示例显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="102d6-129">The following code example displays the value of this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#5)]
 [!code-csharp[System.Net.ServicePoint#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#5)]
 [!code-vb[System.Net.ServicePoint#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseConnectionGroup">
      <MemberSignature Language="C#" Value="public bool CloseConnectionGroup (string connectionGroupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CloseConnectionGroup(string connectionGroupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ServicePoint.CloseConnectionGroup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CloseConnectionGroup (connectionGroupName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CloseConnectionGroup(System::String ^ connectionGroupName);" />
      <MemberSignature Language="F#" Value="member this.CloseConnectionGroup : string -&gt; bool" Usage="servicePoint.CloseConnectionGroup connectionGroupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionGroupName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="connectionGroupName"><span data-ttu-id="102d6-130">连接组的名称，该连接组包含要关闭的和要从此服务点移除的连接。</span><span class="sxs-lookup"><span data-stu-id="102d6-130">The name of the connection group that contains the connections to close and remove from this service point.</span></span></param>
        <summary><span data-ttu-id="102d6-131">从此 <see cref="T:System.Net.ServicePoint" /> 对象移除指定的连接组。</span><span class="sxs-lookup"><span data-stu-id="102d6-131">Removes the specified connection group from this <see cref="T:System.Net.ServicePoint" /> object.</span></span></summary>
        <returns><span data-ttu-id="102d6-132">指示连接组是否关闭的 <see cref="T:System.Boolean" /> 值。</span><span class="sxs-lookup"><span data-stu-id="102d6-132">A <see cref="T:System.Boolean" /> value that indicates whether the connection group was closed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="102d6-133">连接组将一组请求与特定连接或连接集相关联。</span><span class="sxs-lookup"><span data-stu-id="102d6-133">Connection groups associate a set of requests with a particular connection or set of connections.</span></span> <span data-ttu-id="102d6-134">此方法删除并关闭属于指定连接组的所有连接。</span><span class="sxs-lookup"><span data-stu-id="102d6-134">This method removes and closes all connections that belong to the specified connection group.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionLeaseTimeout">
      <MemberSignature Language="C#" Value="public int ConnectionLeaseTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionLeaseTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ConnectionLeaseTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionLeaseTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ConnectionLeaseTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionLeaseTimeout : int with get, set" Usage="System.Net.ServicePoint.ConnectionLeaseTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.MonoTODO]</AttributeName>
          <AttributeName Language="F#">[&lt;System.MonoTODO&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="102d6-135">获取或设置在多少毫秒之后关闭活动 <see cref="T:System.Net.ServicePoint" /> 连接。</span><span class="sxs-lookup"><span data-stu-id="102d6-135">Gets or sets the number of milliseconds after which an active <see cref="T:System.Net.ServicePoint" /> connection is closed.</span></span></summary>
        <value><span data-ttu-id="102d6-136"><see cref="T:System.Int32" />，它指定活动 <see cref="T:System.Net.ServicePoint" /> 连接保持打开的毫秒数。</span><span class="sxs-lookup"><span data-stu-id="102d6-136">A <see cref="T:System.Int32" /> that specifies the number of milliseconds that an active <see cref="T:System.Net.ServicePoint" /> connection remains open.</span></span> <span data-ttu-id="102d6-137">默认值为 -1，这样活动 <see cref="T:System.Net.ServicePoint" /> 连接可以无限期保持连接。</span><span class="sxs-lookup"><span data-stu-id="102d6-137">The default is -1, which allows an active <see cref="T:System.Net.ServicePoint" /> connection to stay connected indefinitely.</span></span> <span data-ttu-id="102d6-138">将此属性设置为 0 可在 <see cref="T:System.Net.ServicePoint" /> 连接为请求提供服务之后强制关闭该连接。</span><span class="sxs-lookup"><span data-stu-id="102d6-138">Set this property to 0 to force <see cref="T:System.Net.ServicePoint" /> connections to close after servicing a request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="102d6-139">您可以使用此属性来确保 <xref:System.Net.ServicePoint> 对象的活动连接不会无限期地保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="102d6-139">You can use this property to ensure that a <xref:System.Net.ServicePoint> object's active connections do not remain open indefinitely.</span></span> <span data-ttu-id="102d6-140">此属性适用于应定期删除和重新建立连接的情况，例如负载平衡方案。</span><span class="sxs-lookup"><span data-stu-id="102d6-140">This property is intended for scenarios where connections should be dropped and reestablished periodically, such as load balancing scenarios.</span></span>  
  
 <span data-ttu-id="102d6-141">默认情况下，当为 <xref:System.Net.HttpWebRequest.KeepAlive> `true` 请求时， <xref:System.Net.ServicePoint.MaxIdleTime> 属性将设置关闭由于不活动而关闭连接的超时时间 <xref:System.Net.ServicePoint> 。</span><span class="sxs-lookup"><span data-stu-id="102d6-141">By default, when <xref:System.Net.HttpWebRequest.KeepAlive> is `true` for a request, the <xref:System.Net.ServicePoint.MaxIdleTime> property sets the time-out for closing <xref:System.Net.ServicePoint> connections due to inactivity.</span></span> <span data-ttu-id="102d6-142">如果 <xref:System.Net.ServicePoint> 具有活动的连接，则 <xref:System.Net.ServicePoint.MaxIdleTime> 不会产生任何影响，并且连接会无限期地保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="102d6-142">If the <xref:System.Net.ServicePoint> has active connections, <xref:System.Net.ServicePoint.MaxIdleTime> has no effect and the connections remain open indefinitely.</span></span>  
  
 <span data-ttu-id="102d6-143">如果 <xref:System.Net.ServicePoint.ConnectionLeaseTimeout> 将属性设置为-1 以外的值，并且在指定的时间过后，将 <xref:System.Net.ServicePoint> 在处理请求后关闭活动连接，方法是 <xref:System.Net.HttpWebRequest.KeepAlive> `false` 在该请求中将设置为。</span><span class="sxs-lookup"><span data-stu-id="102d6-143">When the <xref:System.Net.ServicePoint.ConnectionLeaseTimeout> property is set to a value other than -1, and after the specified time elapses, an active <xref:System.Net.ServicePoint> connection is closed after servicing a request by setting <xref:System.Net.HttpWebRequest.KeepAlive> to `false` in that request.</span></span>  
  
 <span data-ttu-id="102d6-144">设置此值将影响对象管理的所有连接 <xref:System.Net.ServicePoint> 。</span><span class="sxs-lookup"><span data-stu-id="102d6-144">Setting this value affects all connections managed by the <xref:System.Net.ServicePoint> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="102d6-145">下面的代码示例设置此属性的值。</span><span class="sxs-lookup"><span data-stu-id="102d6-145">The following code example sets the value of this property.</span></span>  
  
 [!code-cpp[NCLServicePoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLServicePoint/CPP/nclservicepoint.cpp#1)]
 [!code-csharp[NCLServicePoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLServicePoint/CS/nclservicepoint.cs#1)]
 [!code-vb[NCLServicePoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLServicePoint/VB/nclservicepoint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="102d6-146">为 Set 操作指定的值为小于 -1 的负数。</span><span class="sxs-lookup"><span data-stu-id="102d6-146">The value specified for a set operation is a negative number less than -1.</span></span></exception>
        <altmember cref="P:System.Net.HttpWebRequest.KeepAlive" />
        <altmember cref="P:System.Net.FtpWebRequest.KeepAlive" />
        <altmember cref="P:System.Net.HttpListenerRequest.KeepAlive" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionLimit">
      <MemberSignature Language="C#" Value="public int ConnectionLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionLimit" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ConnectionLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ConnectionLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionLimit : int with get, set" Usage="System.Net.ServicePoint.ConnectionLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="102d6-147">获取或设置此 <see cref="T:System.Net.ServicePoint" /> 对象上允许的最大连接数。</span><span class="sxs-lookup"><span data-stu-id="102d6-147">Gets or sets the maximum number of connections allowed on this <see cref="T:System.Net.ServicePoint" /> object.</span></span></summary>
        <value><span data-ttu-id="102d6-148">此 <see cref="T:System.Net.ServicePoint" /> 对象上允许的最大连接数。</span><span class="sxs-lookup"><span data-stu-id="102d6-148">The maximum number of connections allowed on this <see cref="T:System.Net.ServicePoint" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="102d6-149"><xref:System.Net.ServicePoint.ConnectionLimit>属性设置 <xref:System.Net.ServicePoint> 对象可对 Internet 资源进行的最大连接数。</span><span class="sxs-lookup"><span data-stu-id="102d6-149">The <xref:System.Net.ServicePoint.ConnectionLimit> property sets the maximum number of connections that the <xref:System.Net.ServicePoint> object can make to an Internet resource.</span></span> <span data-ttu-id="102d6-150"><xref:System.Net.ServicePoint.ConnectionLimit>当创建对象时，将属性的值设置为属性的值 <xref:System.Net.ServicePointManager.DefaultConnectionLimit?displayProperty=nameWithType> <xref:System.Net.ServicePoint> ; 以后对现有对象所做的更改 <xref:System.Net.ServicePointManager.DefaultConnectionLimit> 不会有任何影响 <xref:System.Net.ServicePoint> 。</span><span class="sxs-lookup"><span data-stu-id="102d6-150">The value of the <xref:System.Net.ServicePoint.ConnectionLimit> property is set to the value of the <xref:System.Net.ServicePointManager.DefaultConnectionLimit?displayProperty=nameWithType> property when the <xref:System.Net.ServicePoint> object is created; subsequent changes to <xref:System.Net.ServicePointManager.DefaultConnectionLimit> have no effect on existing <xref:System.Net.ServicePoint> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="102d6-151">下面的代码示例使用 <xref:System.Net.ServicePoint.ConnectionLimit> 属性检查 <xref:System.Net.ServicePoint> 对象可对指定的统一资源标识符执行的最大连接数， (URI) 。</span><span class="sxs-lookup"><span data-stu-id="102d6-151">The following code example uses the <xref:System.Net.ServicePoint.ConnectionLimit> property to check the maximum number of connections that the <xref:System.Net.ServicePoint> object can make to the specified Uniform Resource Identifier (URI).</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#4)]
 [!code-csharp[System.Net.ServicePoint#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#4)]
 [!code-vb[System.Net.ServicePoint#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="102d6-152">连接限制为 0 或小于 0。</span><span class="sxs-lookup"><span data-stu-id="102d6-152">The connection limit is equal to or less than 0.</span></span></exception>
        <related type="Article" href="/dotnet/framework/network-programming/managing-connections"><span data-ttu-id="102d6-153">管理连接</span><span class="sxs-lookup"><span data-stu-id="102d6-153">Managing Connections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConnectionName">
      <MemberSignature Language="C#" Value="public string ConnectionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionName" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ConnectionName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConnectionName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionName : string" Usage="System.Net.ServicePoint.ConnectionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="102d6-154">获取连接名。</span><span class="sxs-lookup"><span data-stu-id="102d6-154">Gets the connection name.</span></span></summary>
        <value><span data-ttu-id="102d6-155">一个表示连接名的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="102d6-155">A <see cref="T:System.String" /> that represents the connection name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="102d6-156">如果 <xref:System.Net.ServicePoint> 对象是通过调用 <xref:System.Net.ServicePointManager.FindServicePoint%2A> 具有参数的重载构造的 <xref:System.Uri> ，则 <xref:System.Net.ServicePoint.ConnectionName> 属性表示所 <xref:System.Uri.Scheme> <xref:System.Uri> 使用对象的属性。</span><span class="sxs-lookup"><span data-stu-id="102d6-156">If the <xref:System.Net.ServicePoint> object was constructed by calling a <xref:System.Net.ServicePointManager.FindServicePoint%2A> overload with a <xref:System.Uri> argument, then the <xref:System.Net.ServicePoint.ConnectionName> property represents the <xref:System.Uri.Scheme> property of the <xref:System.Uri> object used.</span></span>  
  
 <span data-ttu-id="102d6-157">如果 <xref:System.Net.ServicePoint> 对象是从网络主机和端口构造的，则 <xref:System.Net.ServicePoint.ConnectionName> 属性包含表示主机和网络端口的字符串。</span><span class="sxs-lookup"><span data-stu-id="102d6-157">If the <xref:System.Net.ServicePoint> object was constructed from a network host and port, the <xref:System.Net.ServicePoint.ConnectionName> property contains a string that represents the host and the network port.</span></span> <span data-ttu-id="102d6-158">如果该 <xref:System.Net.ServicePoint.ConnectionName> 属性是从主机和端口构造的，则只有 <xref:System.Net.WebRequest> 具有相同值的对象 <xref:System.Net.WebRequest.ConnectionGroupName> 才能使用此 <xref:System.Net.ServicePoint> 对象。</span><span class="sxs-lookup"><span data-stu-id="102d6-158">If the <xref:System.Net.ServicePoint.ConnectionName> property is set when constructed from a host and port, only <xref:System.Net.WebRequest> objects with the same <xref:System.Net.WebRequest.ConnectionGroupName> value can use this <xref:System.Net.ServicePoint> object.</span></span>  
  
   
  
## Examples  
 [!code-cpp[System.Net.ServicePoint#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#4)]
 [!code-csharp[System.Net.ServicePoint#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#4)]
 [!code-vb[System.Net.ServicePoint#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/network-programming/connection-grouping"><span data-ttu-id="102d6-159">连接分组</span><span class="sxs-lookup"><span data-stu-id="102d6-159">Connection Grouping</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CurrentConnections">
      <MemberSignature Language="C#" Value="public int CurrentConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentConnections" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.CurrentConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentConnections As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrentConnections { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentConnections : int" Usage="System.Net.ServicePoint.CurrentConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="102d6-160">获取与此 <see cref="T:System.Net.ServicePoint" /> 对象关联的打开连接的数目。</span><span class="sxs-lookup"><span data-stu-id="102d6-160">Gets the number of open connections associated with this <see cref="T:System.Net.ServicePoint" /> object.</span></span></summary>
        <value><span data-ttu-id="102d6-161">与此 <see cref="T:System.Net.ServicePoint" /> 对象关联的打开连接的数目。</span><span class="sxs-lookup"><span data-stu-id="102d6-161">The number of open connections associated with this <see cref="T:System.Net.ServicePoint" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="102d6-162"><xref:System.Net.ServicePoint.CurrentConnections>属性包含与此对象关联的开放 Internet 连接的数量 <xref:System.Net.ServicePoint> 。</span><span class="sxs-lookup"><span data-stu-id="102d6-162">The <xref:System.Net.ServicePoint.CurrentConnections> property contains the number of open Internet connections associated with this <xref:System.Net.ServicePoint> object.</span></span> <span data-ttu-id="102d6-163">的值 <xref:System.Net.ServicePoint.CurrentConnections> 不能超过的值 <xref:System.Net.ServicePoint.ConnectionLimit> 。</span><span class="sxs-lookup"><span data-stu-id="102d6-163">The value of <xref:System.Net.ServicePoint.CurrentConnections> cannot exceed that of <xref:System.Net.ServicePoint.ConnectionLimit>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="102d6-164">下面的代码示例使用 <xref:System.Net.ServicePoint.CurrentConnections> 属性来确定与此对象关联的开放 Internet 连接的数量 <xref:System.Net.ServicePoint> 。</span><span class="sxs-lookup"><span data-stu-id="102d6-164">The following code example uses the <xref:System.Net.ServicePoint.CurrentConnections> property to determine the number of open Internet connections associated with this <xref:System.Net.ServicePoint> object.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#2)]
 [!code-csharp[System.Net.ServicePoint#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#2)]
 [!code-vb[System.Net.ServicePoint#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expect100Continue">
      <MemberSignature Language="C#" Value="public bool Expect100Continue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Expect100Continue" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.Expect100Continue" />
      <MemberSignature Language="VB.NET" Value="Public Property Expect100Continue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Expect100Continue { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Expect100Continue : bool with get, set" Usage="System.Net.ServicePoint.Expect100Continue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="102d6-165">获取或设置一个 <see cref="T:System.Boolean" /> 值，该值确定是否使用 100-Continue 行为。</span><span class="sxs-lookup"><span data-stu-id="102d6-165">Gets or sets a <see cref="T:System.Boolean" /> value that determines whether 100-Continue behavior is used.</span></span></summary>
        <value><span data-ttu-id="102d6-166">如果 <see langword="POST" /> 请求需要 100-Continue 响应，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="102d6-166"><see langword="true" /> to expect 100-Continue responses for <see langword="POST" /> requests; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="102d6-167">默认值是 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="102d6-167">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="102d6-168">如果将此属性设置为 `true` ，则使用该方法的客户端请求将 `POST` 从服务器接收 100-Continue 响应，以指示客户端应发送要发送的数据。</span><span class="sxs-lookup"><span data-stu-id="102d6-168">When this property is set to `true`, client requests that use the `POST` method expect to receive a 100-Continue response from the server to indicate that the client should send the data to be posted.</span></span> <span data-ttu-id="102d6-169">当基于请求标头的服务器要拒绝请求时，此机制可让客户端避免在网络上发送大量的数据。</span><span class="sxs-lookup"><span data-stu-id="102d6-169">This mechanism allows clients to avoid sending large amounts of data over the network when the server, based on the request headers, intends to reject the request.</span></span>  
  
 <span data-ttu-id="102d6-170">例如，假设 <xref:System.Net.ServicePoint.Expect100Continue> 属性为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="102d6-170">For example, assume the <xref:System.Net.ServicePoint.Expect100Continue> property is `false`.</span></span> <span data-ttu-id="102d6-171">将请求发送到服务器时，它将包含数据。</span><span class="sxs-lookup"><span data-stu-id="102d6-171">When the request is sent to the server, it includes the data.</span></span> <span data-ttu-id="102d6-172">如果在读取请求标头后，服务器需要身份验证并发送401响应，则客户端必须使用正确的身份验证标头重新发送数据。</span><span class="sxs-lookup"><span data-stu-id="102d6-172">If, after reading the request headers, the server requires authentication and sends a 401 response, the client must resend the data with proper authentication headers.</span></span>  
  
 <span data-ttu-id="102d6-173">如果 <xref:System.Net.ServicePoint.Expect100Continue> 属性为 `true` ，则请求标头将发送到服务器。</span><span class="sxs-lookup"><span data-stu-id="102d6-173">If the <xref:System.Net.ServicePoint.Expect100Continue> property is `true`, the request headers are sent to the server.</span></span> <span data-ttu-id="102d6-174">如果服务器未拒绝请求，则会发送一个 100-Continue 响应，该响应将发送数据。</span><span class="sxs-lookup"><span data-stu-id="102d6-174">If the server has not rejected the request, it sends a 100-Continue response signaling that the data can be transmitted.</span></span> <span data-ttu-id="102d6-175">如前面的示例中所示，服务器需要身份验证，发送401响应，客户端不会不必要地传输数据。</span><span class="sxs-lookup"><span data-stu-id="102d6-175">If, as in the preceding example, the server requires authentication, it sends the 401 response and the client has not unnecessarily transmitted the data.</span></span>  
  
 <span data-ttu-id="102d6-176">更改此属性的值不会影响现有连接。</span><span class="sxs-lookup"><span data-stu-id="102d6-176">Changing the value of this property does not affect existing connections.</span></span> <span data-ttu-id="102d6-177">只会影响在更改后创建的新连接。</span><span class="sxs-lookup"><span data-stu-id="102d6-177">Only new connections created after the change are affected.</span></span>  
  
 <span data-ttu-id="102d6-178">IETF RFC 2616 部分10.1.1 中完全介绍了预期 100-Continue 行为。</span><span class="sxs-lookup"><span data-stu-id="102d6-178">The Expect 100-Continue behavior is fully described in IETF RFC 2616 Section 10.1.1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="102d6-179">下面的代码示例显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="102d6-179">The following code example displays the value of this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#9](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#9)]
 [!code-csharp[System.Net.ServicePoint#9](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#9)]
 [!code-vb[System.Net.ServicePoint#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ServicePoint.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="servicePoint.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="102d6-180">返回 <see cref="T:System.Net.ServicePoint" /> 实例的哈希值。</span><span class="sxs-lookup"><span data-stu-id="102d6-180">Returns a hash value for a <see cref="T:System.Net.ServicePoint" /> instance.</span></span></summary>
        <returns><span data-ttu-id="102d6-181">整数哈希值。</span><span class="sxs-lookup"><span data-stu-id="102d6-181">An integer hash value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="102d6-182">`GetHashCode`方法返回此实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="102d6-182">The `GetHashCode` method returns a hash code of this instance.</span></span> <span data-ttu-id="102d6-183">此值可用作哈希表中的键。</span><span class="sxs-lookup"><span data-stu-id="102d6-183">This value can be used as a key in hash tables.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IdleSince">
      <MemberSignature Language="C#" Value="public DateTime IdleSince { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime IdleSince" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.IdleSince" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IdleSince As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime IdleSince { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.IdleSince : DateTime" Usage="System.Net.ServicePoint.IdleSince" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="102d6-184">获取上次将 <see cref="T:System.Net.ServicePoint" /> 对象连接到主机的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="102d6-184">Gets the date and time that the <see cref="T:System.Net.ServicePoint" /> object was last connected to a host.</span></span></summary>
        <value><span data-ttu-id="102d6-185"><see cref="T:System.DateTime" /> 对象，包含上次连接 <see cref="T:System.Net.ServicePoint" /> 对象的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="102d6-185">A <see cref="T:System.DateTime" /> object that contains the date and time at which the <see cref="T:System.Net.ServicePoint" /> object was last connected.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="102d6-186"><xref:System.Net.ServicePoint.IdleSince>属性记录服务点从主机断开连接的最后日期和时间。</span><span class="sxs-lookup"><span data-stu-id="102d6-186">The <xref:System.Net.ServicePoint.IdleSince> property records the last date and time at which a service point was disconnected from a host.</span></span> <span data-ttu-id="102d6-187">当当前时间与的值之间的差异 <xref:System.Net.ServicePoint.IdleSince> 超过时 <xref:System.Net.ServicePoint.MaxIdleTime> ，该 <xref:System.Net.ServicePoint> 对象可用于循环访问另一个连接。</span><span class="sxs-lookup"><span data-stu-id="102d6-187">When the difference between the current time and <xref:System.Net.ServicePoint.IdleSince> exceeds the value of <xref:System.Net.ServicePoint.MaxIdleTime>, the <xref:System.Net.ServicePoint> object is available for recycling to another connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="102d6-188">下面的代码示例使用 <xref:System.Net.ServicePoint.IdleSince> 属性设置和检索 <xref:System.Net.ServicePoint> 上次将对象连接到主机的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="102d6-188">The following code example uses the <xref:System.Net.ServicePoint.IdleSince> property to set and retrieve the date and time that the <xref:System.Net.ServicePoint> object was last connected to a host.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#3)]
 [!code-csharp[System.Net.ServicePoint#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#3)]
 [!code-vb[System.Net.ServicePoint#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxIdleTime">
      <MemberSignature Language="C#" Value="public int MaxIdleTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxIdleTime" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.MaxIdleTime" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxIdleTime As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxIdleTime { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxIdleTime : int with get, set" Usage="System.Net.ServicePoint.MaxIdleTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="102d6-189">获取或设置与 <see cref="T:System.Net.ServicePoint" /> 对象关联的连接在关闭前可以持续空闲的时间。</span><span class="sxs-lookup"><span data-stu-id="102d6-189">Gets or sets the amount of time a connection associated with the <see cref="T:System.Net.ServicePoint" /> object can remain idle before the connection is closed.</span></span></summary>
        <value><span data-ttu-id="102d6-190">与 <see cref="T:System.Net.ServicePoint" /> 对象关联的连接在关闭和重用于另一个连接前可以持续空闲的时间长度（以毫秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="102d6-190">The length of time, in milliseconds, that a connection associated with the <see cref="T:System.Net.ServicePoint" /> object can remain idle before it is closed and reused for another connection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="102d6-191">您可以将设置 <xref:System.Net.ServicePoint.MaxIdleTime> 为， <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> 以指示与对象关联的连接 <xref:System.Net.ServicePoint> 永远不会超时。</span><span class="sxs-lookup"><span data-stu-id="102d6-191">You can set <xref:System.Net.ServicePoint.MaxIdleTime> to <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> to indicate that a connection associated with the <xref:System.Net.ServicePoint> object should never time out.</span></span>  
  
 <span data-ttu-id="102d6-192"><xref:System.Net.ServicePoint.MaxIdleTime> <xref:System.Net.ServicePointManager.MaxServicePointIdleTime?displayProperty=nameWithType> 当创建对象时，属性的默认值为属性的值 <xref:System.Net.ServicePoint> 。</span><span class="sxs-lookup"><span data-stu-id="102d6-192">The default value of the <xref:System.Net.ServicePoint.MaxIdleTime> property is the value of the <xref:System.Net.ServicePointManager.MaxServicePointIdleTime?displayProperty=nameWithType> property when the <xref:System.Net.ServicePoint> object is created.</span></span> <span data-ttu-id="102d6-193">对属性的后续更改 <xref:System.Net.ServicePointManager.MaxServicePointIdleTime> 不会影响现有 <xref:System.Net.ServicePoint> 对象。</span><span class="sxs-lookup"><span data-stu-id="102d6-193">Subsequent changes to the <xref:System.Net.ServicePointManager.MaxServicePointIdleTime> property have no effect on existing <xref:System.Net.ServicePoint> objects.</span></span>  
  
 <span data-ttu-id="102d6-194">如果 <xref:System.Net.ServicePoint.MaxIdleTime> 已超过与关联的连接 <xref:System.Net.ServicePoint> ，则连接将保持打开状态，直到应用程序尝试使用该连接。</span><span class="sxs-lookup"><span data-stu-id="102d6-194">When the <xref:System.Net.ServicePoint.MaxIdleTime> for a connection associated with a <xref:System.Net.ServicePoint> is exceeded, the connection remains open until the application tries to use the connection.</span></span> <span data-ttu-id="102d6-195">此时，框架会关闭连接并创建与远程主机的新连接。</span><span class="sxs-lookup"><span data-stu-id="102d6-195">At that time, the Framework closes the connection and creates a new connection to the remote host.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="102d6-196">下面的代码示例使用 <xref:System.Net.ServicePoint.MaxIdleTime> 属性设置和检索 <xref:System.Net.ServicePoint> 空闲时间。</span><span class="sxs-lookup"><span data-stu-id="102d6-196">The following code example uses the <xref:System.Net.ServicePoint.MaxIdleTime> property to set and retrieve the <xref:System.Net.ServicePoint> idle time.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#3)]
 [!code-csharp[System.Net.ServicePoint#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#3)]
 [!code-vb[System.Net.ServicePoint#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="102d6-197"><see cref="P:System.Net.ServicePoint.MaxIdleTime" /> 被设置为小于 <see cref="F:System.Threading.Timeout.Infinite" /> 或大于 <see cref="F:System.Int32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="102d6-197"><see cref="P:System.Net.ServicePoint.MaxIdleTime" /> is set to less than <see cref="F:System.Threading.Timeout.Infinite" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ProtocolVersion">
      <MemberSignature Language="C#" Value="public virtual Version ProtocolVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ProtocolVersion" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ProtocolVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ProtocolVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Version ^ ProtocolVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProtocolVersion : Version" Usage="System.Net.ServicePoint.ProtocolVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="102d6-198">获取 <see cref="T:System.Net.ServicePoint" /> 对象使用的 HTTP 协议的版本。</span><span class="sxs-lookup"><span data-stu-id="102d6-198">Gets the version of the HTTP protocol that the <see cref="T:System.Net.ServicePoint" /> object uses.</span></span></summary>
        <value><span data-ttu-id="102d6-199"><see cref="T:System.Version" /> 对象，它包含 <see cref="T:System.Net.ServicePoint" /> 对象使用的 HTTP 协议版本。</span><span class="sxs-lookup"><span data-stu-id="102d6-199">A <see cref="T:System.Version" /> object that contains the HTTP protocol version that the <see cref="T:System.Net.ServicePoint" /> object uses.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="102d6-200">HTTP 协议版本为 HTTP/1.0 和 HTTP/1.1。</span><span class="sxs-lookup"><span data-stu-id="102d6-200">The HTTP protocol versions are HTTP/1.0 and HTTP/1.1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="102d6-201">下面的代码示例显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="102d6-201">The following code example displays the value of this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#5)]
 [!code-csharp[System.Net.ServicePoint#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#5)]
 [!code-vb[System.Net.ServicePoint#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveBufferSize : int with get, set" Usage="System.Net.ServicePoint.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.MonoTODO]</AttributeName>
          <AttributeName Language="F#">[&lt;System.MonoTODO&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="102d6-202">获取或设置此 <see cref="T:System.Net.ServicePoint" /> 使用的套接字的接收缓冲区的大小。</span><span class="sxs-lookup"><span data-stu-id="102d6-202">Gets or sets the size of the receiving buffer for the socket used by this <see cref="T:System.Net.ServicePoint" />.</span></span></summary>
        <value><span data-ttu-id="102d6-203">包含接收缓冲区的大小（以字节为单位）的 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="102d6-203">A <see cref="T:System.Int32" /> that contains the size, in bytes, of the receive buffer.</span></span> <span data-ttu-id="102d6-204">默认值为 8192。</span><span class="sxs-lookup"><span data-stu-id="102d6-204">The default is 8192.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="102d6-205">有关附加信息，请参见 <xref:System.Net.Sockets.Socket.ReceiveBufferSize>。</span><span class="sxs-lookup"><span data-stu-id="102d6-205">For additional information, see <xref:System.Net.Sockets.Socket.ReceiveBufferSize>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="102d6-206">下面的代码示例设置此属性的值。</span><span class="sxs-lookup"><span data-stu-id="102d6-206">The following code example sets the value of this property.</span></span>  
  
 [!code-cpp[NCLServicePoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLServicePoint/CPP/nclservicepoint.cpp#1)]
 [!code-csharp[NCLServicePoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLServicePoint/CS/nclservicepoint.cs#1)]
 [!code-vb[NCLServicePoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLServicePoint/VB/nclservicepoint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="102d6-207">为 Set 操作指定的值大于 <see cref="F:System.Int32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="102d6-207">The value specified for a set operation is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetTcpKeepAlive">
      <MemberSignature Language="C#" Value="public void SetTcpKeepAlive (bool enabled, int keepAliveTime, int keepAliveInterval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTcpKeepAlive(bool enabled, int32 keepAliveTime, int32 keepAliveInterval) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ServicePoint.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetTcpKeepAlive (enabled As Boolean, keepAliveTime As Integer, keepAliveInterval As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetTcpKeepAlive(bool enabled, int keepAliveTime, int keepAliveInterval);" />
      <MemberSignature Language="F#" Value="member this.SetTcpKeepAlive : bool * int * int -&gt; unit" Usage="servicePoint.SetTcpKeepAlive (enabled, keepAliveTime, keepAliveInterval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enabled" Type="System.Boolean" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="keepAliveTime" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="keepAliveInterval" Type="System.Int32" Index="2" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="enabled"><span data-ttu-id="102d6-208">如果设置为 true，则将使用指定的 <paramref name="keepAliveTime" />和 <paramref name="keepAliveInterval" /> 值启用 TCP 连接上的 TCP keep-alive 选项。</span><span class="sxs-lookup"><span data-stu-id="102d6-208">If set to true, then the TCP keep-alive option on a TCP connection will be enabled using the specified <paramref name="keepAliveTime" /> and <paramref name="keepAliveInterval" /> values.</span></span>  
  
<span data-ttu-id="102d6-209">如果设置为 false，则将禁用 TCP keep-alive 选项，并忽略剩余参数。</span><span class="sxs-lookup"><span data-stu-id="102d6-209">If set to false, then the TCP keep-alive option is disabled and the remaining parameters are ignored.</span></span>  
  
<span data-ttu-id="102d6-210">默认值是 False。</span><span class="sxs-lookup"><span data-stu-id="102d6-210">The default value is false.</span></span></param>
        <param name="keepAliveTime"><span data-ttu-id="102d6-211">指定发送第一个 keep-alive 数据包之前没有活动的超时时间（以毫秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="102d6-211">Specifies the timeout, in milliseconds, with no activity until the first keep-alive packet is sent.</span></span>  
  
<span data-ttu-id="102d6-212">该值必须大于 0。</span><span class="sxs-lookup"><span data-stu-id="102d6-212">The value must be greater than 0.</span></span>  <span data-ttu-id="102d6-213">如果传递的值小于或等于零，则会引发 <see cref="T:System.ArgumentOutOfRangeException" />。</span><span class="sxs-lookup"><span data-stu-id="102d6-213">If a value of less than or equal to zero is passed an <see cref="T:System.ArgumentOutOfRangeException" /> is thrown.</span></span></param>
        <param name="keepAliveInterval"><span data-ttu-id="102d6-214">指定当未收到确认消息时发送连续 keep-alive 数据包之间的间隔（以毫秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="102d6-214">Specifies the interval, in milliseconds, between when successive keep-alive packets are sent if no acknowledgement is received.</span></span>  
  
<span data-ttu-id="102d6-215">该值必须大于 0。</span><span class="sxs-lookup"><span data-stu-id="102d6-215">The value must be greater than 0.</span></span>  <span data-ttu-id="102d6-216">如果传递的值小于或等于零，则会引发 <see cref="T:System.ArgumentOutOfRangeException" />。</span><span class="sxs-lookup"><span data-stu-id="102d6-216">If a value of less than or equal to zero is passed an <see cref="T:System.ArgumentOutOfRangeException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="102d6-217">对 TCP 连接启用或禁用 keep-alive 选项。</span><span class="sxs-lookup"><span data-stu-id="102d6-217">Enables or disables the keep-alive option on a TCP connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="102d6-218">应用程序可以请求 TCP/IP 提供程序允许在 TCP 连接上使用 keep-alive 数据包。</span><span class="sxs-lookup"><span data-stu-id="102d6-218">An application can request that a TCP/IP provider enable the use of keep-alive packets on a TCP connection.</span></span> <span data-ttu-id="102d6-219">默认情况下，禁用 TCP 连接上的 keep-alive 数据包。</span><span class="sxs-lookup"><span data-stu-id="102d6-219">The default is that the use of keep-alive packets on a TCP connection is disabled.</span></span>  
  
 <span data-ttu-id="102d6-220">初始化 TCP 套接字时，默认设置会将 keep-alive 超时设置为2小时，将 keep-alive 间隔设置为1秒。</span><span class="sxs-lookup"><span data-stu-id="102d6-220">The default settings when a TCP socket is initialized sets the keep-alive timeout to 2 hours and the keep-alive interval to 1 second.</span></span> <span data-ttu-id="102d6-221">`keepAliveTime`参数指定在发送第一个 keep-alive 数据包之前没有活动的超时值（以毫秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="102d6-221">The `keepAliveTime` parameter specifies the timeout, in milliseconds, with no activity until the first keep-alive packet is sent.</span></span> <span data-ttu-id="102d6-222">`keepAliveInterval`参数指定当未收到确认时发送连续 keep-alive 数据包之间的间隔（以毫秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="102d6-222">The `keepAliveInterval` parameter specifies the interval, in milliseconds, between when successive keep-alive packets are sent if no acknowledgement is received.</span></span> <span data-ttu-id="102d6-223">不能更改 keep-alive 探测的数目，并将其设置为10。</span><span class="sxs-lookup"><span data-stu-id="102d6-223">The number of keep-alive probes cannot be changed and is set to 10.</span></span>  
  
 <span data-ttu-id="102d6-224">如果 TCP 连接作为 keep-alive 的结果被删除，则 <xref:System.Net.Sockets.SocketError> 的将 <xref:System.Net.Sockets.SocketError.NetworkReset> 返回到套接字上正在进行的任何调用，并且任何后续调用都将失败，并返回 <xref:System.Net.Sockets.SocketError> <xref:System.Net.Sockets.SocketError.NotConnected> 。</span><span class="sxs-lookup"><span data-stu-id="102d6-224">If a TCP connection is dropped as the result of keep-alives, a <xref:System.Net.Sockets.SocketError> of <xref:System.Net.Sockets.SocketError.NetworkReset> is returned to any calls in progress on the socket, and any subsequent calls will fail with a <xref:System.Net.Sockets.SocketError> of <xref:System.Net.Sockets.SocketError.NotConnected>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="102d6-225">为 <paramref name="keepAliveTime" /> 或 <paramref name="keepAliveInterval" /> 参数指定的值小于等于 0.</span><span class="sxs-lookup"><span data-stu-id="102d6-225">The value specified for <paramref name="keepAliveTime" /> or <paramref name="keepAliveInterval" /> parameter is less than or equal to 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsPipelining">
      <MemberSignature Language="C#" Value="public bool SupportsPipelining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsPipelining" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.SupportsPipelining" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportsPipelining As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsPipelining { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsPipelining : bool" Usage="System.Net.ServicePoint.SupportsPipelining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="102d6-226">指示 <see cref="T:System.Net.ServicePoint" /> 对象是否支持管道连接。</span><span class="sxs-lookup"><span data-stu-id="102d6-226">Indicates whether the <see cref="T:System.Net.ServicePoint" /> object supports pipelined connections.</span></span></summary>
        <value><span data-ttu-id="102d6-227">如果 <see cref="T:System.Net.ServicePoint" /> 对象支持管道连接，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="102d6-227"><see langword="true" /> if the <see cref="T:System.Net.ServicePoint" /> object supports pipelined connections; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="102d6-228">流水线功能使客户端可以跨持久性连接发送多个请求，而无需等待来自服务器的每个响应。</span><span class="sxs-lookup"><span data-stu-id="102d6-228">Pipelining allows clients to send multiple requests across a persistent connection without waiting for each response from the server.</span></span> <span data-ttu-id="102d6-229">服务器按照收到请求的顺序来发送响应。</span><span class="sxs-lookup"><span data-stu-id="102d6-229">The server sends the responses in the same order as the requests were received.</span></span>  
  
 <span data-ttu-id="102d6-230">IETF RFC 2616 部分8.1.2.2 中详细介绍了管道。</span><span class="sxs-lookup"><span data-stu-id="102d6-230">Pipelining is described in detail in IETF RFC 2616 section 8.1.2.2.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="102d6-231">下面的代码示例显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="102d6-231">The following code example displays the value of this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#5)]
 [!code-csharp[System.Net.ServicePoint#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#5)]
 [!code-vb[System.Net.ServicePoint#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseNagleAlgorithm">
      <MemberSignature Language="C#" Value="public bool UseNagleAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseNagleAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.UseNagleAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property UseNagleAlgorithm As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseNagleAlgorithm { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseNagleAlgorithm : bool with get, set" Usage="System.Net.ServicePoint.UseNagleAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="102d6-232">获取或设置一个 <see cref="T:System.Boolean" /> 值，该值确定在此 <see cref="T:System.Net.ServicePoint" /> 对象所管理的连接上是否使用 Nagle 算法。</span><span class="sxs-lookup"><span data-stu-id="102d6-232">Gets or sets a <see cref="T:System.Boolean" /> value that determines whether the Nagle algorithm is used on connections managed by this <see cref="T:System.Net.ServicePoint" /> object.</span></span></summary>
        <value><span data-ttu-id="102d6-233">如果使用 Nagle 算法，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="102d6-233"><see langword="true" /> to use the Nagle algorithm; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="102d6-234">默认值是 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="102d6-234">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="102d6-235">Nagle 算法用于缓冲少量的数据，并将其作为单个数据包传输。</span><span class="sxs-lookup"><span data-stu-id="102d6-235">The Nagle algorithm is used to buffer small packets of data and transmit them as a single packet.</span></span> <span data-ttu-id="102d6-236">此过程（称为 "nagling"）广泛使用，因为它减少了传输的数据包数量并降低了每个数据包的开销。</span><span class="sxs-lookup"><span data-stu-id="102d6-236">This process, referred to as "nagling," is widely used because it reduces the number of packets transmitted and lowers the overhead per packet.</span></span>  
  
 <span data-ttu-id="102d6-237">更改此属性的值不会影响现有连接。</span><span class="sxs-lookup"><span data-stu-id="102d6-237">Changing the value of this property does not affect existing connections.</span></span> <span data-ttu-id="102d6-238">只会影响在更改后创建的新连接。</span><span class="sxs-lookup"><span data-stu-id="102d6-238">Only new connections created after the change are affected.</span></span>  
  
 <span data-ttu-id="102d6-239">在 IETF RFC 896 中，已完全介绍了 Nagle 算法。</span><span class="sxs-lookup"><span data-stu-id="102d6-239">The Nagle algorithm is fully described in IETF RFC 896.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="102d6-240">下面的代码示例显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="102d6-240">The following code example displays the value of this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#9](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#9)]
 [!code-csharp[System.Net.ServicePoint#9](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#9)]
 [!code-vb[System.Net.ServicePoint#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
