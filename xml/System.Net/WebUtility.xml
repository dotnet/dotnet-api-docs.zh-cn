<Type Name="WebUtility" FullName="System.Net.WebUtility">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2b75bdfe345bdd537c58447d20daf4ce59f95b4d" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86798192" /></Metadata><TypeSignature Language="C#" Value="public static class WebUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WebUtility extends System.Object" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebUtility" />
  <TypeSignature Language="VB.NET" Value="Public Class WebUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebUtility abstract sealed" />
  <TypeSignature Language="F#" Value="type WebUtility = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed WebUtility extends System.Object" FrameworkAlternate="netframework-4.5" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System" FromVersion="4.0.0.0" To="System.Runtime.Extensions" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Runtime.Extensions" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="15e3f-101">提供在处理 Web 请求时用于编码和解码 URL 的方法。</span><span class="sxs-lookup"><span data-stu-id="15e3f-101">Provides methods for encoding and decoding URLs when processing Web requests.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15e3f-102"><xref:System.Web.HttpUtility>类包含用于 HTML 编码字符串的编码和解码实用工具方法。</span><span class="sxs-lookup"><span data-stu-id="15e3f-102">The <xref:System.Web.HttpUtility> class contains encoding and decoding utility methods for use with HTML-encode strings.</span></span> <span data-ttu-id="15e3f-103"><xref:System.Uri?displayProperty=nameWithType>类还包含可用于类似用途的方法和属性。</span><span class="sxs-lookup"><span data-stu-id="15e3f-103">The <xref:System.Uri?displayProperty=nameWithType> class also contains methods and properties that can be used for similar purposes.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Uri" />
    <altmember cref="T:System.Web.HttpUtility" />
    <altmember cref="T:System.Web.HttpServerUtility" />
    <altmember cref="P:System.Web.HttpContext.Server" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/a2a4yykt(v=vs.100)"><span data-ttu-id="15e3f-104">如何：通过将 HTML 编码应用于字符串来防范 Web 应用程序中的脚本攻击</span><span class="sxs-lookup"><span data-stu-id="15e3f-104">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="HtmlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15e3f-105">将已经为 HTTP 传输进行过 HTML 编码的字符串转换为已解码的字符串。</span><span class="sxs-lookup"><span data-stu-id="15e3f-105">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static string HtmlDecode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlDecode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlDecode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlDecode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member HtmlDecode : string -&gt; string" Usage="System.Net.WebUtility.HtmlDecode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="15e3f-106">要解码的字符串。</span><span class="sxs-lookup"><span data-stu-id="15e3f-106">The string to decode.</span></span></param>
        <summary><span data-ttu-id="15e3f-107">将已经为 HTTP 传输进行过 HTML 编码的字符串转换为已解码的字符串。</span><span class="sxs-lookup"><span data-stu-id="15e3f-107">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span></span></summary>
        <returns><span data-ttu-id="15e3f-108">已解码的字符串。</span><span class="sxs-lookup"><span data-stu-id="15e3f-108">A decoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15e3f-109">如果传入 HTTP 流中的字符（如空格和标点符号），则可能会在接收端对其进行错误解释。</span><span class="sxs-lookup"><span data-stu-id="15e3f-109">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="15e3f-110">HTML 编码将 HTML 中不允许的字符转换为字符实体等效项;HTML 解码反转编码。</span><span class="sxs-lookup"><span data-stu-id="15e3f-110">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="15e3f-111">例如，当嵌入到文本块中时，字符 `<` 和 `>` 将编码为 `&lt;` `&gt;` HTTP 传输和。</span><span class="sxs-lookup"><span data-stu-id="15e3f-111">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="15e3f-112">如果 `value` 参数为 `null` ，则返回的已解码字符串为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="15e3f-112">If the `value` parameter is `null`, then the returned decoded string is `null`.</span></span> <span data-ttu-id="15e3f-113">如果 `value` 参数为空字符串，则返回的已解码字符串为空字符串。</span><span class="sxs-lookup"><span data-stu-id="15e3f-113">If the `value` parameter is an empty string, then the returned decoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static void HtmlDecode (string? value, System.IO.TextWriter output);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlDecode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlDecode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlDecode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlDecode : string * System.IO.TextWriter -&gt; unit" Usage="System.Net.WebUtility.HtmlDecode (value, output)" />
      <MemberSignature Language="C#" Value="public static void HtmlDecode (string value, System.IO.TextWriter output);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="output" Type="System.IO.TextWriter" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="15e3f-114">要解码的字符串。</span><span class="sxs-lookup"><span data-stu-id="15e3f-114">The string to decode.</span></span></param>
        <param name="output"><span data-ttu-id="15e3f-115"><see cref="T:System.IO.TextWriter" /> 输出流。</span><span class="sxs-lookup"><span data-stu-id="15e3f-115">A <see cref="T:System.IO.TextWriter" /> stream of output.</span></span></param>
        <summary><span data-ttu-id="15e3f-116">将已经过 HTML 编码的字符串转换为已解码的字符串并将其发送给 <see cref="T:System.IO.TextWriter" /> 输出流。</span><span class="sxs-lookup"><span data-stu-id="15e3f-116">Converts a string that has been HTML-encoded into a decoded string, and sends the decoded string to a <see cref="T:System.IO.TextWriter" /> output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15e3f-117">如果传入 HTTP 流中的字符（如空格和标点符号），则可能会在接收端对其进行错误解释。</span><span class="sxs-lookup"><span data-stu-id="15e3f-117">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="15e3f-118">HTML 编码将 HTML 中不允许的字符转换为字符实体等效项;HTML 解码反转编码。</span><span class="sxs-lookup"><span data-stu-id="15e3f-118">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="15e3f-119">例如，当嵌入到文本块中时，字符 `<` 和 `>` 将编码为 `&lt;` `&gt;` HTTP 传输和。</span><span class="sxs-lookup"><span data-stu-id="15e3f-119">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15e3f-120">如果 <paramref name="output" /> 参数不为 <see langword="null" />，则 <paramref name="value" /> 参数不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="15e3f-120">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15e3f-121">将字符串转换为 HTML 编码字符串。</span><span class="sxs-lookup"><span data-stu-id="15e3f-121">Converts a string to an HTML-encoded string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string -&gt; string" Usage="System.Net.WebUtility.HtmlEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="15e3f-122">要编码的字符串。</span><span class="sxs-lookup"><span data-stu-id="15e3f-122">The string to encode.</span></span></param>
        <summary><span data-ttu-id="15e3f-123">将字符串转换为 HTML 编码字符串。</span><span class="sxs-lookup"><span data-stu-id="15e3f-123">Converts a string to an HTML-encoded string.</span></span></summary>
        <returns><span data-ttu-id="15e3f-124">已编码的字符串。</span><span class="sxs-lookup"><span data-stu-id="15e3f-124">An encoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15e3f-125">如果传入 HTTP 流中的字符（如空格和标点符号），则可能会在接收端对其进行错误解释。</span><span class="sxs-lookup"><span data-stu-id="15e3f-125">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="15e3f-126">HTML 编码将 HTML 中不允许的字符转换为字符实体等效项;HTML 解码反转编码。</span><span class="sxs-lookup"><span data-stu-id="15e3f-126">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="15e3f-127">例如，当嵌入到文本块中时，字符 `<` 和 `>` 将编码为 `&lt;` `&gt;` HTTP 传输和。</span><span class="sxs-lookup"><span data-stu-id="15e3f-127">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="15e3f-128">如果 `value` 参数为 `null` ，则返回的编码字符串为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="15e3f-128">If the `value` parameter is `null`, then the returned encoded string is `null`.</span></span> <span data-ttu-id="15e3f-129">如果 `value` 参数为空字符串，则返回的编码字符串为空字符串。</span><span class="sxs-lookup"><span data-stu-id="15e3f-129">If the `value` parameter is an empty string, then the returned encoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String)" />
        <altmember cref="T:System.Uri" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/a2a4yykt(v=vs.100)"><span data-ttu-id="15e3f-130">如何：通过将 HTML 编码应用于字符串来防范 Web 应用程序中的脚本攻击</span><span class="sxs-lookup"><span data-stu-id="15e3f-130">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static void HtmlEncode (string? value, System.IO.TextWriter output);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string * System.IO.TextWriter -&gt; unit" Usage="System.Net.WebUtility.HtmlEncode (value, output)" />
      <MemberSignature Language="C#" Value="public static void HtmlEncode (string value, System.IO.TextWriter output);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="output" Type="System.IO.TextWriter" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="15e3f-131">要编码的字符串。</span><span class="sxs-lookup"><span data-stu-id="15e3f-131">The string to encode.</span></span></param>
        <param name="output"><span data-ttu-id="15e3f-132"><see cref="T:System.IO.TextWriter" /> 输出流。</span><span class="sxs-lookup"><span data-stu-id="15e3f-132">A <see cref="T:System.IO.TextWriter" /> output stream.</span></span></param>
        <summary><span data-ttu-id="15e3f-133">将字符串转换为 HTML 编码的字符串，并以 <see cref="T:System.IO.TextWriter" /> 输出流的形式返回输出。</span><span class="sxs-lookup"><span data-stu-id="15e3f-133">Converts a string into an HTML-encoded string, and returns the output as a <see cref="T:System.IO.TextWriter" /> stream of output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15e3f-134">如果传入 HTTP 流中的字符（如空格和标点符号），则可能会在接收端对其进行错误解释。</span><span class="sxs-lookup"><span data-stu-id="15e3f-134">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="15e3f-135">HTML 编码将 HTML 中不允许的字符转换为字符实体等效项;HTML 解码反转编码。</span><span class="sxs-lookup"><span data-stu-id="15e3f-135">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="15e3f-136">例如，当嵌入到文本块中时，字符 `<` 和 `>` 将编码为 `&lt;` `&gt;` HTTP 传输和。</span><span class="sxs-lookup"><span data-stu-id="15e3f-136">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15e3f-137">如果 <paramref name="output" /> 参数不为 <see langword="null" />，则 <paramref name="value" /> 参数不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="15e3f-137">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/a2a4yykt(v=vs.100)"><span data-ttu-id="15e3f-138">如何：通过将 HTML 编码应用于字符串来防范 Web 应用程序中的脚本攻击</span><span class="sxs-lookup"><span data-stu-id="15e3f-138">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public static string UrlDecode (string encodedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(string encodedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (encodedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(System::String ^ encodedValue);" />
      <MemberSignature Language="F#" Value="static member UrlDecode : string -&gt; string" Usage="System.Net.WebUtility.UrlDecode encodedValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="encodedValue"><span data-ttu-id="15e3f-139">要进行解码的 URL 编码的字符串。</span><span class="sxs-lookup"><span data-stu-id="15e3f-139">A URL-encoded string to decode.</span></span></param>
        <summary><span data-ttu-id="15e3f-140">将已编码用于 URL 传输的字符串转换为解码的字符串。</span><span class="sxs-lookup"><span data-stu-id="15e3f-140">Converts a string that has been encoded for transmission in a URL into a decoded string.</span></span></summary>
        <returns><span data-ttu-id="15e3f-141">已解码的字符串。</span><span class="sxs-lookup"><span data-stu-id="15e3f-141">A decoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15e3f-142">如果传入 HTTP 流中的字符（如空格和标点符号），则可能会在接收端对其进行错误解释。</span><span class="sxs-lookup"><span data-stu-id="15e3f-142">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="15e3f-143">URL 编码将 URL 中不允许的字符转换为等效的十六进制转义序列。</span><span class="sxs-lookup"><span data-stu-id="15e3f-143">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="15e3f-144"><xref:System.Net.WebUtility.UrlEncode%2A>方法创建 URL 编码的字符串。</span><span class="sxs-lookup"><span data-stu-id="15e3f-144">The <xref:System.Net.WebUtility.UrlEncode%2A> method creates a URL-encoded string.</span></span>  
  
 <span data-ttu-id="15e3f-145">URL 解码会将十六进制转义序列替换为对应的 ASCII 字符等效项。</span><span class="sxs-lookup"><span data-stu-id="15e3f-145">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="15e3f-146">例如，当嵌入 URL 编码的文本块中时，转义序列 `%3c` 和 `%3e` 被解码为字符 `<` 和 `>` 。</span><span class="sxs-lookup"><span data-stu-id="15e3f-146">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlDecodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlDecodeToBytes (byte[] encodedValue, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlDecodeToBytes(unsigned int8[] encodedValue, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecodeToBytes (encodedValue As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlDecodeToBytes(cli::array &lt;System::Byte&gt; ^ encodedValue, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlDecodeToBytes : byte[] * int * int -&gt; byte[]" Usage="System.Net.WebUtility.UrlDecodeToBytes (encodedValue, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="encodedValue"><span data-ttu-id="15e3f-147">要进行解码的 URL 编码的 <see cref="T:System.Byte" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="15e3f-147">A URL-encoded <see cref="T:System.Byte" /> array to decode.</span></span></param>
        <param name="offset"><span data-ttu-id="15e3f-148">相对于要解码的 <see cref="T:System.Byte" /> 数组的开头的偏移量（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="15e3f-148">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to decode.</span></span></param>
        <param name="count"><span data-ttu-id="15e3f-149">要从 <see cref="T:System.Byte" /> 数组解码的计数（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="15e3f-149">The count, in bytes, to decode from the <see cref="T:System.Byte" /> array.</span></span></param>
        <summary><span data-ttu-id="15e3f-150">将为通过 URL 传输已编码的已编码字节数组转换为解码的字节数组。</span><span class="sxs-lookup"><span data-stu-id="15e3f-150">Converts an encoded byte array that has been encoded for transmission in a URL into a decoded byte array.</span></span></summary>
        <returns><span data-ttu-id="15e3f-151">一个已解码的 <see cref="T:System.Byte" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="15e3f-151">A decoded <see cref="T:System.Byte" /> array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15e3f-152">如果传入 HTTP 流中的字符（如空格和标点符号），则可能会在接收端对其进行错误解释。</span><span class="sxs-lookup"><span data-stu-id="15e3f-152">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="15e3f-153">URL 编码将 URL 中不允许的字符转换为等效的十六进制转义序列。</span><span class="sxs-lookup"><span data-stu-id="15e3f-153">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="15e3f-154"><xref:System.Net.WebUtility.UrlEncodeToBytes%2A>方法创建 URL 编码的字节数组。</span><span class="sxs-lookup"><span data-stu-id="15e3f-154">The <xref:System.Net.WebUtility.UrlEncodeToBytes%2A> method creates a URL-encoded byte array.</span></span>  
  
 <span data-ttu-id="15e3f-155">URL 解码会将十六进制转义序列替换为对应的 ASCII 字符等效项。</span><span class="sxs-lookup"><span data-stu-id="15e3f-155">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="15e3f-156">例如，当嵌入 URL 编码的文本块中时，转义序列 `%3c` 和 `%3e` 被解码为字符 `<` 和 `>` 。</span><span class="sxs-lookup"><span data-stu-id="15e3f-156">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string -&gt; string" Usage="System.Net.WebUtility.UrlEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="15e3f-157">要进行 URL 编码的文本。</span><span class="sxs-lookup"><span data-stu-id="15e3f-157">The text to URL-encode.</span></span></param>
        <summary><span data-ttu-id="15e3f-158">将文本字符串转换为 URL 编码的字符串。</span><span class="sxs-lookup"><span data-stu-id="15e3f-158">Converts a text string into a URL-encoded string.</span></span></summary>
        <returns><span data-ttu-id="15e3f-159">URL 编码的字符串。</span><span class="sxs-lookup"><span data-stu-id="15e3f-159">A URL-encoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15e3f-160">如果传入 HTTP 流中的字符（如空格和标点符号），则可能会在接收端对其进行错误解释。</span><span class="sxs-lookup"><span data-stu-id="15e3f-160">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="15e3f-161">URL 编码会将 URL 中不允许的字符替换为包含十六进制转义序列的字符实体等效项。</span><span class="sxs-lookup"><span data-stu-id="15e3f-161">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="15e3f-162">转换后的字符串应符合 UTF-8 格式。</span><span class="sxs-lookup"><span data-stu-id="15e3f-162">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="15e3f-163">URL 编码替换除字母、数字和以下标点符号之外的所有字符代码：</span><span class="sxs-lookup"><span data-stu-id="15e3f-163">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="15e3f-164">`-` (减号) </span><span class="sxs-lookup"><span data-stu-id="15e3f-164">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="15e3f-165">`_` (下划线) </span><span class="sxs-lookup"><span data-stu-id="15e3f-165">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="15e3f-166">`.` (期间) </span><span class="sxs-lookup"><span data-stu-id="15e3f-166">`.` (period)</span></span>  
  
-   <span data-ttu-id="15e3f-167">`!` (惊叹号) </span><span class="sxs-lookup"><span data-stu-id="15e3f-167">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="15e3f-168">`*` (星号) </span><span class="sxs-lookup"><span data-stu-id="15e3f-168">`*` (asterisk)</span></span>  
  
-   <span data-ttu-id="15e3f-169">`(` 和 `)` (左括号和右括号) </span><span class="sxs-lookup"><span data-stu-id="15e3f-169">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="15e3f-170">每个 "" (空间) 字符都转换为 `+` (加) 字符。</span><span class="sxs-lookup"><span data-stu-id="15e3f-170">Each ' ' (space) character is converted to a `+` (plus) character.</span></span>
 
 <span data-ttu-id="15e3f-171">例如，嵌入到要在 URL 中传输的文本块中时，字符 `<` 和 `>` 将编码为 `%3c` 和 `%3e` 。</span><span class="sxs-lookup"><span data-stu-id="15e3f-171">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="15e3f-172"><xref:System.Net.WebUtility.UrlDecode%2A>方法反转编码。</span><span class="sxs-lookup"><span data-stu-id="15e3f-172">The <xref:System.Net.WebUtility.UrlDecode%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeToBytes (byte[] value, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeToBytes(unsigned int8[] value, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeToBytes (value As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeToBytes(cli::array &lt;System::Byte&gt; ^ value, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlEncodeToBytes : byte[] * int * int -&gt; byte[]" Usage="System.Net.WebUtility.UrlEncodeToBytes (value, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="15e3f-173">要进行 URL 编码的 <see cref="T:System.Byte" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="15e3f-173">The <see cref="T:System.Byte" /> array to URL-encode.</span></span></param>
        <param name="offset"><span data-ttu-id="15e3f-174">相对于要编码的 <see cref="T:System.Byte" /> 数组的开头的偏移量（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="15e3f-174">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to encode.</span></span></param>
        <param name="count"><span data-ttu-id="15e3f-175">要从 <see cref="T:System.Byte" /> 数组编码的计数（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="15e3f-175">The count, in bytes, to encode from the <see cref="T:System.Byte" /> array.</span></span></param>
        <summary><span data-ttu-id="15e3f-176">将字节数组转换为 URL 编码的字节数组。</span><span class="sxs-lookup"><span data-stu-id="15e3f-176">Converts a byte array into a URL-encoded byte array.</span></span></summary>
        <returns><span data-ttu-id="15e3f-177">编码的 <see cref="T:System.Byte" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="15e3f-177">An encoded <see cref="T:System.Byte" /> array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15e3f-178">如果传入 HTTP 流中的字符（如空格和标点符号），则可能会在接收端对其进行错误解释。</span><span class="sxs-lookup"><span data-stu-id="15e3f-178">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="15e3f-179">URL 编码会将 URL 中不允许的字符替换为包含十六进制转义序列的字符实体等效项。</span><span class="sxs-lookup"><span data-stu-id="15e3f-179">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="15e3f-180">转换后的字符串应符合 UTF-8 格式。</span><span class="sxs-lookup"><span data-stu-id="15e3f-180">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="15e3f-181">URL 编码替换除字母、数字和以下标点符号之外的所有字符代码：</span><span class="sxs-lookup"><span data-stu-id="15e3f-181">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="15e3f-182">`-` (减号) </span><span class="sxs-lookup"><span data-stu-id="15e3f-182">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="15e3f-183">`_` (下划线) </span><span class="sxs-lookup"><span data-stu-id="15e3f-183">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="15e3f-184">`.` (期间) </span><span class="sxs-lookup"><span data-stu-id="15e3f-184">`.` (period)</span></span>  
  
-   <span data-ttu-id="15e3f-185">`!` (惊叹号) </span><span class="sxs-lookup"><span data-stu-id="15e3f-185">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="15e3f-186">`*` (星号) </span><span class="sxs-lookup"><span data-stu-id="15e3f-186">`*` (asterisk)</span></span>  
  
-   <span data-ttu-id="15e3f-187">`'` (单引号) </span><span class="sxs-lookup"><span data-stu-id="15e3f-187">`'` (single quotation mark)</span></span>  
  
-   <span data-ttu-id="15e3f-188">`(` 和 `)` (左括号和右括号) </span><span class="sxs-lookup"><span data-stu-id="15e3f-188">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="15e3f-189">例如，嵌入到要在 URL 中传输的文本块中时，字符 `<` 和 `>` 将编码为 `%3c` 和 `%3e` 。</span><span class="sxs-lookup"><span data-stu-id="15e3f-189">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="15e3f-190"><xref:System.Net.WebUtility.UrlDecodeToBytes%2A>方法反转编码。</span><span class="sxs-lookup"><span data-stu-id="15e3f-190">The <xref:System.Net.WebUtility.UrlDecodeToBytes%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
