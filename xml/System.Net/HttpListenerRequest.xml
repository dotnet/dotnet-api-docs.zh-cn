<Type Name="HttpListenerRequest" FullName="System.Net.HttpListenerRequest">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1550aadd119ded2897703f287945e73f8968a41e" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86799147" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpListenerRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpListenerRequest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.HttpListenerRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpListenerRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListenerRequest sealed" />
  <TypeSignature Language="F#" Value="type HttpListenerRequest = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.HttpListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Net.HttpListener" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="88d36-101">描述传入 <see cref="T:System.Net.HttpListener" /> 对象的 HTTP 请求。</span><span class="sxs-lookup"><span data-stu-id="88d36-101">Describes an incoming HTTP request to an <see cref="T:System.Net.HttpListener" /> object.</span></span> <span data-ttu-id="88d36-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="88d36-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d36-103">当客户端向) 对象处理 (URI 的统一资源标识符发出请求时 <xref:System.Net.HttpListener> ，会 <xref:System.Net.HttpListener> 提供一个对象， <xref:System.Net.HttpListenerContext> 其中包含有关发送到客户端的发送方、请求和响应的信息。</span><span class="sxs-lookup"><span data-stu-id="88d36-103">When a client makes a request to a Uniform Resource Identifier (URI) handled by an <xref:System.Net.HttpListener> object, the <xref:System.Net.HttpListener> provides a <xref:System.Net.HttpListenerContext> object that contains information about the sender, the request, and the response that is sent to the client.</span></span> <span data-ttu-id="88d36-104"><xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType>属性返回 <xref:System.Net.HttpListenerRequest> 描述请求的对象。</span><span class="sxs-lookup"><span data-stu-id="88d36-104">The <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType> property returns the <xref:System.Net.HttpListenerRequest> object that describes the request.</span></span>  
  
 <span data-ttu-id="88d36-105"><xref:System.Net.HttpListenerRequest>对象包含有关请求的信息，例如请求 <xref:System.Net.HttpListenerRequest.HttpMethod%2A> 字符串、 <xref:System.Net.HttpListenerRequest.UserAgent%2A> 字符串和请求正文数据 (参阅 <xref:System.Net.HttpListenerRequest.InputStream%2A> 属性) 。</span><span class="sxs-lookup"><span data-stu-id="88d36-105">The <xref:System.Net.HttpListenerRequest> object contains information about the request, such as the request <xref:System.Net.HttpListenerRequest.HttpMethod%2A> string, <xref:System.Net.HttpListenerRequest.UserAgent%2A> string, and request body data (see the <xref:System.Net.HttpListenerRequest.InputStream%2A> property).</span></span>  
  
 <span data-ttu-id="88d36-106">若要答复请求，必须使用属性获取关联的响应 <xref:System.Net.HttpListenerContext.Response%2A> 。</span><span class="sxs-lookup"><span data-stu-id="88d36-106">To reply to the request, you must get the associated response using the <xref:System.Net.HttpListenerContext.Response%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88d36-107">下面的代码示例演示如何接收和响应 <xref:System.Net.HttpListenerRequest> 。</span><span class="sxs-lookup"><span data-stu-id="88d36-107">The following code example demonstrates how to receive and respond to a <xref:System.Net.HttpListenerRequest>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
 [!code-vb[Net_Listener_Basic#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.HttpListener" />
    <altmember cref="T:System.Net.HttpListenerContext" />
    <altmember cref="T:System.Net.HttpListenerResponse" />
  </Docs>
  <Members>
    <Member MemberName="AcceptTypes">
      <MemberSignature Language="C#" Value="public string[] AcceptTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AcceptTypes" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.AcceptTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcceptTypes As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AcceptTypes { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AcceptTypes : string[]" Usage="System.Net.HttpListenerRequest.AcceptTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d36-108">获取客户端接受的 MIME 类型。</span><span class="sxs-lookup"><span data-stu-id="88d36-108">Gets the MIME types accepted by the client.</span></span></summary>
        <value><span data-ttu-id="88d36-109">一个 <see cref="T:System.String" /> 数组，该数组包含在请求的 <see langword="Accept" /> 标头中指定的类型名称；如果客户端请求不包括 <see langword="null" /> 标头，则为 <see langword="Accept" />。</span><span class="sxs-lookup"><span data-stu-id="88d36-109">A <see cref="T:System.String" /> array that contains the type names specified in the request's <see langword="Accept" /> header or <see langword="null" /> if the client request did not include an <see langword="Accept" /> header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d36-110">`Accept`标头是一串以空格分隔的多用途 Internet 邮件扩展 (MIME) 类型名称 (例如， `image/jpeg`) ，指示客户端准备接受并在响应中处理的 MIME 类型。</span><span class="sxs-lookup"><span data-stu-id="88d36-110">The `Accept` header is a string of space-separated Multipurpose Internet Mail Extensions (MIME) type names (for example, `image/jpeg`), which indicate the MIME types that the client is prepared to accept and process in a response.</span></span> <span data-ttu-id="88d36-111">该 `*/*` 条目指示客户端接受任何 MIME 类型。</span><span class="sxs-lookup"><span data-stu-id="88d36-111">The `*/*` entry indicates that the client accepts any MIME type.</span></span> <span data-ttu-id="88d36-112">有关标头的详细说明 `Accept` ，请参阅 RFC 2616，网址为 [https://www.rfc-editor.org](https://www.rfc-editor.org/) 。</span><span class="sxs-lookup"><span data-stu-id="88d36-112">For a detailed description of the `Accept` header, see RFC 2616, available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
 <span data-ttu-id="88d36-113">有关请求标头的完整列表，请参见 <xref:System.Net.HttpRequestHeader> 枚举。</span><span class="sxs-lookup"><span data-stu-id="88d36-113">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88d36-114">下面的代码示例演示如何使用此属性。</span><span class="sxs-lookup"><span data-stu-id="88d36-114">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
 [!code-vb[Net_Listener_Basic#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="BeginGetClientCertificate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginGetClientCertificate (AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginGetClientCertificate(class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginGetClientCertificate (requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginGetClientCertificate(AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginGetClientCertificate : AsyncCallback * obj -&gt; IAsyncResult" Usage="httpListenerRequest.BeginGetClientCertificate (requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="requestCallback"><span data-ttu-id="88d36-115">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用操作完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="88d36-115">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="88d36-116">一个用户定义对象，其中包含操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="88d36-116">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="88d36-117">操作完成后，此对象会被传递给回叫委托。</span><span class="sxs-lookup"><span data-stu-id="88d36-117">This object is passed to the callback delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="88d36-118">开始对客户端的 X.509 v.3 证书的异步请求。</span><span class="sxs-lookup"><span data-stu-id="88d36-118">Begins an asynchronous request for the client's X.509 v.3 certificate.</span></span></summary>
        <returns><span data-ttu-id="88d36-119">指示操作的状态的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="88d36-119">An <see cref="T:System.IAsyncResult" /> that indicates the status of the operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificateError">
      <MemberSignature Language="C#" Value="public int ClientCertificateError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ClientCertificateError" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ClientCertificateError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificateError As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ClientCertificateError { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificateError : int" Usage="System.Net.HttpListenerRequest.ClientCertificateError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d36-120">获取一个错误代码，该代码标识的问题涉及客户端提供的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" />。</span><span class="sxs-lookup"><span data-stu-id="88d36-120">Gets an error code that identifies a problem with the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> provided by the client.</span></span></summary>
        <value><span data-ttu-id="88d36-121">包含 Windows 错误代码的 <see cref="T:System.Int32" /> 值。</span><span class="sxs-lookup"><span data-stu-id="88d36-121">An <see cref="T:System.Int32" /> value that contains a Windows error code.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d36-122">此属性包含一个 Windows 错误代码，该代码由安全通道 () Schannel 返回， (SSPI) ，后者用于验证证书。</span><span class="sxs-lookup"><span data-stu-id="88d36-122">This property contains a Windows error code returned by the Secure Channel (Schannel) Security Support Provider Interface (SSPI), which is used to validate the certificate.</span></span> <span data-ttu-id="88d36-123">有关对 Schannel 的 SSPI 支持的详细信息，请参阅 [使用 Schannel 创建安全连接](/windows/win32/secauthn/creating-a-secure-connection-using-schannel)。</span><span class="sxs-lookup"><span data-stu-id="88d36-123">For more information about SSPI support for Schannel, see [Creating a Secure Connection Using Schannel](/windows/win32/secauthn/creating-a-secure-connection-using-schannel).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88d36-124">下面的代码示例检查此属性以确定请求是否包含有效的客户端证书。</span><span class="sxs-lookup"><span data-stu-id="88d36-124">The following code example checks this property to determine whether the request includes a valid client certificate.</span></span>  
  
 [!code-csharp[NCLListener#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#3)]
 [!code-vb[NCLListener#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="88d36-125">尚未通过调用 <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /> 或 <see cref="M:System.Net.HttpListenerRequest.GetClientCertificate" /> 方法初始化客户端证书</span><span class="sxs-lookup"><span data-stu-id="88d36-125">The client certificate has not been initialized yet by a call to the <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /> or <see cref="M:System.Net.HttpListenerRequest.GetClientCertificate" /> methods</span></span> 
<span data-ttu-id="88d36-126">- 或 -</span><span class="sxs-lookup"><span data-stu-id="88d36-126">-or -</span></span> 
<span data-ttu-id="88d36-127">操作仍在进行中。</span><span class="sxs-lookup"><span data-stu-id="88d36-127">The operation is still in progress.</span></span></exception>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding ContentEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ ContentEncoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentEncoding : System.Text.Encoding" Usage="System.Net.HttpListenerRequest.ContentEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d36-128">获取可用于随请求发送的数据的内容编码。</span><span class="sxs-lookup"><span data-stu-id="88d36-128">Gets the content encoding that can be used with data sent with the request.</span></span></summary>
        <value><span data-ttu-id="88d36-129">一个 <see cref="T:System.Text.Encoding" /> 对象，适于 <see cref="P:System.Net.HttpListenerRequest.InputStream" /> 属性中的数据使用。</span><span class="sxs-lookup"><span data-stu-id="88d36-129">An <see cref="T:System.Text.Encoding" /> object suitable for use with the data in the <see cref="P:System.Net.HttpListenerRequest.InputStream" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d36-130"><xref:System.Text.Encoding>对象可用于将字节序列转换为字符集 (代码页) 和字符转换为字节序列。</span><span class="sxs-lookup"><span data-stu-id="88d36-130">An <xref:System.Text.Encoding> object can be used to convert byte sequences into character sets (code pages) and characters into byte sequences.</span></span> <span data-ttu-id="88d36-131">此属性使用来自标头的字符集值 `Content-Type` 来确定编码。</span><span class="sxs-lookup"><span data-stu-id="88d36-131">This property uses the charset value from the `Content-Type` header to determine the encoding.</span></span> <span data-ttu-id="88d36-132">如果该信息不可用，则此属性返回 <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="88d36-132">If that information is not available, this property returns <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88d36-133">下面的代码示例演示如何使用 <xref:System.Net.HttpListenerRequest.ContentEncoding%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="88d36-133">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.ContentEncoding%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
 [!code-vb[Net_Listener_Basic#16](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ContentLength64">
      <MemberSignature Language="C#" Value="public long ContentLength64 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength64" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ContentLength64" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentLength64 As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ContentLength64 { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength64 : int64" Usage="System.Net.HttpListenerRequest.ContentLength64" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d36-134">获取包含在请求中的正文数据的长度。</span><span class="sxs-lookup"><span data-stu-id="88d36-134">Gets the length of the body data included in the request.</span></span></summary>
        <value><span data-ttu-id="88d36-135">请求的 <see langword="Content-Length" /> 标头中的值。</span><span class="sxs-lookup"><span data-stu-id="88d36-135">The value from the request's <see langword="Content-Length" /> header.</span></span> <span data-ttu-id="88d36-136">如果内容长度未知，则此值为 -1。</span><span class="sxs-lookup"><span data-stu-id="88d36-136">This value is -1 if the content length is not known.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d36-137">`Content-Length`标头表示请求随附的正文数据的长度（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="88d36-137">The `Content-Length` header expresses the length, in bytes, of the body data that accompanies the request.</span></span>  
  
 <span data-ttu-id="88d36-138">有关请求标头的完整列表，请参见 <xref:System.Net.HttpRequestHeader> 枚举。</span><span class="sxs-lookup"><span data-stu-id="88d36-138">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88d36-139">下面的代码示例在 <xref:System.Net.HttpListenerRequest.ContentLength64%2A> 处理正文数据时使用属性。</span><span class="sxs-lookup"><span data-stu-id="88d36-139">The following code example uses the <xref:System.Net.HttpListenerRequest.ContentLength64%2A> property while processing body data.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
 [!code-vb[Net_Listener_Basic#16](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string" Usage="System.Net.HttpListenerRequest.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d36-140">获取包含在请求中的正文数据的 MIME 类型。</span><span class="sxs-lookup"><span data-stu-id="88d36-140">Gets the MIME type of the body data included in the request.</span></span></summary>
        <value><span data-ttu-id="88d36-141"><see cref="T:System.String" />，包含请求的 <see langword="Content-Type" /> 标头的文本。</span><span class="sxs-lookup"><span data-stu-id="88d36-141">A <see cref="T:System.String" /> that contains the text of the request's <see langword="Content-Type" /> header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d36-142">如果客户端在请求中包含正文数据，则会在标头中声明正文数据的多用途 Internet 邮件扩展 (MIME) 类型 `Content-Type` 。</span><span class="sxs-lookup"><span data-stu-id="88d36-142">If a client includes body data in a request, it declares the Multipurpose Internet Mail Extensions (MIME) type of the body data in the `Content-Type` header.</span></span> <span data-ttu-id="88d36-143">例如，使用方法从 Web 窗体返回的数据的默认 MIME 类型 `POST` 是 `application/x-www-form-urlencoded` 。</span><span class="sxs-lookup"><span data-stu-id="88d36-143">For example, the default MIME type of data returned from a Web form using the `POST` method is `application/x-www-form-urlencoded`.</span></span>  
  
 <span data-ttu-id="88d36-144">有关请求标头的完整列表，请参阅 <xref:System.Net.HttpRequestHeader> 提供的枚举和 RFC 2616 [https://www.rfc-editor.org](https://www.rfc-editor.org/) 。</span><span class="sxs-lookup"><span data-stu-id="88d36-144">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration and RFC 2616, available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
 <span data-ttu-id="88d36-145"><xref:System.Net.HttpListenerRequest.ContentType%2A>如果请求中没有标头，则为 null `Content-Type` 。</span><span class="sxs-lookup"><span data-stu-id="88d36-145">The <xref:System.Net.HttpListenerRequest.ContentType%2A> is null when there is no `Content-Type` header in the request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88d36-146">下面的代码示例演示如何使用此属性。</span><span class="sxs-lookup"><span data-stu-id="88d36-146">The following code example demonstrates how to use this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
 [!code-vb[Net_Listener_Basic#16](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public System.Net.CookieCollection Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieCollection Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cookies As CookieCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::CookieCollection ^ Cookies { System::Net::CookieCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cookies : System.Net.CookieCollection" Usage="System.Net.HttpListenerRequest.Cookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.CookieCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d36-147">获取随请求发送的 Cookie。</span><span class="sxs-lookup"><span data-stu-id="88d36-147">Gets the cookies sent with the request.</span></span></summary>
        <value><span data-ttu-id="88d36-148"><see cref="T:System.Net.CookieCollection" /> 包含伴随请求的 Cookie。</span><span class="sxs-lookup"><span data-stu-id="88d36-148">A <see cref="T:System.Net.CookieCollection" /> that contains cookies that accompany the request.</span></span> <span data-ttu-id="88d36-149">如果请求不包含 Cookie，则此属性返回空集合。</span><span class="sxs-lookup"><span data-stu-id="88d36-149">This property returns an empty collection if the request does not contain cookies.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d36-150">Cookie 是存储在本地 (客户端) 计算机上的 Web 服务器的名称/值文本数据。</span><span class="sxs-lookup"><span data-stu-id="88d36-150">A cookie is name/value text data from a Web server that is stored on the local (client) computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88d36-151">下面的代码示例显示与请求一起发送的 cookie 的值。</span><span class="sxs-lookup"><span data-stu-id="88d36-151">The following code example displays the values of cookies sent with the request.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#18](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#18)]  
 [!code-vb[Net_Listener_Basic#18](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="EndGetClientCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 EndGetClientCertificate (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.X509Certificates.X509Certificate2 EndGetClientCertificate(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGetClientCertificate (asyncResult As IAsyncResult) As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::X509Certificates::X509Certificate2 ^ EndGetClientCertificate(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndGetClientCertificate : IAsyncResult -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="httpListenerRequest.EndGetClientCertificate asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="88d36-152">证书的挂起请求。</span><span class="sxs-lookup"><span data-stu-id="88d36-152">The pending request for the certificate.</span></span></param>
        <summary><span data-ttu-id="88d36-153">结束对客户端的 X.509 v.3 证书的异步请求。</span><span class="sxs-lookup"><span data-stu-id="88d36-153">Ends an asynchronous request for the client's X.509 v.3 certificate.</span></span></summary>
        <returns><span data-ttu-id="88d36-154">操作启动时返回的 <see cref="T:System.IAsyncResult" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="88d36-154">The <see cref="T:System.IAsyncResult" /> object that is returned when the operation started.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88d36-155"><paramref name="asyncResult" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="88d36-155"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88d36-156"><paramref name="asyncResult" />不是通过调用获取的 <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /> <paramref name="e" /> 。</span><span class="sxs-lookup"><span data-stu-id="88d36-156"><paramref name="asyncResult" /> was not obtained by calling <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /><paramref name="e" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="88d36-157">已为 <paramref name="asyncResult" /> 标识的操作调用了此方法。</span><span class="sxs-lookup"><span data-stu-id="88d36-157">This method was already called for the operation identified by <paramref name="asyncResult" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 GetClientCertificate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.X509Certificates.X509Certificate2 GetClientCertificate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.GetClientCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClientCertificate () As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::X509Certificates::X509Certificate2 ^ GetClientCertificate();" />
      <MemberSignature Language="F#" Value="member this.GetClientCertificate : unit -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="httpListenerRequest.GetClientCertificate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="88d36-158">检索客户端的 X.509 v.3 证书。</span><span class="sxs-lookup"><span data-stu-id="88d36-158">Retrieves the client's X.509 v.3 certificate.</span></span></summary>
        <returns><span data-ttu-id="88d36-159">一个 <see cref="N:System.Security.Cryptography.X509Certificates" /> 对象，其中包含客户端的 X.509 v.3 证书。</span><span class="sxs-lookup"><span data-stu-id="88d36-159">A <see cref="N:System.Security.Cryptography.X509Certificates" /> object that contains the client's X.509 v.3 certificate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d36-160">此方法会一直阻止，直到检索到证书。</span><span class="sxs-lookup"><span data-stu-id="88d36-160">This method blocks until the certificate is retrieved.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="88d36-161">对此方法的一个调用（以检索客户端的 X.509 v.3 证书）正在进行，因此无法进行对此方法的另一个调用。</span><span class="sxs-lookup"><span data-stu-id="88d36-161">A call to this method to retrieve the client's X.509 v.3 certificate is in progress and therefore another call to this method cannot be made.</span></span></exception>
        <altmember cref="N:System.Security.Cryptography.X509Certificates" />
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt; GetClientCertificateAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Security.Cryptography.X509Certificates.X509Certificate2&gt; GetClientCertificateAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.GetClientCertificateAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClientCertificateAsync () As Task(Of X509Certificate2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Security::Cryptography::X509Certificates::X509Certificate2 ^&gt; ^ GetClientCertificateAsync();" />
      <MemberSignature Language="F#" Value="member this.GetClientCertificateAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt;" Usage="httpListenerRequest.GetClientCertificateAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="88d36-162">以异步操作检索客户端的 X.509 v.3 证书。</span><span class="sxs-lookup"><span data-stu-id="88d36-162">Retrieves the client's X.509 v.3 certificate as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="88d36-163">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="88d36-163">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="88d36-164">任务对象上的 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性返回包含客户端的 X.509 v.3 证书的 <see cref="N:System.Security.Cryptography.X509Certificates" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="88d36-164">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns a <see cref="N:System.Security.Cryptography.X509Certificates" /> object that contains the client's X.509 v.3 certificate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d36-165">此操作不会阻止。</span><span class="sxs-lookup"><span data-stu-id="88d36-165">This operation will not block.</span></span> <span data-ttu-id="88d36-166">检索到 <xref:System.Threading.Tasks.Task%601> 证书后，将完成返回的对象。</span><span class="sxs-lookup"><span data-stu-id="88d36-166">The returned <xref:System.Threading.Tasks.Task%601> object will complete when the certificate has been retrieved.</span></span>  
  
 <span data-ttu-id="88d36-167">如果调用此方法以检索客户端的 x.509 的第3个证书，则无法进行对此方法的另一次调用。</span><span class="sxs-lookup"><span data-stu-id="88d36-167">If a call to this method to retrieve the client's X.509 v.3 certificate is in progress, then another call to this method cannot be made.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Security.Cryptography.X509Certificates" />
      </Docs>
    </Member>
    <Member MemberName="HasEntityBody">
      <MemberSignature Language="C#" Value="public bool HasEntityBody { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasEntityBody" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.HasEntityBody" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasEntityBody As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasEntityBody { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasEntityBody : bool" Usage="System.Net.HttpListenerRequest.HasEntityBody" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d36-168">获取一个 <see cref="T:System.Boolean" /> 值，该值指示请求是否有关联的正文数据。</span><span class="sxs-lookup"><span data-stu-id="88d36-168">Gets a <see cref="T:System.Boolean" /> value that indicates whether the request has associated body data.</span></span></summary>
        <value><span data-ttu-id="88d36-169">如果请求有关联的正文数据，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="88d36-169"><see langword="true" /> if the request has associated body data; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d36-170">例如，使用方法将数据发送到服务器的请求 `POST` 应具有实体正文。</span><span class="sxs-lookup"><span data-stu-id="88d36-170">A request that sends data to the server using the `POST` method, for example, should have an entity body.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88d36-171">下面的代码示例演示如何使用此属性。</span><span class="sxs-lookup"><span data-stu-id="88d36-171">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
 [!code-vb[Net_Listener_Basic#16](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Headers { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Collections.Specialized.NameValueCollection" Usage="System.Net.HttpListenerRequest.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d36-172">获取在请求中发送的标头名称/值对的集合。</span><span class="sxs-lookup"><span data-stu-id="88d36-172">Gets the collection of header name/value pairs sent in the request.</span></span></summary>
        <value><span data-ttu-id="88d36-173"><see cref="T:System.Net.WebHeaderCollection" /> 包含的 HTTP 标头包括在请求中。</span><span class="sxs-lookup"><span data-stu-id="88d36-173">A <see cref="T:System.Net.WebHeaderCollection" /> that contains the HTTP headers included in the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d36-174">请求标头包含元数据信息。</span><span class="sxs-lookup"><span data-stu-id="88d36-174">Request headers contain metadata information.</span></span> <span data-ttu-id="88d36-175">例如，标头可以包含将客户端引用到服务器的资源的统一资源标识符 (URI) ，客户端使用的用户代理的标识，以及响应正文中数据的可接受 MIME 类型。</span><span class="sxs-lookup"><span data-stu-id="88d36-175">For example, headers can contain the Uniform Resource Identifier (URI) of the resource that referred the client to the server, the identity of the user agent employed by the client, and the acceptable MIME types for data in the response body.</span></span>  
  
 <span data-ttu-id="88d36-176">有关请求标头的完整列表，请参见 <xref:System.Net.HttpRequestHeader> 枚举。</span><span class="sxs-lookup"><span data-stu-id="88d36-176">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88d36-177">下面的代码示例显示给定对象中的所有信息 <xref:System.Net.WebHeaderCollection> 。</span><span class="sxs-lookup"><span data-stu-id="88d36-177">The following code example displays all the information in a given <xref:System.Net.WebHeaderCollection> object.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#21](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#21)]  
 [!code-vb[Net_Listener_Basic#21](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="HttpMethod">
      <MemberSignature Language="C#" Value="public string HttpMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HttpMethod" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.HttpMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HttpMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HttpMethod { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HttpMethod : string" Usage="System.Net.HttpListenerRequest.HttpMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d36-178">获取由客户端指定的 HTTP 方法。</span><span class="sxs-lookup"><span data-stu-id="88d36-178">Gets the HTTP method specified by the client.</span></span></summary>
        <value><span data-ttu-id="88d36-179"><see cref="T:System.String" /> 包含的方法用于请求中。</span><span class="sxs-lookup"><span data-stu-id="88d36-179">A <see cref="T:System.String" /> that contains the method used in the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d36-180">HTTP 方法通常获取或发布，具体取决于客户端所需的操作。</span><span class="sxs-lookup"><span data-stu-id="88d36-180">The HTTP method is typically GET or POST, depending on the action desired by the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88d36-181">下面的代码示例演示如何使用此属性。</span><span class="sxs-lookup"><span data-stu-id="88d36-181">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
 [!code-vb[Net_Listener_Basic#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="InputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream InputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream InputStream" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.InputStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ InputStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputStream : System.IO.Stream" Usage="System.Net.HttpListenerRequest.InputStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d36-182">获取包含由客户端发送的正文数据的流。</span><span class="sxs-lookup"><span data-stu-id="88d36-182">Gets a stream that contains the body data sent by the client.</span></span></summary>
        <value><span data-ttu-id="88d36-183">一个可读的 <see cref="T:System.IO.Stream" /> 对象，该对象包含客户端在请求正文中发送的字节。</span><span class="sxs-lookup"><span data-stu-id="88d36-183">A readable <see cref="T:System.IO.Stream" /> object that contains the bytes sent by the client in the body of the request.</span></span> <span data-ttu-id="88d36-184">如果没有随请求发送任何数据，则此属性返回 <see cref="F:System.IO.Stream.Null" />。</span><span class="sxs-lookup"><span data-stu-id="88d36-184">This property returns <see cref="F:System.IO.Stream.Null" /> if no data is sent with the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d36-185">如果客户端传输数据 (例如，使用 HTTP `POST` 方法) ，则此方法返回的流包含这些数据。</span><span class="sxs-lookup"><span data-stu-id="88d36-185">If the client transmits data (for example, using the HTTP `POST` method), the stream returned by this method contains that data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="88d36-186">关闭请求不会关闭此属性返回的流。</span><span class="sxs-lookup"><span data-stu-id="88d36-186">Closing the request does not close the stream returned by this property.</span></span> <span data-ttu-id="88d36-187">如果不再需要该流，则应通过调用方法将其关闭 <xref:System.IO.Stream.Close%2A> 。</span><span class="sxs-lookup"><span data-stu-id="88d36-187">When you no longer need the stream, you should close it by calling the <xref:System.IO.Stream.Close%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88d36-188">下面的代码示例演示如何使用此属性来读取与请求一起发送的数据。</span><span class="sxs-lookup"><span data-stu-id="88d36-188">The following code example demonstrates using this property to read the data sent with a request.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
 [!code-vb[Net_Listener_Basic#16](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#16)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="88d36-189">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="88d36-189">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="88d36-190">有关详细信息，请参阅 [.NET Framework 中的网络跟踪](/dotnet/framework/network-programming/network-tracing)。</span><span class="sxs-lookup"><span data-stu-id="88d36-190">For more information, see [Network Tracing in the .NET Framework](/dotnet/framework/network-programming/network-tracing).</span></span></para></block>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Net.HttpListenerRequest.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.MonoTODO("Always returns false")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.MonoTODO("Always returns false")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d36-191">获取一个 <see cref="T:System.Boolean" /> 值，该值指示发送此请求的客户端是否经过身份验证。</span><span class="sxs-lookup"><span data-stu-id="88d36-191">Gets a <see cref="T:System.Boolean" /> value that indicates whether the client sending this request is authenticated.</span></span></summary>
        <value><span data-ttu-id="88d36-192">如果客户端已经过身份验证，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="88d36-192"><see langword="true" /> if the client was authenticated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d36-193">应用程序使用或属性请求客户端身份验证 <xref:System.Net.HttpListener.AuthenticationSchemes%2A> <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> 。</span><span class="sxs-lookup"><span data-stu-id="88d36-193">Your application requests client authentication using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> or <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property.</span></span>  
  
 <span data-ttu-id="88d36-194">应用程序不会接收 <xref:System.Net.HttpListenerContext> 来自未成功通过身份验证的客户端发出的请求。</span><span class="sxs-lookup"><span data-stu-id="88d36-194">Your application does not receive an <xref:System.Net.HttpListenerContext> for requests from clients that are not successfully authenticated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88d36-195">下面的代码示例显示属性的值 <xref:System.Net.HttpListenerRequest.IsAuthenticated%2A> 。</span><span class="sxs-lookup"><span data-stu-id="88d36-195">The following code example displays the value of the <xref:System.Net.HttpListenerRequest.IsAuthenticated%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
 [!code-vb[Net_Listener_Basic#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsLocal">
      <MemberSignature Language="C#" Value="public bool IsLocal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocal" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsLocal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLocal { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLocal : bool" Usage="System.Net.HttpListenerRequest.IsLocal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d36-196">获取 <see cref="T:System.Boolean" /> 值，该值指示该请求是否来自本地计算机。</span><span class="sxs-lookup"><span data-stu-id="88d36-196">Gets a <see cref="T:System.Boolean" /> value that indicates whether the request is sent from the local computer.</span></span></summary>
        <value><span data-ttu-id="88d36-197">如果发出请求的计算机就是提供该请求的 <see cref="T:System.Net.HttpListener" /> 对象所在的计算机，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="88d36-197"><see langword="true" /> if the request originated on the same computer as the <see cref="T:System.Net.HttpListener" /> object that provided the request; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d36-198">当请求来自本地计算机时，应用程序可以使用此属性执行特殊处理。</span><span class="sxs-lookup"><span data-stu-id="88d36-198">Applications can use this property to perform special processing when requests are from the local computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88d36-199">下面的代码示例演示如何使用 <xref:System.Net.HttpListenerRequest.IsLocal%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="88d36-199">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.IsLocal%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
 [!code-vb[Net_Listener_Basic#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsSecureConnection">
      <MemberSignature Language="C#" Value="public bool IsSecureConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecureConnection" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsSecureConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSecureConnection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecureConnection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecureConnection : bool" Usage="System.Net.HttpListenerRequest.IsSecureConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d36-200">获取一个 <see cref="T:System.Boolean" /> 值，该值指示用来发送请求的 TCP 连接是否使用安全套接字层 (SSL) 协议。</span><span class="sxs-lookup"><span data-stu-id="88d36-200">Gets a <see cref="T:System.Boolean" /> value that indicates whether the TCP connection used to send the request is using the Secure Sockets Layer (SSL) protocol.</span></span></summary>
        <value><span data-ttu-id="88d36-201">如果 TCP 连接使用的是 SSL，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="88d36-201"><see langword="true" /> if the TCP connection is using SSL; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d36-202">若要请求安全连接，客户端请求将使用 <xref:System.Uri.UriSchemeHttps> 而不是 <xref:System.Uri.UriSchemeHttp> 。</span><span class="sxs-lookup"><span data-stu-id="88d36-202">To request a secure connection, the client request uses <xref:System.Uri.UriSchemeHttps> instead of <xref:System.Uri.UriSchemeHttp>.</span></span> <span data-ttu-id="88d36-203">如果无法使用 SSL 建立连接，则客户端将收到一个 <xref:System.Net.WebException> 提供有关错误的信息的。</span><span class="sxs-lookup"><span data-stu-id="88d36-203">If the connection cannot be established using SSL, the client receives a <xref:System.Net.WebException> that provides information about the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88d36-204">下面的代码示例演示如何使用 <xref:System.Net.HttpListenerRequest.IsSecureConnection%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="88d36-204">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.IsSecureConnection%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
 [!code-vb[Net_Listener_Basic#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsWebSocketRequest">
      <MemberSignature Language="C#" Value="public bool IsWebSocketRequest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWebSocketRequest" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsWebSocketRequest" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWebSocketRequest As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWebSocketRequest { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWebSocketRequest : bool" Usage="System.Net.HttpListenerRequest.IsWebSocketRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.MonoTODO]</AttributeName>
          <AttributeName Language="F#">[&lt;System.MonoTODO&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d36-205">获取 <see cref="T:System.Boolean" /> 值，该值指示 TCP 连接是否为 WebSocket 请求。</span><span class="sxs-lookup"><span data-stu-id="88d36-205">Gets a <see cref="T:System.Boolean" /> value that indicates whether the TCP connection was  a WebSocket request.</span></span></summary>
        <value><span data-ttu-id="88d36-206">返回 <see cref="T:System.Boolean" />。</span><span class="sxs-lookup"><span data-stu-id="88d36-206">Returns <see cref="T:System.Boolean" />.</span></span>  
  
 <span data-ttu-id="88d36-207">如果 TCP 连接是 WebSocket 请求，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="88d36-207"><see langword="true" /> if the TCP connection is a WebSocket request; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="public bool KeepAlive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepAlive" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.KeepAlive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeepAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepAlive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.KeepAlive : bool" Usage="System.Net.HttpListenerRequest.KeepAlive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d36-208">获取一个 <see cref="T:System.Boolean" /> 值，该值指示客户端是否请求持久性连接。</span><span class="sxs-lookup"><span data-stu-id="88d36-208">Gets a <see cref="T:System.Boolean" /> value that indicates whether the client requests a persistent connection.</span></span></summary>
        <value><span data-ttu-id="88d36-209">如果连接应保持打开状态，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="88d36-209"><see langword="true" /> if the connection should be kept open; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d36-210">如果 HTTP 客户端和服务器需要在短时间内多次交换数据，则持久性连接会使其通信速度提高，因为这样可以避免为每个消息打开和关闭 TCP 连接所需的开销。</span><span class="sxs-lookup"><span data-stu-id="88d36-210">If an HTTP client and server expect to exchange data multiple times in a short time period, a persistent connection speeds up their communications by allowing them to avoid the overhead required to open and close a TCP connection for each message.</span></span> <span data-ttu-id="88d36-211">对于使用 HTTP/1.1 的客户端，此属性的默认值为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="88d36-211">For clients using HTTP/1.1, the default value for this property is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88d36-212">下面的代码示例演示如何使用此属性。</span><span class="sxs-lookup"><span data-stu-id="88d36-212">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
 [!code-vb[Net_Listener_Basic#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="LocalEndPoint">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPoint LocalEndPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPoint LocalEndPoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.LocalEndPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalEndPoint As IPEndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPoint ^ LocalEndPoint { System::Net::IPEndPoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalEndPoint : System.Net.IPEndPoint" Usage="System.Net.HttpListenerRequest.LocalEndPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d36-213">获取请求定向到的服务器 IP 地址和端口号。</span><span class="sxs-lookup"><span data-stu-id="88d36-213">Gets the server IP address and port number to which the request is directed.</span></span></summary>
        <value><span data-ttu-id="88d36-214"><see cref="T:System.Net.IPEndPoint" /> 表示请求被发送到的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="88d36-214">An <see cref="T:System.Net.IPEndPoint" /> that represents the IP address that the request is sent to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d36-215">当你希望根据请求的处理方式来响应请求时，此属性很有用。</span><span class="sxs-lookup"><span data-stu-id="88d36-215">This property is useful when you want to respond to requests based on the way they are addressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88d36-216">下面的代码示例演示如何使用此属性。</span><span class="sxs-lookup"><span data-stu-id="88d36-216">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
 [!code-vb[Net_Listener_Basic#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ProtocolVersion">
      <MemberSignature Language="C#" Value="public Version ProtocolVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ProtocolVersion" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ProtocolVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtocolVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ ProtocolVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProtocolVersion : Version" Usage="System.Net.HttpListenerRequest.ProtocolVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d36-217">获取请求客户端使用的 HTTP 版本。</span><span class="sxs-lookup"><span data-stu-id="88d36-217">Gets the HTTP version used by the requesting client.</span></span></summary>
        <value><span data-ttu-id="88d36-218"><see cref="T:System.Version" /> 用于标识 HTTP 的客户端版本。</span><span class="sxs-lookup"><span data-stu-id="88d36-218">A <see cref="T:System.Version" /> that identifies the client's version of HTTP.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d36-219">不同 HTTP 版本的功能在中的可用文档中指定 [https://www.rfc-editor.org](https://www.rfc-editor.org/) 。</span><span class="sxs-lookup"><span data-stu-id="88d36-219">The capabilities of different HTTP versions are specified in the documents available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88d36-220">下面的代码示例演示如何使用此属性。</span><span class="sxs-lookup"><span data-stu-id="88d36-220">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
 [!code-vb[Net_Listener_Basic#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection QueryString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection QueryString" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.QueryString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryString As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ QueryString { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QueryString : System.Collections.Specialized.NameValueCollection" Usage="System.Net.HttpListenerRequest.QueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d36-221">获取包含在请求中的查询字符串。</span><span class="sxs-lookup"><span data-stu-id="88d36-221">Gets the query string included in the request.</span></span></summary>
        <value><span data-ttu-id="88d36-222">一个 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 对象，其中包含的查询数据包括在请求 <see cref="P:System.Net.HttpListenerRequest.Url" /> 中。</span><span class="sxs-lookup"><span data-stu-id="88d36-222">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that contains the query data included in the request <see cref="P:System.Net.HttpListenerRequest.Url" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d36-223">在 URL 中，查询信息由问号 (？ ) 与路径信息分开。</span><span class="sxs-lookup"><span data-stu-id="88d36-223">In a URL, the query information is separated from the path information by a question mark (?).</span></span> <span data-ttu-id="88d36-224">名称/值对由等号)  (分隔。</span><span class="sxs-lookup"><span data-stu-id="88d36-224">Name/value pairs are separated by an equals sign (=).</span></span> <span data-ttu-id="88d36-225">若要以单个字符串的形式访问查询数据，请 <xref:System.Uri.Query%2A> 从返回的对象中获取属性值 <xref:System.Uri> <xref:System.Net.HttpListenerRequest.Url%2A> 。</span><span class="sxs-lookup"><span data-stu-id="88d36-225">To access the query data as a single string, get the <xref:System.Uri.Query%2A> property value from the <xref:System.Uri> object returned by <xref:System.Net.HttpListenerRequest.Url%2A>.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="88d36-226">不带等号的查询 (例如， `http://www.contoso.com/query.htm?Name`) 添加到中的 `null` 键 <xref:System.Collections.Specialized.NameValueCollection> 。</span><span class="sxs-lookup"><span data-stu-id="88d36-226">Queries without an equals sign (for example, `http://www.contoso.com/query.htm?Name`) are added to the `null` key in the <xref:System.Collections.Specialized.NameValueCollection>.</span></span>
  
## Examples  
 <span data-ttu-id="88d36-227">下面的代码示例演示如何使用 <xref:System.Net.HttpListenerRequest.QueryString%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="88d36-227">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.QueryString%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
 [!code-vb[Net_Listener_Basic#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="RawUrl">
      <MemberSignature Language="C#" Value="public string RawUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RawUrl" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.RawUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RawUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RawUrl : string" Usage="System.Net.HttpListenerRequest.RawUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d36-228">获取客户端请求的 URL 信息（不包括主机和端口）。</span><span class="sxs-lookup"><span data-stu-id="88d36-228">Gets the URL information (without the host and port) requested by the client.</span></span></summary>
        <value><span data-ttu-id="88d36-229"><see cref="T:System.String" /> 包含此请求的原始 URL。</span><span class="sxs-lookup"><span data-stu-id="88d36-229">A <see cref="T:System.String" /> that contains the raw URL for this request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d36-230">原始 URL 定义为后面包含域信息的 URL 部分。</span><span class="sxs-lookup"><span data-stu-id="88d36-230">The raw URL is defined as the part of the URL following the domain information.</span></span> <span data-ttu-id="88d36-231">在 URL 字符串中 `http://www.contoso.com/articles/recent.aspx` ，原始 URL 是 `/articles/recent.aspx` 。</span><span class="sxs-lookup"><span data-stu-id="88d36-231">In the URL string `http://www.contoso.com/articles/recent.aspx`, the raw URL is `/articles/recent.aspx`.</span></span> <span data-ttu-id="88d36-232">原始 URL 包括查询字符串（如果存在）。</span><span class="sxs-lookup"><span data-stu-id="88d36-232">The raw URL includes the query string, if present.</span></span>  
  
 <span data-ttu-id="88d36-233">若要获取主机和端口信息，请使用 <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="88d36-233">To obtain the host and port information, use the <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88d36-234">下面的代码示例演示如何使用 <xref:System.Net.HttpListenerRequest.RawUrl%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="88d36-234">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.RawUrl%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#11)]  
 [!code-vb[Net_Listener_Basic#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="RemoteEndPoint">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPoint RemoteEndPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPoint RemoteEndPoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.RemoteEndPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemoteEndPoint As IPEndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPoint ^ RemoteEndPoint { System::Net::IPEndPoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteEndPoint : System.Net.IPEndPoint" Usage="System.Net.HttpListenerRequest.RemoteEndPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d36-235">获取发出请求的客户端 IP 地址和端口号。</span><span class="sxs-lookup"><span data-stu-id="88d36-235">Gets the client IP address and port number from which the request originated.</span></span></summary>
        <value><span data-ttu-id="88d36-236"><see cref="T:System.Net.IPEndPoint" /> 表示发出请求的 IP 地址和端口号。</span><span class="sxs-lookup"><span data-stu-id="88d36-236">An <see cref="T:System.Net.IPEndPoint" /> that represents the IP address and port number from which the request originated.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="88d36-237">下面的代码示例演示如何使用此属性。</span><span class="sxs-lookup"><span data-stu-id="88d36-237">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
 [!code-vb[Net_Listener_Basic#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="RequestTraceIdentifier">
      <MemberSignature Language="C#" Value="public Guid RequestTraceIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid RequestTraceIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.RequestTraceIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequestTraceIdentifier As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid RequestTraceIdentifier { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestTraceIdentifier : Guid" Usage="System.Net.HttpListenerRequest.RequestTraceIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.MonoTODO("Always returns Guid.Empty")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.MonoTODO("Always returns Guid.Empty")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d36-238">获取传入 HTTP 请求的请求标识符。</span><span class="sxs-lookup"><span data-stu-id="88d36-238">Gets the request identifier of the incoming HTTP request.</span></span></summary>
        <value><span data-ttu-id="88d36-239"><see cref="T:System.Guid" /> 对象，其中包含 HTTP 请求的标识符。</span><span class="sxs-lookup"><span data-stu-id="88d36-239">A <see cref="T:System.Guid" /> object that contains the identifier of the HTTP request.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceName">
      <MemberSignature Language="C#" Value="public string ServiceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServiceName" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ServiceName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServiceName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceName : string" Usage="System.Net.HttpListenerRequest.ServiceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.MonoTODO]</AttributeName>
          <AttributeName Language="F#">[&lt;System.MonoTODO&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d36-240">获取客户端通过请求发送的服务提供程序名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="88d36-240">Gets the Service Provider Name (SPN) that the client sent on the request.</span></span></summary>
        <value><span data-ttu-id="88d36-241">一个 <see cref="T:System.String" />，它包含客户端通过请求发送的 SPN。</span><span class="sxs-lookup"><span data-stu-id="88d36-241">A <see cref="T:System.String" /> that contains the SPN the client sent on the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d36-242">应用程序可以使用 <xref:System.Net.HttpListenerRequest.ServiceName%2A> 属性来执行自定义服务 (SPN) 验证的名称。</span><span class="sxs-lookup"><span data-stu-id="88d36-242">An application could use the <xref:System.Net.HttpListenerRequest.ServiceName%2A> property to perform custom Service Provide Name (SPN) validation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="P:System.Net.HttpListenerRequest.TransportContext" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="/dotnet/framework/network-programming/integrated-windows-authentication-with-extended-protection"><span data-ttu-id="88d36-243">带有扩展保护的集成 Windows 身份验证</span><span class="sxs-lookup"><span data-stu-id="88d36-243">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TransportContext">
      <MemberSignature Language="C#" Value="public System.Net.TransportContext TransportContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.TransportContext TransportContext" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.TransportContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransportContext As TransportContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::TransportContext ^ TransportContext { System::Net::TransportContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TransportContext : System.Net.TransportContext" Usage="System.Net.HttpListenerRequest.TransportContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.TransportContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d36-244">获取客户端请求的 <see cref="T:System.Net.TransportContext" />。</span><span class="sxs-lookup"><span data-stu-id="88d36-244">Gets the <see cref="T:System.Net.TransportContext" /> for the client request.</span></span></summary>
        <value><span data-ttu-id="88d36-245">客户端请求的 <see cref="T:System.Net.TransportContext" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="88d36-245">A <see cref="T:System.Net.TransportContext" /> object for the client request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d36-246"><xref:System.Net.TransportContext>属性可用于检索使用 HTTPS 发送的 (CBT) 的通道绑定令牌 <xref:System.Net.HttpListenerRequest> 。</span><span class="sxs-lookup"><span data-stu-id="88d36-246">The <xref:System.Net.TransportContext> property can be used to retrieve the channel binding token (CBT) for an <xref:System.Net.HttpListenerRequest> which was sent using HTTPS.</span></span>  
  
 <span data-ttu-id="88d36-247">应用程序可以使用 <xref:System.Net.TransportContext> 属性，通过调用本机 Win32 [AcceptSecurityContext](https://go.microsoft.com/fwlink/?LinkId=147021) 函数来执行自定义身份验证。</span><span class="sxs-lookup"><span data-stu-id="88d36-247">An application could use the <xref:System.Net.TransportContext> property to perform custom authentication using calls to the native Win32 [AcceptSecurityContext](https://go.microsoft.com/fwlink/?LinkId=147021) function.</span></span>  
  
 <span data-ttu-id="88d36-248">如果应用程序尝试使用方法从此属性 (CBT) 检索通道绑定令牌 <xref:System.Net.HttpListenerRequest.TransportContext%2A> <xref:System.Net.TransportContext.GetChannelBinding%2A> <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> ，则 <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint> <xref:System.Net.HttpListenerRequest> 将引发 <xref:System.NotSupportedException> 。</span><span class="sxs-lookup"><span data-stu-id="88d36-248">If an application attempts to retrieve the channel binding token (CBT) from this <xref:System.Net.HttpListenerRequest.TransportContext%2A> property using the <xref:System.Net.TransportContext.GetChannelBinding%2A> method and the <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> is not <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint>, then the <xref:System.Net.HttpListenerRequest> will throw <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="88d36-249"><xref:System.Net.HttpListenerRequest> <xref:System.Net.TransportContext.GetChannelBinding%2A> 使用内部实现替代方法。</span><span class="sxs-lookup"><span data-stu-id="88d36-249">The <xref:System.Net.HttpListenerRequest> overrides the <xref:System.Net.TransportContext.GetChannelBinding%2A> method with an internal implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="P:System.Net.HttpListenerRequest.ServiceName" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="/dotnet/framework/network-programming/integrated-windows-authentication-with-extended-protection"><span data-ttu-id="88d36-250">带有扩展保护的集成 Windows 身份验证</span><span class="sxs-lookup"><span data-stu-id="88d36-250">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public Uri Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Url" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.Url" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Url As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Url { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Url : Uri" Usage="System.Net.HttpListenerRequest.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d36-251">获取客户端请求的 <see cref="T:System.Uri" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="88d36-251">Gets the <see cref="T:System.Uri" /> object requested by the client.</span></span></summary>
        <value><span data-ttu-id="88d36-252">一个 <see cref="T:System.Uri" /> 对象，用于标识客户端请求的资源。</span><span class="sxs-lookup"><span data-stu-id="88d36-252">A <see cref="T:System.Uri" /> object that identifies the resource requested by the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d36-253"><xref:System.Net.HttpListenerRequest.Url%2A>属性允许您获取对象中提供的所有信息 <xref:System.Uri> 。</span><span class="sxs-lookup"><span data-stu-id="88d36-253">The <xref:System.Net.HttpListenerRequest.Url%2A> property allows you to obtain all the information available from a <xref:System.Uri> object.</span></span> <span data-ttu-id="88d36-254">如果只需要知道 URI 请求的原始文本，请考虑 <xref:System.Net.HttpListenerRequest.RawUrl%2A> 改用属性。</span><span class="sxs-lookup"><span data-stu-id="88d36-254">If you need to know only the raw text of the URI request, consider using the <xref:System.Net.HttpListenerRequest.RawUrl%2A> property instead.</span></span>  
  
 <span data-ttu-id="88d36-255"><xref:System.Net.HttpListenerRequest.Url%2A>如果 <xref:System.Uri> 未能分析来自客户端的，则属性为 null。</span><span class="sxs-lookup"><span data-stu-id="88d36-255">The <xref:System.Net.HttpListenerRequest.Url%2A> property is null if the <xref:System.Uri> from the client could not be parsed.</span></span>  
  
 <span data-ttu-id="88d36-256"><xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A>属性指示是否 <xref:System.Net.HttpListener> 使用原始非转义 uri 而不是转换的 uri （其中任何百分比编码值都已转换）以及执行其他规范化步骤。</span><span class="sxs-lookup"><span data-stu-id="88d36-256">The <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property indicates if <xref:System.Net.HttpListener> uses the raw unescaped URI instead of the converted URI where any percent-encoded values are converted and other normalization steps are taken.</span></span>  
  
 <span data-ttu-id="88d36-257">当某个 <xref:System.Net.HttpListener> 实例通过该服务收到请求时 `http.sys` ，它将创建由提供的 URI 字符串的实例 `http.sys` ，并将其公开为 <xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType> 属性。</span><span class="sxs-lookup"><span data-stu-id="88d36-257">When a <xref:System.Net.HttpListener> instance receives a request through the `http.sys` service, it creates an instance of the URI string provided by `http.sys`, and exposes it as the <xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="88d36-258">`http.sys`服务公开两个请求 URI 字符串：</span><span class="sxs-lookup"><span data-stu-id="88d36-258">The `http.sys` service exposes two request URI strings:</span></span>  
  
-   <span data-ttu-id="88d36-259">原始 URI</span><span class="sxs-lookup"><span data-stu-id="88d36-259">Raw URI</span></span>  
  
-   <span data-ttu-id="88d36-260">转换的 URI</span><span class="sxs-lookup"><span data-stu-id="88d36-260">Converted URI</span></span>  
  
 <span data-ttu-id="88d36-261">原始 URI 是 <xref:System.Uri?displayProperty=nameWithType> 在 HTTP 请求的请求行中提供的：</span><span class="sxs-lookup"><span data-stu-id="88d36-261">The raw URI is the <xref:System.Uri?displayProperty=nameWithType> provided in the request line of a HTTP request:</span></span>  
  
 `GET /path/`  
  
 `Host: www.contoso.com`  
  
 <span data-ttu-id="88d36-262">为上述请求提供的原始 URI 为 `http.sys` "/path/"。</span><span class="sxs-lookup"><span data-stu-id="88d36-262">The raw URI provided by `http.sys` for the request mentioned above, is "/path/".</span></span> <span data-ttu-id="88d36-263">这表示 HTTP 谓词后的字符串，因为它是通过网络发送的。</span><span class="sxs-lookup"><span data-stu-id="88d36-263">This represents the string following the HTTP verb as it was sent over the network.</span></span>  
  
 <span data-ttu-id="88d36-264">该 `http.sys` 服务使用 HTTP 请求行中提供的 uri 和主机标头来确定请求应转发到的源服务器，从请求中提供的信息创建转换的 uri。</span><span class="sxs-lookup"><span data-stu-id="88d36-264">The `http.sys` service creates a converted URI from the information provided in the request using the URI provided in the HTTP request line and the Host header to determine the origin server the request should be forwarded to.</span></span> <span data-ttu-id="88d36-265">这是通过将请求中的信息与一组已注册的 URI 前缀进行比较来完成的。</span><span class="sxs-lookup"><span data-stu-id="88d36-265">This is done by comparing the information from the request with a set of registered URI prefixes.</span></span> <span data-ttu-id="88d36-266">为了能够比较这些值，需要对请求进行一些规范化。</span><span class="sxs-lookup"><span data-stu-id="88d36-266">In order to be able to compare those values, some normalization to the request needs to be done.</span></span> <span data-ttu-id="88d36-267">对于上面的示例，转换后的 URI 如下所示：</span><span class="sxs-lookup"><span data-stu-id="88d36-267">For the sample above the converted URI would be as follows:</span></span>  
  
 `http://www.contoso.com/path/`  
  
 <span data-ttu-id="88d36-268">`http.sys`服务将 <xref:System.Uri.Host%2A?displayProperty=nameWithType> 属性值和请求行中的字符串结合起来，以创建转换的 URI。</span><span class="sxs-lookup"><span data-stu-id="88d36-268">The `http.sys` service combines the <xref:System.Uri.Host%2A?displayProperty=nameWithType> property value and the string in the request line to create a converted URI.</span></span> <span data-ttu-id="88d36-269">此外， `http.sys` <xref:System.Uri?displayProperty=nameWithType> 类还会执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="88d36-269">In addition, `http.sys` and the <xref:System.Uri?displayProperty=nameWithType> class also do the following:</span></span>  
  
-   <span data-ttu-id="88d36-270">取消转义所有百分比编码值。</span><span class="sxs-lookup"><span data-stu-id="88d36-270">Un-escapes all percent encoded values.</span></span>  
  
-   <span data-ttu-id="88d36-271">将百分号编码的非 ASCII 字符转换为 UTF-16 字符表示形式。</span><span class="sxs-lookup"><span data-stu-id="88d36-271">Converts percent-encoded non-ASCII characters into a UTF-16 character representation.</span></span> <span data-ttu-id="88d36-272">请注意，使用% uXXXX 格式) ，支持 UTF-8 和 ANSI/DBCS 字符以及 Unicode 编码 (Unicode 编码。</span><span class="sxs-lookup"><span data-stu-id="88d36-272">Note that UTF-8 and ANSI/DBCS characters are supported as well as Unicode characters (Unicode encoding using the %uXXXX format).</span></span>  
  
-   <span data-ttu-id="88d36-273">执行其他规范化步骤，如路径压缩。</span><span class="sxs-lookup"><span data-stu-id="88d36-273">Executes other normalization steps, like path compression.</span></span>  
  
 <span data-ttu-id="88d36-274">由于请求不包含任何有关用于百分比编码值的编码的信息，因此只需分析百分比编码的值就不能确定正确的编码。</span><span class="sxs-lookup"><span data-stu-id="88d36-274">Since the request doesn't contain any information about the encoding used for percent-encoded values, it may not be possible to determine the correct encoding just by parsing the percent-encoded values.</span></span>  
  
 <span data-ttu-id="88d36-275">因此 `http.sys` ，提供了两个用于修改进程的注册表项：</span><span class="sxs-lookup"><span data-stu-id="88d36-275">Therefore `http.sys` provides two registry keys for modifying the process:</span></span>  
  
|<span data-ttu-id="88d36-276">注册表项</span><span class="sxs-lookup"><span data-stu-id="88d36-276">Registry Key</span></span>|<span data-ttu-id="88d36-277">默认值</span><span class="sxs-lookup"><span data-stu-id="88d36-277">Default Value</span></span>|<span data-ttu-id="88d36-278">说明</span><span class="sxs-lookup"><span data-stu-id="88d36-278">Description</span></span>|  
|------------------|-------------------|-----------------|  
|<span data-ttu-id="88d36-279">EnableNonUTF8</span><span class="sxs-lookup"><span data-stu-id="88d36-279">EnableNonUTF8</span></span>|<span data-ttu-id="88d36-280">1</span><span class="sxs-lookup"><span data-stu-id="88d36-280">1</span></span>|<span data-ttu-id="88d36-281">如果为零，则 `http.sys` 只接受 utf-8 编码的 url。</span><span class="sxs-lookup"><span data-stu-id="88d36-281">If zero, `http.sys` accepts only UTF-8-encoded URLs.</span></span><br /><br /> <span data-ttu-id="88d36-282">如果非零，则 `http.sys` 还接受请求中 ANSI 编码或 DBCS 编码的 url。</span><span class="sxs-lookup"><span data-stu-id="88d36-282">If non-zero, `http.sys` also accepts ANSI-encoded or DBCS-encoded URLs in requests.</span></span>|  
|<span data-ttu-id="88d36-283">FavorUTF8</span><span class="sxs-lookup"><span data-stu-id="88d36-283">FavorUTF8</span></span>|<span data-ttu-id="88d36-284">1</span><span class="sxs-lookup"><span data-stu-id="88d36-284">1</span></span>|<span data-ttu-id="88d36-285">如果非零，则 `http.sys` 始终首先尝试将 URL 解码为 utf-8; 如果该转换失败并且 EnableNonUTF8 为非零，Http.sys 则尝试将其解码为 ANSI 或 DBCS。</span><span class="sxs-lookup"><span data-stu-id="88d36-285">If non-zero, `http.sys` always tries to decode a URL as UTF-8 first; if that conversion fails and EnableNonUTF8 is non-zero, Http.sys then tries to decode it as ANSI or DBCS.</span></span><br /><br /> <span data-ttu-id="88d36-286">如果 0 (和 EnableNonUTF8 为非零) ，则 `http.sys` 尝试将它解码为 ANSI 或 DBCS; 如果不成功，则它将尝试 utf-8 转换。</span><span class="sxs-lookup"><span data-stu-id="88d36-286">If zero (and EnableNonUTF8 is non-zero), `http.sys` tries to decode it as ANSI or DBCS; if that is not successful, it tries a UTF-8 conversion.</span></span>|  
  
 <span data-ttu-id="88d36-287">当 <xref:System.Net.HttpListener> 收到请求时，它将使用转换后的 URI `http.sys` 作为属性的输入 <xref:System.Net.HttpListenerRequest.Url%2A> 。</span><span class="sxs-lookup"><span data-stu-id="88d36-287">When <xref:System.Net.HttpListener> receives a request, it uses the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
 <span data-ttu-id="88d36-288">除了 Uri 中的字符和数字以外，还需要支持字符。</span><span class="sxs-lookup"><span data-stu-id="88d36-288">There is a need for supporting characters besides characters and numbers in URIs.</span></span> <span data-ttu-id="88d36-289">例如，以下 URI 用于检索客户编号 "1/3812" 的客户信息：</span><span class="sxs-lookup"><span data-stu-id="88d36-289">An example is the following URI, which is used to retrieve customer information for customer number "1/3812":</span></span>  
  
 `http://www.contoso.com/Customer('1%2F3812')/`  
  
 <span data-ttu-id="88d36-290">请注意 Uri (% 2F) 中的百分号编码的反斜杠。</span><span class="sxs-lookup"><span data-stu-id="88d36-290">Note the percent-encoded slash in the Uri (%2F).</span></span> <span data-ttu-id="88d36-291">这是必需的，因为在这种情况下，斜杠字符表示数据而不是路径分隔符。</span><span class="sxs-lookup"><span data-stu-id="88d36-291">This is necessary, since in this case the slash character represents data and not a path delimiter.</span></span>  
  
 <span data-ttu-id="88d36-292">将字符串传递到 Uri 构造函数将导致以下 URI：</span><span class="sxs-lookup"><span data-stu-id="88d36-292">Passing the string to Uri constructor will lead to the following URI:</span></span>  
  
 `http://www.contoso.com/Customer('1/3812')/`  
  
 <span data-ttu-id="88d36-293">将路径拆分为其段将导致以下元素：</span><span class="sxs-lookup"><span data-stu-id="88d36-293">Splitting the path into its segments would result in the following elements:</span></span>  
  
 `Customer('1`  
  
 `3812')`  
  
 <span data-ttu-id="88d36-294">这不是请求发送方的意图。</span><span class="sxs-lookup"><span data-stu-id="88d36-294">This is not the intent of the sender of the request.</span></span>  
  
 <span data-ttu-id="88d36-295">如果该 <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> 属性设置为 false，则当 <xref:System.Net.HttpListener> 收到请求时，它将使用原始 URI，而不是转换的 uri `http.sys` 作为属性的输入 <xref:System.Net.HttpListenerRequest.Url%2A> 。</span><span class="sxs-lookup"><span data-stu-id="88d36-295">If the <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property is set to false, then when the <xref:System.Net.HttpListener> receives a request, it uses the raw URI instead of the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88d36-296">下面的代码示例演示如何使用 <xref:System.Net.HttpListenerRequest.Url%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="88d36-296">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
 [!code-vb[Net_Listener_Basic#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.HttpListenerElement" />
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
        <related type="Article" href="/dotnet/framework/configure-apps/file-schema/network/"><span data-ttu-id="88d36-297">网络设置架构</span><span class="sxs-lookup"><span data-stu-id="88d36-297">Network Settings Schema</span></span></related>
        <related type="Article" href="/dotnet/framework/configure-apps/file-schema/network/httplistener-element-network-settings"><span data-ttu-id="88d36-298">&lt;&gt; (网络设置的 httpListener 元素) </span><span class="sxs-lookup"><span data-stu-id="88d36-298">&lt;httpListener&gt; Element (Network Settings)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UrlReferrer">
      <MemberSignature Language="C#" Value="public Uri UrlReferrer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UrlReferrer" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UrlReferrer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UrlReferrer As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ UrlReferrer { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UrlReferrer : Uri" Usage="System.Net.HttpListenerRequest.UrlReferrer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d36-299">获取将使客户端与服务器相关的资源的统一资源标识符 (URI)。</span><span class="sxs-lookup"><span data-stu-id="88d36-299">Gets the Uniform Resource Identifier (URI) of the resource that referred the client to the server.</span></span></summary>
        <value><span data-ttu-id="88d36-300"><see cref="T:System.Uri" /> 对象，包含请求的 <see cref="F:System.Net.HttpRequestHeader.Referer" /> 标头的文本；如果请求中不包含标头，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="88d36-300">A <see cref="T:System.Uri" /> object that contains the text of the request's <see cref="F:System.Net.HttpRequestHeader.Referer" /> header, or <see langword="null" /> if the header was not included in the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d36-301">如果客户端已跟随指向所请求 URI 的超链接，则其请求可能包含一个 `Referrer` 标头，该标头标识包含超链接的资源的 URI。</span><span class="sxs-lookup"><span data-stu-id="88d36-301">If a client has followed a hyperlink to the requested URI, its request might contain a `Referrer` header that identifies the URI of the resource that contained the hyperlink.</span></span>  
  
 <span data-ttu-id="88d36-302">客户端可以伪造或选择不显示 <xref:System.Net.HttpRequestHeader.Referer> 标头。</span><span class="sxs-lookup"><span data-stu-id="88d36-302">Clients can falsify or choose not to present a <xref:System.Net.HttpRequestHeader.Referer> header.</span></span> <span data-ttu-id="88d36-303">因此，虽然 <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> 属性可用于识别 Web 流量中的基本趋势，但不应将其用作授权方案的一部分来控制对数据的访问。</span><span class="sxs-lookup"><span data-stu-id="88d36-303">Therefore, while the <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> property can be useful for identifying basic trends in Web traffic; you should not use it as part of an authorization scheme to control access to data.</span></span>  
  
 <span data-ttu-id="88d36-304">有关请求标头的完整列表，请参见 <xref:System.Net.HttpRequestHeader> 枚举。</span><span class="sxs-lookup"><span data-stu-id="88d36-304">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
 <span data-ttu-id="88d36-305"><xref:System.Net.HttpListenerRequest.UrlReferrer%2A>如果 `Referrer` 请求中没有标头，或者 `Referrer` 标头出现在请求中但未分析为有效，则为 null <xref:System.Uri> 。</span><span class="sxs-lookup"><span data-stu-id="88d36-305">The <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> is null when there is no `Referrer` header in the request or when the `Referrer` header is present in the request but does not parse to a valid <xref:System.Uri>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88d36-306">下面的代码示例演示如何使用此属性。</span><span class="sxs-lookup"><span data-stu-id="88d36-306">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
 [!code-vb[Net_Listener_Basic#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public string UserAgent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgent" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserAgent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserAgent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserAgent { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserAgent : string" Usage="System.Net.HttpListenerRequest.UserAgent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d36-307">获取客户端提供的用户代理。</span><span class="sxs-lookup"><span data-stu-id="88d36-307">Gets the user agent presented by the client.</span></span></summary>
        <value><span data-ttu-id="88d36-308">一个 <see cref="T:System.String" /> 对象，其中包含请求的 <see langword="User-Agent" /> 标头的文本。</span><span class="sxs-lookup"><span data-stu-id="88d36-308">A <see cref="T:System.String" /> object that contains the text of the request's <see langword="User-Agent" /> header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d36-309">`User-Agent`标头通常包含文本，用于标识用于生成请求的软件的名称和版本号。</span><span class="sxs-lookup"><span data-stu-id="88d36-309">The `User-Agent` header typically contains text that identifies the name and version number of the software used to generate the request.</span></span>  
  
 <span data-ttu-id="88d36-310">有关请求标头的完整列表，请参见 <xref:System.Net.HttpRequestHeader> 枚举。</span><span class="sxs-lookup"><span data-stu-id="88d36-310">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
 <span data-ttu-id="88d36-311"><xref:System.Net.HttpListenerRequest.UserAgent%2A>如果请求中没有标头，则为 null `User-Agent` 。</span><span class="sxs-lookup"><span data-stu-id="88d36-311">The <xref:System.Net.HttpListenerRequest.UserAgent%2A> is null when there is no `User-Agent` header in the request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88d36-312">下面的代码示例演示如何使用此属性。</span><span class="sxs-lookup"><span data-stu-id="88d36-312">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
 [!code-vb[Net_Listener_Basic#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserHostAddress">
      <MemberSignature Language="C#" Value="public string UserHostAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostAddress" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserHostAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostAddress { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserHostAddress : string" Usage="System.Net.HttpListenerRequest.UserHostAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d36-313">获取请求定向到的服务器 IP 地址和端口号。</span><span class="sxs-lookup"><span data-stu-id="88d36-313">Gets the server IP address and port number to which the request is directed.</span></span></summary>
        <value><span data-ttu-id="88d36-314">包含主机地址信息的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="88d36-314">A <see cref="T:System.String" /> that contains the host address information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d36-315">此属性返回的信息也可在 <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> 属性值中使用。</span><span class="sxs-lookup"><span data-stu-id="88d36-315">The information returned by this property is also available in the <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> property value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88d36-316">下面的代码示例显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="88d36-316">The following code example displays the value of this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
 [!code-vb[Net_Listener_Basic#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserHostName">
      <MemberSignature Language="C#" Value="public string UserHostName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostName" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserHostName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserHostName : string" Usage="System.Net.HttpListenerRequest.UserHostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d36-317">获取由客户端指定的 DNS 名称和端口号（如果提供了端口号）。</span><span class="sxs-lookup"><span data-stu-id="88d36-317">Gets the DNS name and, if provided, the port number specified by the client.</span></span></summary>
        <value><span data-ttu-id="88d36-318">一个 <see cref="T:System.String" /> 值，其中包含请求的 <see langword="Host" /> 标头的文本。</span><span class="sxs-lookup"><span data-stu-id="88d36-318">A <see cref="T:System.String" /> value that contains the text of the request's <see langword="Host" /> header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d36-319">`Host`标头包含请求的服务器主机名和端口号（如果已指定），并以冒号分隔 (例如 `www.contoso.com:8080`) 。</span><span class="sxs-lookup"><span data-stu-id="88d36-319">The `Host` header contains the requested server host name and port number, if specified, separated by a colon (for example, `www.contoso.com:8080`).</span></span>  
  
 <span data-ttu-id="88d36-320">您可以使用此属性根据请求中指定的主机名返回不同的响应。</span><span class="sxs-lookup"><span data-stu-id="88d36-320">You can use this property to return different responses depending on the host name specified in the request.</span></span>  
  
 <span data-ttu-id="88d36-321">有关请求标头的完整列表，请参见 <xref:System.Net.HttpRequestHeader> 枚举。</span><span class="sxs-lookup"><span data-stu-id="88d36-321">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88d36-322">下面的代码示例演示如何使用此属性。</span><span class="sxs-lookup"><span data-stu-id="88d36-322">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
 [!code-vb[Net_Listener_Basic#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserLanguages">
      <MemberSignature Language="C#" Value="public string[] UserLanguages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] UserLanguages" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserLanguages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserLanguages As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ UserLanguages { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserLanguages : string[]" Usage="System.Net.HttpListenerRequest.UserLanguages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d36-323">获取响应的首选自然语言。</span><span class="sxs-lookup"><span data-stu-id="88d36-323">Gets the natural languages that are preferred for the response.</span></span></summary>
        <value><span data-ttu-id="88d36-324"><see cref="T:System.String" /> 数组，包含请求的 <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> 标头中指定的语言；如果客户端请求不包含 <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> 标头，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="88d36-324">A <see cref="T:System.String" /> array that contains the languages specified in the request's <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> header or <see langword="null" /> if the client request did not include an <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d36-325">有关标头的详细说明 `Accept-Language` ，请参阅 RFC 2616 第14.4 节，网址为 [https://www.rfc-editor.org](https://www.rfc-editor.org/) 。</span><span class="sxs-lookup"><span data-stu-id="88d36-325">For a detailed description of the `Accept-Language` header, see RFC 2616 Section 14.4, available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
 <span data-ttu-id="88d36-326">有关请求标头的完整列表，请参见 <xref:System.Net.HttpRequestHeader> 枚举。</span><span class="sxs-lookup"><span data-stu-id="88d36-326">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88d36-327">下面的代码示例显示请求的标头中的语言 `Accept-Language` 。</span><span class="sxs-lookup"><span data-stu-id="88d36-327">The following code example displays the languages from the request's `Accept-Language` header.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
 [!code-vb[Net_Listener_Basic#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
  </Members>
</Type>
