<Type Name="CredentialCache" FullName="System.Net.CredentialCache">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2ccd4dfa7a286b7c8891063d641be94a277d3922" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89786939" /></Metadata><TypeSignature Language="C#" Value="public class CredentialCache : System.Collections.IEnumerable, System.Net.ICredentials, System.Net.ICredentialsByHost" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CredentialCache extends System.Object implements class System.Collections.IEnumerable, class System.Net.ICredentials, class System.Net.ICredentialsByHost" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.Net.CredentialCache" />
  <TypeSignature Language="VB.NET" Value="Public Class CredentialCache&#xA;Implements ICredentials, ICredentialsByHost, IEnumerable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class CredentialCache : System::Collections::IEnumerable, System::Net::ICredentials, System::Net::ICredentialsByHost" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type CredentialCache = class&#xA;    interface IEnumerable&#xA;    interface ICredentials&#xA;    interface ICredentialsByHost" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="C#" Value="public class CredentialCache : System.Collections.IEnumerable, System.Net.ICredentials" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CredentialCache extends System.Object implements class System.Collections.IEnumerable, class System.Net.ICredentials" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="VB.NET" Value="Public Class CredentialCache&#xA;Implements ICredentials, IEnumerable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class CredentialCache : System::Collections::IEnumerable, System::Net::ICredentials" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type CredentialCache = class&#xA;    interface ICredentials&#xA;    interface IEnumerable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type CredentialCache = class&#xA;    interface ICredentials&#xA;    interface ICredentialsByHost&#xA;    interface IEnumerable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System" FromVersion="4.0.0.0" To="System.Net.Primitives" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Net.Primitives" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Net.ICredentials</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.Net.ICredentialsByHost</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="2a55b-101">为多个凭据提供存储空间。</span><span class="sxs-lookup"><span data-stu-id="2a55b-101">Provides storage for multiple credentials.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a55b-102"><xref:System.Net.CredentialCache>类存储多个 Internet 资源的凭据。</span><span class="sxs-lookup"><span data-stu-id="2a55b-102">The <xref:System.Net.CredentialCache> class stores credentials for multiple Internet resources.</span></span> <span data-ttu-id="2a55b-103">需要访问多个资源的应用程序可以将这些资源的凭据存储在一个 <xref:System.Net.CredentialCache> 实例中，然后在需要时向 Internet 资源提供适当的凭据集。</span><span class="sxs-lookup"><span data-stu-id="2a55b-103">Applications that need to access multiple resources can store the credentials for those resources in a <xref:System.Net.CredentialCache> instance that then provides the proper set of credentials to the Internet resource when required.</span></span> <span data-ttu-id="2a55b-104"><xref:System.Net.CredentialCache.GetCredential%2A>调用方法时，它会将提供的统一资源标识符与缓存中存储的身份验证类型 () 和身份验证类型进行比较，并返回第一个匹配的凭据集。</span><span class="sxs-lookup"><span data-stu-id="2a55b-104">When the <xref:System.Net.CredentialCache.GetCredential%2A> method is called, it compares the Uniform Resource Identifier (URI) and authentication type provided with those stored in the cache and returns the first set of credentials that match.</span></span>  
  
 <span data-ttu-id="2a55b-105"><xref:System.Net.CredentialCache.DefaultCredentials%2A>属性包含当前安全上下文的系统凭据。</span><span class="sxs-lookup"><span data-stu-id="2a55b-105">The <xref:System.Net.CredentialCache.DefaultCredentials%2A> property contains the system credentials of the current security context.</span></span> <span data-ttu-id="2a55b-106">对于客户端应用程序，它们代表当前登录的用户的用户名、密码和域。</span><span class="sxs-lookup"><span data-stu-id="2a55b-106">For client applications, these represent the user name, password, and domain of the user who is currently logged in.</span></span> <span data-ttu-id="2a55b-107">对于 ASP.NET 应用程序，默认凭据是已登录用户或正在模拟的用户的用户凭据。</span><span class="sxs-lookup"><span data-stu-id="2a55b-107">For ASP.NET applications, the default credentials are the user credentials of the logged-in user or the user being impersonated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a55b-108">下面的代码示例使用 <xref:System.Net.CredentialCache> 多个安全凭据初始化，并将这些凭据用于 <xref:System.Net.WebRequest> 。</span><span class="sxs-lookup"><span data-stu-id="2a55b-108">The following code example initializes a <xref:System.Net.CredentialCache> with multiple security credentials and uses those credentials with a <xref:System.Net.WebRequest>.</span></span>  
  
 [!code-cpp[Classic CredentialCache.Add Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CredentialCache.Add Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CS/source.cs#1)]
 [!code-vb[Classic CredentialCache.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic CredentialCache.Add Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.ICredentials" />
    <altmember cref="P:System.Net.WebRequest.Credentials" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CredentialCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CredentialCache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2a55b-109">创建 <see cref="T:System.Net.CredentialCache" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2a55b-109">Creates a new instance of the <see cref="T:System.Net.CredentialCache" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a55b-110">构造函数创建 <xref:System.Net.CredentialCache> 实例。</span><span class="sxs-lookup"><span data-stu-id="2a55b-110">The constructor creates a <xref:System.Net.CredentialCache> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a55b-111">下面的代码示例使用 <xref:System.Net.CredentialCache> 多个安全凭据初始化，并将这些凭据用于 <xref:System.Net.WebRequest> 。</span><span class="sxs-lookup"><span data-stu-id="2a55b-111">The following code example initializes a <xref:System.Net.CredentialCache> with multiple security credentials and uses those credentials with a <xref:System.Net.WebRequest>.</span></span>  
  
 [!code-cpp[Classic CredentialCache.Add Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CredentialCache.Add Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CS/source.cs#1)]
 [!code-vb[Classic CredentialCache.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic CredentialCache.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2a55b-112">向凭据缓存添加 <see cref="T:System.Net.NetworkCredential" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="2a55b-112">Adds a <see cref="T:System.Net.NetworkCredential" /> instance to the credential cache.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Uri uriPrefix, string authType, System.Net.NetworkCredential cred);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Uri uriPrefix, string authType, class System.Net.NetworkCredential cred) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.Add(System.Uri,System.String,System.Net.NetworkCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (uriPrefix As Uri, authType As String, cred As NetworkCredential)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(Uri ^ uriPrefix, System::String ^ authType, System::Net::NetworkCredential ^ cred);" />
      <MemberSignature Language="F#" Value="member this.Add : Uri * string * System.Net.NetworkCredential -&gt; unit" Usage="credentialCache.Add (uriPrefix, authType, cred)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.Uri" />
        <Parameter Name="authType" Type="System.String" />
        <Parameter Name="cred" Type="System.Net.NetworkCredential" />
      </Parameters>
      <Docs>
        <param name="uriPrefix"><span data-ttu-id="2a55b-113">一个 <see cref="T:System.Uri" />，它指定资源的 URI 前缀，该资源由凭据授予访问权。</span><span class="sxs-lookup"><span data-stu-id="2a55b-113">A <see cref="T:System.Uri" /> that specifies the URI prefix of the resources that the credential grants access to.</span></span></param>
        <param name="authType"><span data-ttu-id="2a55b-114">在 <paramref name="uriPrefix" /> 中命名的资源所使用的身份验证方案。</span><span class="sxs-lookup"><span data-stu-id="2a55b-114">The authentication scheme used by the resource named in <paramref name="uriPrefix" />.</span></span></param>
        <param name="cred"><span data-ttu-id="2a55b-115">要添加到凭据缓存中的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="2a55b-115">The <see cref="T:System.Net.NetworkCredential" /> to add to the credential cache.</span></span></param>
        <summary><span data-ttu-id="2a55b-116">向凭据缓存添加一个要与 SMTP 以外的协议一起使用的 <see cref="T:System.Net.NetworkCredential" /> 实例，并将其与统一资源标识符 (URI) 前缀和身份验证协议关联。</span><span class="sxs-lookup"><span data-stu-id="2a55b-116">Adds a <see cref="T:System.Net.NetworkCredential" /> instance to the credential cache for use with protocols other than SMTP and associates it with a Uniform Resource Identifier (URI) prefix and authentication protocol.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a55b-117">此 <xref:System.Net.CredentialCache.Add%2A> 方法将一个 <xref:System.Net.NetworkCredential> 实例与 SMTP 之外的协议一起使用 <xref:System.Net.CredentialCache> 。</span><span class="sxs-lookup"><span data-stu-id="2a55b-117">The <xref:System.Net.CredentialCache.Add%2A> method places a <xref:System.Net.NetworkCredential> instance for use with protocols other than SMTP into the <xref:System.Net.CredentialCache>.</span></span> <span data-ttu-id="2a55b-118">缓存按其添加凭据的顺序存储凭据。</span><span class="sxs-lookup"><span data-stu-id="2a55b-118">The cache stores credentials in the order in which they are added to it.</span></span> <span data-ttu-id="2a55b-119"><xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29>调用方法时，它将返回合适的匹配 <xref:System.Net.NetworkCredential> 实例。</span><span class="sxs-lookup"><span data-stu-id="2a55b-119">When the <xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> method is called, it returns the proper matching <xref:System.Net.NetworkCredential> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a55b-120">下面的代码示例使用 <xref:System.Net.CredentialCache> 多个安全凭据初始化，并将这些凭据用于 <xref:System.Net.WebRequest> 。</span><span class="sxs-lookup"><span data-stu-id="2a55b-120">The following code example initializes a <xref:System.Net.CredentialCache> with multiple security credentials and uses those credentials with a <xref:System.Net.WebRequest>.</span></span>  
  
 [!code-cpp[Classic CredentialCache.Add Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CredentialCache.Add Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CS/source.cs#1)]
 [!code-vb[Classic CredentialCache.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic CredentialCache.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2a55b-121"><paramref name="uriPrefix" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2a55b-121"><paramref name="uriPrefix" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="2a55b-122">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2a55b-122">-or-</span></span> 
 <span data-ttu-id="2a55b-123"><paramref name="authType" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2a55b-123"><paramref name="authType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2a55b-124">相同的凭据被添加多次。</span><span class="sxs-lookup"><span data-stu-id="2a55b-124">The same credentials are added more than once.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string host, int port, string authenticationType, System.Net.NetworkCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string host, int32 port, string authenticationType, class System.Net.NetworkCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.Add(System.String,System.Int32,System.String,System.Net.NetworkCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (host As String, port As Integer, authenticationType As String, credential As NetworkCredential)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ host, int port, System::String ^ authenticationType, System::Net::NetworkCredential ^ credential);" />
      <MemberSignature Language="F#" Value="member this.Add : string * int * string * System.Net.NetworkCredential -&gt; unit" Usage="credentialCache.Add (host, port, authenticationType, credential)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="port" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="authenticationType" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="3" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="host"><span data-ttu-id="2a55b-125">标识主机的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="2a55b-125">A <see cref="T:System.String" /> that identifies the host computer.</span></span></param>
        <param name="port"><span data-ttu-id="2a55b-126">指定要连接到 <paramref name="host" /> 的端口的 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="2a55b-126">A <see cref="T:System.Int32" /> that specifies the port to connect to on <paramref name="host" />.</span></span></param>
        <param name="authenticationType"><span data-ttu-id="2a55b-127"><see cref="T:System.String" />，它标识使用 <paramref name="host" /> 连接到 <paramref name="cred" /> 时使用的身份验证方案。</span><span class="sxs-lookup"><span data-stu-id="2a55b-127">A <see cref="T:System.String" /> that identifies the authentication scheme used when connecting to <paramref name="host" /> using <paramref name="cred" />.</span></span></param>
        <param name="credential"><span data-ttu-id="2a55b-128">要添加到凭据缓存中的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="2a55b-128">The <see cref="T:System.Net.NetworkCredential" /> to add to the credential cache.</span></span></param>
        <summary><span data-ttu-id="2a55b-129">向凭据缓存添加要与 SMTP 一起使用的 <see cref="T:System.Net.NetworkCredential" /> 实例，并将其与主机、端口和身份验证协议关联。</span><span class="sxs-lookup"><span data-stu-id="2a55b-129">Adds a <see cref="T:System.Net.NetworkCredential" /> instance for use with SMTP to the credential cache and associates it with a host computer, port, and authentication protocol.</span></span> <span data-ttu-id="2a55b-130">使用此方法添加的凭据仅对 SMTP 有效。</span><span class="sxs-lookup"><span data-stu-id="2a55b-130">Credentials added using this method are valid for SMTP only.</span></span> <span data-ttu-id="2a55b-131">此方法对 HTTP 或 FTP 请求无效。</span><span class="sxs-lookup"><span data-stu-id="2a55b-131">This method does not work for HTTP or FTP requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a55b-132">此方法将用于 <xref:System.Net.NetworkCredential> SMTP 的实例放入中 <xref:System.Net.CredentialCache> 。</span><span class="sxs-lookup"><span data-stu-id="2a55b-132">This method places a <xref:System.Net.NetworkCredential> instance for use with SMTP into the <xref:System.Net.CredentialCache>.</span></span> <span data-ttu-id="2a55b-133">缓存按其添加凭据的顺序存储凭据。</span><span class="sxs-lookup"><span data-stu-id="2a55b-133">The cache stores credentials in the order in which they are added to it.</span></span> <span data-ttu-id="2a55b-134"><xref:System.Net.CredentialCache.GetCredential%28System.String%2CSystem.Int32%2CSystem.String%29>调用方法时，它将返回 <xref:System.Net.NetworkCredential> 通过匹配 `host` 、和而选择的实例 `port` `authType` 。</span><span class="sxs-lookup"><span data-stu-id="2a55b-134">When the <xref:System.Net.CredentialCache.GetCredential%28System.String%2CSystem.Int32%2CSystem.String%29> method is called, it returns a <xref:System.Net.NetworkCredential> instance that is selected by matching the `host`, `port`, and `authType`.</span></span> <span data-ttu-id="2a55b-135">比较是完成的区分。</span><span class="sxs-lookup"><span data-stu-id="2a55b-135">The comparison is done case-insensitively.</span></span>  
  
 <span data-ttu-id="2a55b-136">支持的值为 `authType` "NTLM"、"Digest"、"Kerberos" 和 "Negotiate"。</span><span class="sxs-lookup"><span data-stu-id="2a55b-136">The supported values for `authType` are "NTLM", "Digest", "Kerberos", and "Negotiate".</span></span>  
  
 <span data-ttu-id="2a55b-137">使用此方法添加的凭据仅适用于 SMTP。</span><span class="sxs-lookup"><span data-stu-id="2a55b-137">Credentials added with this method are only valid for use with SMTP.</span></span> <span data-ttu-id="2a55b-138">此方法对 HTTP 或 FTP 协议不起作用。</span><span class="sxs-lookup"><span data-stu-id="2a55b-138">This method does not work for HTTP or FTP protocols.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a55b-139">下面的代码示例 <xref:System.Net.CredentialCache> 使用多个安全凭据初始化，以便与 SMTP 一起使用，并将其中一个凭据用于 <xref:System.Net.Mail.SmtpClient> 。</span><span class="sxs-lookup"><span data-stu-id="2a55b-139">The following code example initializes a <xref:System.Net.CredentialCache> with multiple security credentials for use with SMTP and uses one of those credentials with a <xref:System.Net.Mail.SmtpClient>.</span></span>  
  
 [!code-cpp[NCL_Credential.Cache.Add_SMTP#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCL_Credential.Cache.Add_SMTP/CPP/source.cpp#1)]
 [!code-csharp[NCL_Credential.Cache.Add_SMTP#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCL_Credential.Cache.Add_SMTP/cs/source.cs#1)]
 [!code-vb[NCL_Credential.Cache.Add_SMTP#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCL_Credential.Cache.Add_SMTP/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2a55b-140"><paramref name="host" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2a55b-140"><paramref name="host" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="2a55b-141">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2a55b-141">-or-</span></span> 
 <span data-ttu-id="2a55b-142"><paramref name="authType" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2a55b-142"><paramref name="authType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2a55b-143"><paramref name="authType" /> 不是一个接受的值。</span><span class="sxs-lookup"><span data-stu-id="2a55b-143"><paramref name="authType" /> not an accepted value.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2a55b-144"><paramref name="port" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="2a55b-144"><paramref name="port" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultCredentials">
      <MemberSignature Language="C#" Value="public static System.Net.ICredentials DefaultCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.ICredentials DefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.CredentialCache.DefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultCredentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::ICredentials ^ DefaultCredentials { System::Net::ICredentials ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCredentials : System.Net.ICredentials" Usage="System.Net.CredentialCache.DefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a55b-145">获取应用程序的系统凭据。</span><span class="sxs-lookup"><span data-stu-id="2a55b-145">Gets the system credentials of the application.</span></span></summary>
        <value><span data-ttu-id="2a55b-146">表示应用程序的系统凭据的 <see cref="T:System.Net.ICredentials" />。</span><span class="sxs-lookup"><span data-stu-id="2a55b-146">An <see cref="T:System.Net.ICredentials" /> that represents the system credentials of the application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a55b-147">此 <xref:System.Net.CredentialCache.DefaultCredentials%2A> 属性仅适用于 NTLM、协商和基于 Kerberos 的身份验证。</span><span class="sxs-lookup"><span data-stu-id="2a55b-147">The <xref:System.Net.CredentialCache.DefaultCredentials%2A> property applies only to NTLM, negotiate, and Kerberos-based authentication.</span></span>  
  
 <span data-ttu-id="2a55b-148"><xref:System.Net.CredentialCache.DefaultCredentials%2A> 表示在其中运行应用程序的当前安全上下文的系统凭据。</span><span class="sxs-lookup"><span data-stu-id="2a55b-148"><xref:System.Net.CredentialCache.DefaultCredentials%2A> represents the system credentials for the current security context in which the application is running.</span></span> <span data-ttu-id="2a55b-149">对于客户端应用程序，这些通常是运行应用程序的用户的 Windows 凭据 (用户名、密码和域) 。</span><span class="sxs-lookup"><span data-stu-id="2a55b-149">For a client-side application, these are usually the Windows credentials (user name, password, and domain) of the user running the application.</span></span> <span data-ttu-id="2a55b-150">对于 ASP.NET 应用程序，默认凭据是已登录用户或正在模拟的用户的用户凭据。</span><span class="sxs-lookup"><span data-stu-id="2a55b-150">For ASP.NET applications, the default credentials are the user credentials of the logged-in user, or the user being impersonated.</span></span>  
  
 <span data-ttu-id="2a55b-151">若要获取作为实例的凭据 <xref:System.Net.NetworkCredential> ，请使用 <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="2a55b-151">To get the credentials as a <xref:System.Net.NetworkCredential> instance, use the <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> property.</span></span>  
  
 <span data-ttu-id="2a55b-152">支持的值为 `authType` "NTLM"、"Digest"、"Kerberos" 和 "Negotiate"。</span><span class="sxs-lookup"><span data-stu-id="2a55b-152">The supported values for `authType` are "NTLM", "Digest", "Kerberos", and "Negotiate".</span></span> <span data-ttu-id="2a55b-153">此方法对 HTTP 或 FTP 协议不起作用。</span><span class="sxs-lookup"><span data-stu-id="2a55b-153">This method does not work for HTTP or FTP protocols.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2a55b-154"><xref:System.Net.ICredentials>返回的实例 <xref:System.Net.CredentialCache.DefaultCredentials%2A> 无法用于查看当前安全上下文的用户名、密码或域。</span><span class="sxs-lookup"><span data-stu-id="2a55b-154">The <xref:System.Net.ICredentials> instance returned by <xref:System.Net.CredentialCache.DefaultCredentials%2A> cannot be used to view the user name, password, or domain of the current security context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a55b-155">下面的代码示例使用 <xref:System.Net.CredentialCache.DefaultCredentials%2A> 属性获取应用程序的系统凭据。</span><span class="sxs-lookup"><span data-stu-id="2a55b-155">The following code example uses the <xref:System.Net.CredentialCache.DefaultCredentials%2A> property to get the system credentials of the application.</span></span>  
  
 [!code-cpp[CredentialCache_DefaultCredentials#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CredentialCache_DefaultCredentials/CPP/credentialcache_defaultcredentials.cpp#1)]
 [!code-csharp[CredentialCache_DefaultCredentials#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CredentialCache_DefaultCredentials/CS/credentialcache_defaultcredentials.cs#1)]
 [!code-vb[CredentialCache_DefaultCredentials#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CredentialCache_DefaultCredentials/VB/credentialcache_defaultcredentials.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultNetworkCredentials">
      <MemberSignature Language="C#" Value="public static System.Net.NetworkCredential DefaultNetworkCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.NetworkCredential DefaultNetworkCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.CredentialCache.DefaultNetworkCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultNetworkCredentials As NetworkCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::NetworkCredential ^ DefaultNetworkCredentials { System::Net::NetworkCredential ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultNetworkCredentials : System.Net.NetworkCredential" Usage="System.Net.CredentialCache.DefaultNetworkCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a55b-156">获取当前安全上下文的网络凭据。</span><span class="sxs-lookup"><span data-stu-id="2a55b-156">Gets the network credentials of the current security context.</span></span></summary>
        <value><span data-ttu-id="2a55b-157">表示当前用户或应用程序的网络凭据的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="2a55b-157">An <see cref="T:System.Net.NetworkCredential" /> that represents the network credentials of the current user or application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a55b-158">属性返回的凭据 <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> 仅适用于 NTLM、协商和基于 Kerberos 的身份验证。</span><span class="sxs-lookup"><span data-stu-id="2a55b-158">The credentials returned by the <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> property is applicable only for NTLM, negotiate, and Kerberos-based authentication.</span></span>  
  
 <span data-ttu-id="2a55b-159">返回的凭据 <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> 表示运行应用程序的当前安全上下文的身份验证凭据。</span><span class="sxs-lookup"><span data-stu-id="2a55b-159">The credentials returned by <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> represents the authentication credentials for the current security context in which the application is running.</span></span> <span data-ttu-id="2a55b-160">对于客户端应用程序，这些通常是运行应用程序的用户的 Windows 凭据 (用户名、密码和域) 。</span><span class="sxs-lookup"><span data-stu-id="2a55b-160">For a client-side application, these are usually the Windows credentials (user name, password, and domain) of the user running the application.</span></span> <span data-ttu-id="2a55b-161">对于 ASP.NET 应用程序，默认的网络凭据是已登录用户或正在模拟的用户的用户凭据。</span><span class="sxs-lookup"><span data-stu-id="2a55b-161">For ASP.NET applications, the default network credentials are the user credentials of the logged-in user, or the user being impersonated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCredential">
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2a55b-162">返回与指定的统一资源标识符 (URI) 或主机和身份验证类型相关联的 <see cref="T:System.Net.NetworkCredential" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="2a55b-162">Returns a <see cref="T:System.Net.NetworkCredential" /> instance associated with a specified Uniform Resource Identifier (URI) or host, and authentication type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCredential">
      <MemberSignature Language="C#" Value="public System.Net.NetworkCredential GetCredential (Uri uriPrefix, string authType);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkCredential GetCredential(class System.Uri uriPrefix, string authType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.GetCredential(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCredential (uriPrefix As Uri, authType As String) As NetworkCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkCredential ^ GetCredential(Uri ^ uriPrefix, System::String ^ authType);" />
      <MemberSignature Language="F#" Value="abstract member GetCredential : Uri * string -&gt; System.Net.NetworkCredential&#xA;override this.GetCredential : Uri * string -&gt; System.Net.NetworkCredential" Usage="credentialCache.GetCredential (uriPrefix, authType)" />
      <MemberSignature Language="C#" Value="public System.Net.NetworkCredential? GetCredential (Uri uriPrefix, string authType);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Net.ICredentials.GetCredential(System.Uri,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.Uri" />
        <Parameter Name="authType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriPrefix"><span data-ttu-id="2a55b-163">一个 <see cref="T:System.Uri" />，它指定资源的 URI 前缀，该资源由凭据授予访问权。</span><span class="sxs-lookup"><span data-stu-id="2a55b-163">A <see cref="T:System.Uri" /> that specifies the URI prefix of the resources that the credential grants access to.</span></span></param>
        <param name="authType"><span data-ttu-id="2a55b-164">在 <paramref name="uriPrefix" /> 中命名的资源所使用的身份验证方案。</span><span class="sxs-lookup"><span data-stu-id="2a55b-164">The authentication scheme used by the resource named in <paramref name="uriPrefix" />.</span></span></param>
        <summary><span data-ttu-id="2a55b-165">返回与指定的统一资源标识符 (URI) 和身份验证类型相关联的 <see cref="T:System.Net.NetworkCredential" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="2a55b-165">Returns the <see cref="T:System.Net.NetworkCredential" /> instance associated with the specified Uniform Resource Identifier (URI) and authentication type.</span></span></summary>
        <returns><span data-ttu-id="2a55b-166"><see cref="T:System.Net.NetworkCredential" />；如果缓存中没有匹配的凭据，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2a55b-166">A <see cref="T:System.Net.NetworkCredential" /> or, if there is no matching credential in the cache, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a55b-167"><xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29>方法搜索 <xref:System.Net.CredentialCache> 并返回 <xref:System.Net.NetworkCredential> 指定 URI 和授权类型的实例。</span><span class="sxs-lookup"><span data-stu-id="2a55b-167">The <xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> method searches the <xref:System.Net.CredentialCache> and returns the <xref:System.Net.NetworkCredential> instance for the specified URI and authorization type.</span></span> <span data-ttu-id="2a55b-168">如果不 <xref:System.Net.CredentialCache> 包含匹配的 <xref:System.Net.NetworkCredential> 实例， `null` 则返回。</span><span class="sxs-lookup"><span data-stu-id="2a55b-168">If the <xref:System.Net.CredentialCache> contains no matching <xref:System.Net.NetworkCredential> instance, `null` is returned.</span></span>  
  
 <span data-ttu-id="2a55b-169"><xref:System.Net.CredentialCache.GetCredential%2A> 使用缓存中的最长匹配 URI 前缀来确定要为授权类型返回的凭据集。</span><span class="sxs-lookup"><span data-stu-id="2a55b-169"><xref:System.Net.CredentialCache.GetCredential%2A> uses the longest matching URI prefix in the cache to determine which set of credentials to return for an authorization type.</span></span> <span data-ttu-id="2a55b-170">下表显示了示例。</span><span class="sxs-lookup"><span data-stu-id="2a55b-170">The following table shows examples.</span></span>  
  
|<span data-ttu-id="2a55b-171">URI 前缀</span><span class="sxs-lookup"><span data-stu-id="2a55b-171">URI Prefix</span></span>|<span data-ttu-id="2a55b-172">匹配</span><span class="sxs-lookup"><span data-stu-id="2a55b-172">Matches</span></span>|  
|----------------|-------------|  
|`http://www.contoso.com/portal/news.htm`|<span data-ttu-id="2a55b-173">针对特定网页的请求 `news.htm` 。</span><span class="sxs-lookup"><span data-stu-id="2a55b-173">Requests for the specific Web page `news.htm`.</span></span>|  
|`http://www.contoso.com/portal/`|<span data-ttu-id="2a55b-174">请求 `portal` 路径中除页面之外的所有内容 `news.htm` 。</span><span class="sxs-lookup"><span data-stu-id="2a55b-174">Requests for all content in the `portal` path, except the page `news.htm`.</span></span>|  
|`http://www.contoso.com/`|<span data-ttu-id="2a55b-175">请求中的所有资源 `www.contoso.com` ，但路径中的资源除外 `portal` 。</span><span class="sxs-lookup"><span data-stu-id="2a55b-175">Requests for all resources at `www.contoso.com`, except those in the `portal` path.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="2a55b-176">下面的代码示例使用 <xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> 方法返回 <xref:System.Net.NetworkCredential> 与指定 URI 和身份验证类型相关联的实例。</span><span class="sxs-lookup"><span data-stu-id="2a55b-176">The following code example uses the <xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> method to return the <xref:System.Net.NetworkCredential> instance associated with the specified URI and authentication type.</span></span>  
  
 [!code-cpp[CredentialCache_GetCredential#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CredentialCache_GetCredential/CPP/credentialcache_getcredential.cpp#1)]
 [!code-csharp[CredentialCache_GetCredential#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CredentialCache_GetCredential/CS/credentialcache_getcredential.cs#1)]
 [!code-vb[CredentialCache_GetCredential#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CredentialCache_GetCredential/VB/credentialcache_getcredential.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2a55b-177"><paramref name="uriPrefix" /> 或 <paramref name="authType" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2a55b-177"><paramref name="uriPrefix" /> or <paramref name="authType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCredential">
      <MemberSignature Language="C#" Value="public System.Net.NetworkCredential GetCredential (string host, int port, string authenticationType);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkCredential GetCredential(string host, int32 port, string authenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.GetCredential(System.String,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCredential (host As String, port As Integer, authenticationType As String) As NetworkCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkCredential ^ GetCredential(System::String ^ host, int port, System::String ^ authenticationType);" />
      <MemberSignature Language="F#" Value="abstract member GetCredential : string * int * string -&gt; System.Net.NetworkCredential&#xA;override this.GetCredential : string * int * string -&gt; System.Net.NetworkCredential" Usage="credentialCache.GetCredential (host, port, authenticationType)" />
      <MemberSignature Language="C#" Value="public System.Net.NetworkCredential? GetCredential (string host, int port, string authenticationType);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Net.ICredentialsByHost.GetCredential(System.String,System.Int32,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="port" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="authenticationType" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="host"><span data-ttu-id="2a55b-178">标识主机的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="2a55b-178">A <see cref="T:System.String" /> that identifies the host computer.</span></span></param>
        <param name="port"><span data-ttu-id="2a55b-179">指定要连接到 <paramref name="host" /> 的端口的 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="2a55b-179">A <see cref="T:System.Int32" /> that specifies the port to connect to on <paramref name="host" />.</span></span></param>
        <param name="authenticationType"><span data-ttu-id="2a55b-180"><see cref="T:System.String" />，它标识连接到 <paramref name="host" /> 时使用的身份验证方案。</span><span class="sxs-lookup"><span data-stu-id="2a55b-180">A <see cref="T:System.String" /> that identifies the authentication scheme used when connecting to <paramref name="host" />.</span></span></param>
        <summary><span data-ttu-id="2a55b-181">返回与指定的主机、端口和身份验证协议关联的 <see cref="T:System.Net.NetworkCredential" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="2a55b-181">Returns the <see cref="T:System.Net.NetworkCredential" /> instance associated with the specified host, port, and authentication protocol.</span></span></summary>
        <returns><span data-ttu-id="2a55b-182"><see cref="T:System.Net.NetworkCredential" />；如果缓存中没有匹配的凭据，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2a55b-182">A <see cref="T:System.Net.NetworkCredential" /> or, if there is no matching credential in the cache, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a55b-183">此方法搜索 <xref:System.Net.CredentialCache> 并返回 <xref:System.Net.NetworkCredential> 指定主机、端口和授权类型的实例。</span><span class="sxs-lookup"><span data-stu-id="2a55b-183">This method searches the <xref:System.Net.CredentialCache> and returns the <xref:System.Net.NetworkCredential> instance for the specified host, port, and authorization type.</span></span> <span data-ttu-id="2a55b-184">`host` `port` `authType` 与使用方法将凭据添加到时指定的值相比，传递到此方法的、和值区分 <xref:System.Net.CredentialCache> <xref:System.Net.CredentialCache.Add%2A> 。</span><span class="sxs-lookup"><span data-stu-id="2a55b-184">The `host`, `port`, and `authType` values passed to this method are case-insensitively compared to the values specified when the credential was added to the <xref:System.Net.CredentialCache> using the <xref:System.Net.CredentialCache.Add%2A> methods.</span></span>  
  
 <span data-ttu-id="2a55b-185">支持的值为 `authType` "NTLM"、"Digest"、"Kerberos" 和 "Negotiate"。</span><span class="sxs-lookup"><span data-stu-id="2a55b-185">The supported values for `authType` are "NTLM", "Digest", "Kerberos", and "Negotiate".</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2a55b-186"><paramref name="host" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2a55b-186"><paramref name="host" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="2a55b-187">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2a55b-187">-or-</span></span> 
 <span data-ttu-id="2a55b-188"><paramref name="authType" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2a55b-188"><paramref name="authType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2a55b-189"><paramref name="authType" /> 不是一个接受的值。</span><span class="sxs-lookup"><span data-stu-id="2a55b-189"><paramref name="authType" /> not an accepted value.</span></span>  
  
<span data-ttu-id="2a55b-190">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2a55b-190">-or-</span></span> 
 <span data-ttu-id="2a55b-191"><paramref name="host" /> 是空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="2a55b-191"><paramref name="host" /> is equal to the empty string ("").</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2a55b-192"><paramref name="port" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="2a55b-192"><paramref name="port" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="credentialCache.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2a55b-193">返回可循环访问 <see cref="T:System.Net.CredentialCache" /> 实例的枚举器。</span><span class="sxs-lookup"><span data-stu-id="2a55b-193">Returns an enumerator that can iterate through the <see cref="T:System.Net.CredentialCache" /> instance.</span></span></summary>
        <returns><span data-ttu-id="2a55b-194"><see cref="T:System.Collections.IEnumerator" /> 的一个 <see cref="T:System.Net.CredentialCache" />。</span><span class="sxs-lookup"><span data-stu-id="2a55b-194">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Net.CredentialCache" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2a55b-195">下面的代码示例使用 <xref:System.Net.CredentialCache.GetEnumerator%2A> 方法返回可循环访问实例的枚举器 <xref:System.Net.CredentialCache> 。</span><span class="sxs-lookup"><span data-stu-id="2a55b-195">The following code example uses the <xref:System.Net.CredentialCache.GetEnumerator%2A> method to return an enumerator that can iterate through the <xref:System.Net.CredentialCache> instance.</span></span>  
  
 [!code-cpp[CredentialCache_GetEnumerator#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CredentialCache_GetEnumerator/CPP/credentialcache_getenumerator.cpp#1)]
 [!code-csharp[CredentialCache_GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CredentialCache_GetEnumerator/CS/credentialcache_getenumerator.cs#1)]
 [!code-vb[CredentialCache_GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CredentialCache_GetEnumerator/VB/credentialcache_getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2a55b-196">从缓存删除 <see cref="T:System.Net.NetworkCredential" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="2a55b-196">Deletes a <see cref="T:System.Net.NetworkCredential" /> instance from the cache.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (Uri uriPrefix, string authType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Uri uriPrefix, string authType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.Remove(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (uriPrefix As Uri, authType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(Uri ^ uriPrefix, System::String ^ authType);" />
      <MemberSignature Language="F#" Value="member this.Remove : Uri * string -&gt; unit" Usage="credentialCache.Remove (uriPrefix, authType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.Uri" />
        <Parameter Name="authType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriPrefix"><span data-ttu-id="2a55b-197"><see cref="T:System.Uri" />，它指定该凭据所用于的资源的 URI 前缀。</span><span class="sxs-lookup"><span data-stu-id="2a55b-197">A <see cref="T:System.Uri" /> that specifies the URI prefix of the resources that the credential is used for.</span></span></param>
        <param name="authType"><span data-ttu-id="2a55b-198"><paramref name="uriPrefix" /> 中命名的主机所使用的身份验证方案。</span><span class="sxs-lookup"><span data-stu-id="2a55b-198">The authentication scheme used by the host named in <paramref name="uriPrefix" />.</span></span></param>
        <summary><span data-ttu-id="2a55b-199">如果 <see cref="T:System.Net.NetworkCredential" /> 实例与指定的统一资源标识符 (URI) 前缀和身份验证协议相关联，则将其从缓存中删除。</span><span class="sxs-lookup"><span data-stu-id="2a55b-199">Deletes a <see cref="T:System.Net.NetworkCredential" /> instance from the cache if it is associated with the specified Uniform Resource Identifier (URI) prefix and authentication protocol.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a55b-200"><xref:System.Net.NetworkCredential> <xref:System.Net.CredentialCache> 如果指定的 URI 前缀和身份验证协议与凭据关联的协议相匹配，则此方法将从中移除实例。</span><span class="sxs-lookup"><span data-stu-id="2a55b-200">This method removes a <xref:System.Net.NetworkCredential> instance from the <xref:System.Net.CredentialCache> if the specified URI prefix and authentication protocol match those associated with the credential.</span></span> <span data-ttu-id="2a55b-201">对相同的方法的多个调用 <xref:System.Net.CredentialCache.Remove%2A> <xref:System.Net.NetworkCredential> 不起作用。</span><span class="sxs-lookup"><span data-stu-id="2a55b-201">Multiple calls to the <xref:System.Net.CredentialCache.Remove%2A> method for the same <xref:System.Net.NetworkCredential> have no effect.</span></span>  
  
 <span data-ttu-id="2a55b-202">如果 `authType` 为 `null` 或 `uriPrefix` 为 `null` ，或者在缓存中找不到匹配的凭据，则此方法不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="2a55b-202">If `authType` is `null` or `uriPrefix` is `null`, or no matching credential is found in the cache, this method does nothing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a55b-203">下面的代码示例使用此方法 <xref:System.Net.NetworkCredential> 从缓存中删除实例。</span><span class="sxs-lookup"><span data-stu-id="2a55b-203">The following code example uses this method to delete a <xref:System.Net.NetworkCredential> instance from the cache.</span></span>  
  
 [!code-cpp[CredentialCache_Add_Remove#3](~/samples/snippets/cpp/VS_Snippets_Remoting/CredentialCache_Add_Remove/CPP/credentialcache_add_remove.cpp#3)]
 [!code-csharp[CredentialCache_Add_Remove#3](~/samples/snippets/csharp/VS_Snippets_Remoting/CredentialCache_Add_Remove/CS/credentialcache_add_remove.cs#3)]
 [!code-vb[CredentialCache_Add_Remove#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CredentialCache_Add_Remove/VB/credentialcache_add_remove.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string host, int port, string authenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string host, int32 port, string authenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.Remove(System.String,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (host As String, port As Integer, authenticationType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ host, int port, System::String ^ authenticationType);" />
      <MemberSignature Language="F#" Value="member this.Remove : string * int * string -&gt; unit" Usage="credentialCache.Remove (host, port, authenticationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="port" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="authenticationType" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="host"><span data-ttu-id="2a55b-204">标识主机的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="2a55b-204">A <see cref="T:System.String" /> that identifies the host computer.</span></span></param>
        <param name="port"><span data-ttu-id="2a55b-205">指定要连接到 <paramref name="host" /> 的端口的 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="2a55b-205">A <see cref="T:System.Int32" /> that specifies the port to connect to on <paramref name="host" />.</span></span></param>
        <param name="authenticationType"><span data-ttu-id="2a55b-206"><see cref="T:System.String" />，它标识连接到 <paramref name="host" /> 时使用的身份验证方案。</span><span class="sxs-lookup"><span data-stu-id="2a55b-206">A <see cref="T:System.String" /> that identifies the authentication scheme used when connecting to <paramref name="host" />.</span></span></param>
        <summary><span data-ttu-id="2a55b-207">如果 <see cref="T:System.Net.NetworkCredential" /> 实例与指定的主机、端口和身份验证协议相关联，则将其从缓存中删除。</span><span class="sxs-lookup"><span data-stu-id="2a55b-207">Deletes a <see cref="T:System.Net.NetworkCredential" /> instance from the cache if it is associated with the specified host, port, and authentication protocol.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a55b-208"><xref:System.Net.NetworkCredential> <xref:System.Net.CredentialCache> 如果指定的主机、端口和身份验证协议与凭据关联的协议匹配，此方法将从中移除实例。</span><span class="sxs-lookup"><span data-stu-id="2a55b-208">This method removes a <xref:System.Net.NetworkCredential> instance from the <xref:System.Net.CredentialCache> if the specified host, port, and authentication protocol match those associated with the credential.</span></span> <span data-ttu-id="2a55b-209">对相同的方法的多个调用 <xref:System.Net.CredentialCache.Remove%2A> <xref:System.Net.NetworkCredential> 不起作用。</span><span class="sxs-lookup"><span data-stu-id="2a55b-209">Multiple calls to the <xref:System.Net.CredentialCache.Remove%2A> method for the same <xref:System.Net.NetworkCredential> have no effect.</span></span>  
  
 <span data-ttu-id="2a55b-210">如果 `authType` 为 `null` 或 `uriPrefix` 为 `null` ，或者在缓存中找不到匹配的凭据，则此方法不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="2a55b-210">If `authType` is `null` or `uriPrefix` is `null`, or no matching credential is found in the cache, this method does nothing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
