<Type Name="VisualState" FullName="System.Windows.VisualState">
  <Metadata><Meta Name="ms.openlocfilehash" Value="59734008e834438902a9aa04bb5ef565dbb28455" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83947953" /></Metadata><TypeSignature Language="C#" Value="public class VisualState : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualState extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualState" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualState&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualState : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type VisualState = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Storyboard")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9ff33-101">表示特定状态下控件的可视外观。</span><span class="sxs-lookup"><span data-stu-id="9ff33-101">Represents the visual appearance of the control when it is in a specific state.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ff33-102">一个 <xref:System.Windows.VisualState> 指定控件在处于某种状态时的外观。</span><span class="sxs-lookup"><span data-stu-id="9ff33-102">A <xref:System.Windows.VisualState> specifies how the control looks when it is in a certain state.</span></span> <span data-ttu-id="9ff33-103">例如，当按下 <xref:System.Windows.Controls.Button> 时，其边框可能不同于正常颜色。</span><span class="sxs-lookup"><span data-stu-id="9ff33-103">For example, when a <xref:System.Windows.Controls.Button> is pressed, its border might be a different color than normal.</span></span>  <span data-ttu-id="9ff33-104"><xref:System.Windows.VisualState> 类具有一个更改控件外观的 <xref:System.Windows.VisualState.Storyboard%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="9ff33-104">The <xref:System.Windows.VisualState> class has a <xref:System.Windows.VisualState.Storyboard%2A> property that changes the appearance of the control.</span></span> <span data-ttu-id="9ff33-105">如果控件进入 <xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType> 属性指定的状态，则 <xref:System.Windows.VisualState.Storyboard%2A> 开始。</span><span class="sxs-lookup"><span data-stu-id="9ff33-105">When the control enters the state that is specified by the <xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType> property, the <xref:System.Windows.VisualState.Storyboard%2A> begins.</span></span> <span data-ttu-id="9ff33-106">当控件退出状态时，<xref:System.Windows.VisualState.Storyboard%2A> 停止。</span><span class="sxs-lookup"><span data-stu-id="9ff33-106">When the control exits the state, the <xref:System.Windows.VisualState.Storyboard%2A> stops.</span></span>  
  
 <span data-ttu-id="9ff33-107"><xref:System.Windows.VisualStateGroup.States%2A?displayProperty=nameWithType> 属性包含 <xref:System.Windows.VisualState> 对象。</span><span class="sxs-lookup"><span data-stu-id="9ff33-107">The <xref:System.Windows.VisualStateGroup.States%2A?displayProperty=nameWithType> property contains <xref:System.Windows.VisualState> objects.</span></span> <span data-ttu-id="9ff33-108"><xref:System.Windows.VisualStateGroup> 对象将添加到 <xref:System.Windows.VisualStateManager.VisualStateGroups%2A?displayProperty=nameWithType> 附加属性，该属性是在 <xref:System.Windows.FrameworkElement>上定义的。</span><span class="sxs-lookup"><span data-stu-id="9ff33-108"><xref:System.Windows.VisualStateGroup> objects are added to the <xref:System.Windows.VisualStateManager.VisualStateGroups%2A?displayProperty=nameWithType> attached property, which is defined on the on a <xref:System.Windows.FrameworkElement>.</span></span> <span data-ttu-id="9ff33-109">您可以将 <xref:System.Windows.VisualState> 对象添加到任何 <xref:System.Windows.FrameworkElement>中，但它们通常用于 <xref:System.Windows.Controls.Control>的 <xref:System.Windows.Controls.ControlTemplate>。</span><span class="sxs-lookup"><span data-stu-id="9ff33-109">You can add <xref:System.Windows.VisualState> objects to any <xref:System.Windows.FrameworkElement>, but they are typically are used in a <xref:System.Windows.Controls.ControlTemplate> of a <xref:System.Windows.Controls.Control>.</span></span> <span data-ttu-id="9ff33-110">有关如何为现有控件创建 <xref:System.Windows.Controls.ControlTemplate> 和 <xref:System.Windows.VisualState> 对象的信息，请参阅[通过创建 System.windows.controls.controltemplate> 自定义现有控件的外观](/dotnet/framework/wpf/controls/customizing-the-appearance-of-an-existing-control)。</span><span class="sxs-lookup"><span data-stu-id="9ff33-110">For information about how to create a <xref:System.Windows.Controls.ControlTemplate> and <xref:System.Windows.VisualState> objects for existing controls, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](/dotnet/framework/wpf/controls/customizing-the-appearance-of-an-existing-control).</span></span> <span data-ttu-id="9ff33-111">有关在 <xref:System.Windows.Controls.ControlTemplate>外使用 <xref:System.Windows.VisualState> 对象的示例，请参阅 <xref:System.Windows.VisualStateManager> 类。</span><span class="sxs-lookup"><span data-stu-id="9ff33-111">For an example of using <xref:System.Windows.VisualState> objects outside of a <xref:System.Windows.Controls.ControlTemplate>, see the <xref:System.Windows.VisualStateManager> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ff33-112">下面的示例在名为 `CommonStates` 的 <xref:System.Windows.Controls.Button> <xref:System.Windows.Controls.ControlTemplate> 中创建 <xref:System.Windows.VisualStateGroup>，并为状态、<xref:System.Windows.VisualState>、`Normal`和 `Pressed`添加 `MouseOver`对象。</span><span class="sxs-lookup"><span data-stu-id="9ff33-112">The following example creates a <xref:System.Windows.VisualStateGroup> in the <xref:System.Windows.Controls.ControlTemplate> of a <xref:System.Windows.Controls.Button> called `CommonStates` and adds <xref:System.Windows.VisualState> objects for the states, `Normal`, `Pressed`, and `MouseOver`.</span></span> <span data-ttu-id="9ff33-113"><xref:System.Windows.Controls.Button> 还定义了一个名为 `Disabled` 的状态，该状态是 `CommonStates`<xref:System.Windows.VisualStateGroup>中的，但对于简洁起见，该示例省略了该状态。</span><span class="sxs-lookup"><span data-stu-id="9ff33-113">The <xref:System.Windows.Controls.Button> also defines a state called `Disabled` that is in the `CommonStates`<xref:System.Windows.VisualStateGroup>, but the example omits it for brevity.</span></span> <span data-ttu-id="9ff33-114">有关完整示例，请参阅[通过创建 System.windows.controls.controltemplate> 自定义现有控件的外观](/dotnet/framework/wpf/controls/customizing-the-appearance-of-an-existing-control)。</span><span class="sxs-lookup"><span data-stu-id="9ff33-114">For the entire example, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](/dotnet/framework/wpf/controls/customizing-the-appearance-of-an-existing-control).</span></span>  
  
 [!code-xaml[VSMButtonTemplate#10](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/buttonstages.xaml#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualState.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualState();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9ff33-115">初始化 <see cref="T:System.Windows.VisualState" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9ff33-115">Initializes a new instance of the <see cref="T:System.Windows.VisualState" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualState.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.VisualState.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9ff33-116">获取或设置 <see cref="T:System.Windows.VisualState" /> 的名称。</span><span class="sxs-lookup"><span data-stu-id="9ff33-116">Gets or sets the name of the <see cref="T:System.Windows.VisualState" />.</span></span></summary>
        <value><span data-ttu-id="9ff33-117"><see cref="T:System.Windows.VisualState" /> 的名称。</span><span class="sxs-lookup"><span data-stu-id="9ff33-117">The name of the <see cref="T:System.Windows.VisualState" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ff33-118">通过将 <xref:System.Windows.VisualState> 的 <xref:System.Windows.VisualState.Name%2A> 传递到 <xref:System.Windows.VisualStateManager>，指定元素应输入的可视状态。</span><span class="sxs-lookup"><span data-stu-id="9ff33-118">You specify which visual state an element should enter by passing the <xref:System.Windows.VisualState.Name%2A> of the <xref:System.Windows.VisualState> to the <xref:System.Windows.VisualStateManager>.</span></span>  
  
 <span data-ttu-id="9ff33-119">当 <xref:System.Windows.Controls.Control> 在 <xref:System.Windows.Controls.ControlTemplate>使用 <xref:System.Windows.VisualStateManager> 时，控件作者应通过在其类签名上放置 <xref:System.Windows.Controls.ControlTemplate> 来指定控件希望在其 <xref:System.Windows.TemplateVisualStateAttribute> 中查找的 <xref:System.Windows.VisualState> 对象。</span><span class="sxs-lookup"><span data-stu-id="9ff33-119">When a <xref:System.Windows.Controls.Control> uses the <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.Controls.ControlTemplate>, the control author should specify which <xref:System.Windows.VisualState> objects the control expects to find in its <xref:System.Windows.Controls.ControlTemplate> by putting the <xref:System.Windows.TemplateVisualStateAttribute> on its class signature.</span></span> <span data-ttu-id="9ff33-120"><xref:System.Windows.Controls.ControlTemplate> 作者定义新的 <xref:System.Windows.VisualState> 对象，并将 <xref:System.Windows.VisualState.Name%2A> 属性设置为 <xref:System.Windows.TemplateVisualStateAttribute.Name%2A?displayProperty=nameWithType> 属性指定的值。</span><span class="sxs-lookup"><span data-stu-id="9ff33-120"><xref:System.Windows.Controls.ControlTemplate> authors define new <xref:System.Windows.VisualState> objects and set the <xref:System.Windows.VisualState.Name%2A> property to the value specified by the <xref:System.Windows.TemplateVisualStateAttribute.Name%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="9ff33-121">若要查找 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]附带的控件的可视状态的名称，请参阅[控件样式和模板](/dotnet/framework/wpf/controls/control-styles-and-templates)。</span><span class="sxs-lookup"><span data-stu-id="9ff33-121">To find the names of the visual states for the controls that are included with [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], see [Control Styles and Templates](/dotnet/framework/wpf/controls/control-styles-and-templates).</span></span> <span data-ttu-id="9ff33-122">有关如何为现有控件创建 <xref:System.Windows.Controls.ControlTemplate> 和 <xref:System.Windows.VisualState> 对象的信息，请参阅[通过创建 System.windows.controls.controltemplate> 自定义现有控件的外观](/dotnet/framework/wpf/controls/customizing-the-appearance-of-an-existing-control)。</span><span class="sxs-lookup"><span data-stu-id="9ff33-122">For information about how to create a <xref:System.Windows.Controls.ControlTemplate> and <xref:System.Windows.VisualState> objects for existing controls, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](/dotnet/framework/wpf/controls/customizing-the-appearance-of-an-existing-control).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ff33-123">下面的示例在名为 `CommonStates` 的 <xref:System.Windows.Controls.Button> <xref:System.Windows.Controls.ControlTemplate> 中创建 <xref:System.Windows.VisualStateGroup>，并为状态、<xref:System.Windows.VisualState>、`Normal`和 `Pressed`添加 `MouseOver`对象。</span><span class="sxs-lookup"><span data-stu-id="9ff33-123">The following example creates a <xref:System.Windows.VisualStateGroup> in the <xref:System.Windows.Controls.ControlTemplate> of a <xref:System.Windows.Controls.Button> called `CommonStates` and adds <xref:System.Windows.VisualState> objects for the states, `Normal`, `Pressed`, and `MouseOver`.</span></span> <span data-ttu-id="9ff33-124"><xref:System.Windows.Controls.Button> 还定义了一个名为 `Disabled` 的状态，该状态是 `CommonStates`<xref:System.Windows.VisualStateGroup>中的，但对于简洁起见，该示例省略了该状态。</span><span class="sxs-lookup"><span data-stu-id="9ff33-124">The <xref:System.Windows.Controls.Button> also defines a state called `Disabled` that is in the `CommonStates`<xref:System.Windows.VisualStateGroup>, but the example omits it for brevity.</span></span> <span data-ttu-id="9ff33-125">有关完整示例，请参阅[通过创建 System.windows.controls.controltemplate> 自定义现有控件的外观](/dotnet/framework/wpf/controls/customizing-the-appearance-of-an-existing-control)。</span><span class="sxs-lookup"><span data-stu-id="9ff33-125">For the entire example, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](/dotnet/framework/wpf/controls/customizing-the-appearance-of-an-existing-control).</span></span>  
  
 [!code-xaml[VSMButtonTemplate#10](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/buttonstages.xaml#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Storyboard">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Storyboard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Storyboard Storyboard" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualState.Storyboard" />
      <MemberSignature Language="VB.NET" Value="Public Property Storyboard As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Storyboard ^ Storyboard { System::Windows::Media::Animation::Storyboard ^ get(); void set(System::Windows::Media::Animation::Storyboard ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Storyboard : System.Windows.Media.Animation.Storyboard with get, set" Usage="System.Windows.VisualState.Storyboard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9ff33-126">获取或设置一个 <see cref="T:System.Windows.Media.Animation.Storyboard" />，它定义控件在 <see cref="T:System.Windows.VisualState" /> 所表示的状态下的外观。</span><span class="sxs-lookup"><span data-stu-id="9ff33-126">Gets or sets a <see cref="T:System.Windows.Media.Animation.Storyboard" /> that defines the appearance of the control when it is in the state that is represented by the <see cref="T:System.Windows.VisualState" />.</span></span></summary>
        <value><span data-ttu-id="9ff33-127">一个演示图板，它定义控件在 <see cref="T:System.Windows.VisualState" /> 所表示的状态下的外观。</span><span class="sxs-lookup"><span data-stu-id="9ff33-127">A storyboard that defines the appearance of the control when it is in the state that is represented by the <see cref="T:System.Windows.VisualState" />.</span></span> <span data-ttu-id="9ff33-128">默认为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9ff33-128">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ff33-129">如果控件进入 <xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType> 属性指定的状态，则 <xref:System.Windows.VisualState.Storyboard%2A> 开始。</span><span class="sxs-lookup"><span data-stu-id="9ff33-129">When the control enters the state that is specified by the <xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType> property, the <xref:System.Windows.VisualState.Storyboard%2A> begins.</span></span> <span data-ttu-id="9ff33-130">当控件退出状态时，<xref:System.Windows.VisualState.Storyboard%2A> 停止。</span><span class="sxs-lookup"><span data-stu-id="9ff33-130">When the control exits the state, the <xref:System.Windows.VisualState.Storyboard%2A> stops.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ff33-131">下面的示例为包含一个 <xref:System.Windows.Controls.Grid>的 <xref:System.Windows.Controls.Button> 创建一个简单的 <xref:System.Windows.Controls.ControlTemplate>。</span><span class="sxs-lookup"><span data-stu-id="9ff33-131">The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>.</span></span>  <span data-ttu-id="9ff33-132">`MouseOver` 的 <xref:System.Windows.VisualState> 包含一个情节提要，当用户将鼠标放在 <xref:System.Windows.Controls.Button>上时，它会将 <xref:System.Windows.Controls.Grid> 的颜色从绿色更改为红色。</span><span class="sxs-lookup"><span data-stu-id="9ff33-132">The <xref:System.Windows.VisualState> called `MouseOver` has a Storyboard that changes the color of the <xref:System.Windows.Controls.Grid> from green to red when the user puts the mouse over the <xref:System.Windows.Controls.Button>.</span></span>  <span data-ttu-id="9ff33-133">包括名为 `Normal` 的 <xref:System.Windows.VisualState>，这样当用户将鼠标移出按钮时，<xref:System.Windows.Controls.Grid> 将恢复为绿色。</span><span class="sxs-lookup"><span data-stu-id="9ff33-133">The <xref:System.Windows.VisualState> called `Normal` is included so that when the user moves the mouse off the button, the <xref:System.Windows.Controls.Grid> returns to green.</span></span>  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
