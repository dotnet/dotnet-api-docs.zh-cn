<Type Name="Point" FullName="System.Windows.Point">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a3f78680467624f83875432a9248f2be3b0bc8aa" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89778301" /></Metadata><TypeSignature Language="C#" Value="public struct Point : IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Point extends System.ValueType implements class System.IFormattable" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Point" />
  <TypeSignature Language="VB.NET" Value="Public Structure Point&#xA;Implements IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Point : IFormattable" />
  <TypeSignature Language="F#" Value="type Point = struct&#xA;    interface IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Point extends System.ValueType implements class System.IFormattable" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Windows.PointConverter))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Windows.PointConverter))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Windows.Markup.ValueSerializer(typeof(System.Windows.Converters.PointValueSerializer))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Windows.Markup.ValueSerializer(typeof(System.Windows.Converters.PointValueSerializer))&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3841d-101">表示二维空间中的 x 坐标和 y 坐标对。</span><span class="sxs-lookup"><span data-stu-id="3841d-101">Represents an x- and y-coordinate pair in two-dimensional space.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3841d-102">在 XAML 中，和值之间的分隔符 <xref:System.Windows.Point.X%2A> <xref:System.Windows.Point.Y%2A> 可以是 <xref:System.Windows.Point> 逗号或空格。</span><span class="sxs-lookup"><span data-stu-id="3841d-102">In XAML, the delimiter between the <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> values of a <xref:System.Windows.Point> can be either a comma or a space.</span></span>  
  
 <span data-ttu-id="3841d-103">某些区域性可能使用逗号字符作为小数分隔符，而不是句点字符。</span><span class="sxs-lookup"><span data-stu-id="3841d-103">Some cultures might use the comma character as the decimal delimiter instead of the period character.</span></span> <span data-ttu-id="3841d-104">在大多数 XAML 处理器实现中，用于固定区域性的 XAML 处理默认为 en-us，并期望句点是小数分隔符。</span><span class="sxs-lookup"><span data-stu-id="3841d-104">XAML processing for invariant culture defaults to en-US in most XAML processor implementations, and expects the period to be the decimal delimiter.</span></span> <span data-ttu-id="3841d-105">如果在 XAML 中指定了，则应避免使用逗号字符作为小数分隔符 <xref:System.Windows.Point> ，因为这将与 <xref:System.Windows.Point> 属性值到 <xref:System.Windows.Point.X%2A> 和组件的字符串类型转换冲突 <xref:System.Windows.Point.Y%2A> 。</span><span class="sxs-lookup"><span data-stu-id="3841d-105">You should avoid using the comma character as the decimal delimiter if specifying a <xref:System.Windows.Point> in XAML, because that will clash with the string type conversion of a <xref:System.Windows.Point> attribute value into the <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> components.</span></span>  
  
<a name="xamlAttributeUsage_Duration"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="3841d-106">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="3841d-106">XAML Attribute Usage</span></span>  
  
```  
<object property="x,y"/>  
-or-  
<object property="x y"/>  
```  
  
<a name="xamlValues_MinWidth"></a>   
## <a name="xaml-values"></a><span data-ttu-id="3841d-107">XAML 值</span><span class="sxs-lookup"><span data-stu-id="3841d-107">XAML Values</span></span>  
 <span data-ttu-id="3841d-108">*x*</span><span class="sxs-lookup"><span data-stu-id="3841d-108">*x*</span></span>  
 <span data-ttu-id="3841d-109">此 <xref:System.Windows.Point> 的 x 坐标。</span><span class="sxs-lookup"><span data-stu-id="3841d-109">The x-coordinate of this <xref:System.Windows.Point>.</span></span>  
  
 <span data-ttu-id="3841d-110">*y*</span><span class="sxs-lookup"><span data-stu-id="3841d-110">*y*</span></span>  
 <span data-ttu-id="3841d-111">此 <xref:System.Windows.Point> 的 y 坐标。</span><span class="sxs-lookup"><span data-stu-id="3841d-111">The y-coordinate of this <xref:System.Windows.Point>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3841d-112">下面的示例演示如何检查两个 <xref:System.Windows.Point> 结构是否不相等。</span><span class="sxs-lookup"><span data-stu-id="3841d-112">The following example shows how to check if two <xref:System.Windows.Point> structures are not equal.</span></span>  <span data-ttu-id="3841d-113">它还说明了 <xref:System.Windows.Point> 在声明结构时以及在声明结构后如何向结构分配值。</span><span class="sxs-lookup"><span data-stu-id="3841d-113">It also illustrates how to assign values to a <xref:System.Windows.Point> structure when the structure is being declared and after the structure has been declared.</span></span>  
  
 [!code-csharp[PointExamples_snip#PointInequalityExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#pointinequalityexample)]
 [!code-vb[PointExamples_snip#PointInequalityExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#pointinequalityexample)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Point (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.#ctor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (x As Double, y As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Point(double x, double y);" />
      <MemberSignature Language="F#" Value="new System.Windows.Point : double * double -&gt; System.Windows.Point" Usage="new System.Windows.Point (x, y)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="3841d-114">新的 <see cref="T:System.Windows.Point" /> 结构的 x 坐标。</span><span class="sxs-lookup"><span data-stu-id="3841d-114">The x-coordinate of the new <see cref="T:System.Windows.Point" /> structure.</span></span></param>
        <param name="y"><span data-ttu-id="3841d-115">新的 <see cref="T:System.Windows.Point" /> 结构的 y 坐标。</span><span class="sxs-lookup"><span data-stu-id="3841d-115">The y-coordinate of the new <see cref="T:System.Windows.Point" /> structure.</span></span></param>
        <summary><span data-ttu-id="3841d-116">创建一个包含指定坐标的新 <see cref="T:System.Windows.Point" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="3841d-116">Creates a new <see cref="T:System.Windows.Point" /> structure that contains the specified coordinates.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Windows.Point Add (System.Windows.Point point, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Point Add(valuetype System.Windows.Point point, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Add(System.Windows.Point,System.Windows.Vector)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (point As Point, vector As Vector) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point Add(System::Windows::Point point, System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="static member Add : System.Windows.Point * System.Windows.Vector -&gt; System.Windows.Point" Usage="System.Windows.Point.Add (point, vector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="3841d-117">要添加的 <see cref="T:System.Windows.Point" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="3841d-117">The <see cref="T:System.Windows.Point" /> structure to add.</span></span></param>
        <param name="vector"><span data-ttu-id="3841d-118">要添加的 <see cref="T:System.Windows.Vector" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="3841d-118">The <see cref="T:System.Windows.Vector" /> structure to add.</span></span></param>
        <summary><span data-ttu-id="3841d-119">将 <see cref="T:System.Windows.Vector" /> 与 <see cref="T:System.Windows.Point" /> 相加并将结果以 <see cref="T:System.Windows.Point" /> 结构返回。</span><span class="sxs-lookup"><span data-stu-id="3841d-119">Adds a <see cref="T:System.Windows.Vector" /> to a <see cref="T:System.Windows.Point" /> and returns the result as a <see cref="T:System.Windows.Point" /> structure.</span></span></summary>
        <returns><span data-ttu-id="3841d-120">返回 <paramref name="point" /> 和 <paramref name="vector" /> 的总和。</span><span class="sxs-lookup"><span data-stu-id="3841d-120">Returns the sum of <paramref name="point" /> and <paramref name="vector" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3841d-121">禁止将 <xref:System.Windows.Point> 结构添加到 <xref:System.Windows.Point> 结构。</span><span class="sxs-lookup"><span data-stu-id="3841d-121">Adding a <xref:System.Windows.Point> structure to a <xref:System.Windows.Point> structure is prohibited.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3841d-122">此示例将添加 <xref:System.Windows.Point> 到 <xref:System.Windows.Vector> ，并以结构的形式返回结果 <xref:System.Windows.Vector> 。</span><span class="sxs-lookup"><span data-stu-id="3841d-122">This example adds a <xref:System.Windows.Point> to a <xref:System.Windows.Vector> and returns the result as a <xref:System.Windows.Vector> structure.</span></span>  
  
 [!code-csharp[PointExamples_snip#AddPointAndVectorExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#addpointandvectorexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Addition(System.Windows.Point,System.Windows.Vector)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3841d-123">比较两个 <see cref="T:System.Windows.Point" /> 结构是否相等。</span><span class="sxs-lookup"><span data-stu-id="3841d-123">Compares two <see cref="T:System.Windows.Point" /> structures for equality.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="point.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="3841d-124">要比较的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="3841d-124">The <see cref="T:System.Object" /> to compare.</span></span></param>
        <summary><span data-ttu-id="3841d-125">确定指定的 <see cref="T:System.Object" /> 是否是 <see cref="T:System.Windows.Point" /> 以及它是否包含与此 <see cref="T:System.Windows.Point" /> 相同的坐标。</span><span class="sxs-lookup"><span data-stu-id="3841d-125">Determines whether the specified <see cref="T:System.Object" /> is a <see cref="T:System.Windows.Point" /> and whether it contains the same coordinates as this <see cref="T:System.Windows.Point" />.</span></span></summary>
        <returns><span data-ttu-id="3841d-126">如果 <paramref name="o" /> 是 <see cref="T:System.Windows.Point" /> 并且包含与此 <see cref="P:System.Windows.Point.X" /> 相同的 <see cref="P:System.Windows.Point.Y" /> 值和 <see cref="T:System.Windows.Point" /> 值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3841d-126"><see langword="true" /> if <paramref name="o" /> is a <see cref="T:System.Windows.Point" /> and contains the same <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values as this <see cref="T:System.Windows.Point" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3841d-127"><xref:System.Windows.Point> 使用值描述坐标 <xref:System.Double> 。</span><span class="sxs-lookup"><span data-stu-id="3841d-127"><xref:System.Windows.Point> coordinates are described using <xref:System.Double> values.</span></span> <span data-ttu-id="3841d-128">由于在 <xref:System.Double> 上运算时，的值可能会丢失精度，因此，逻辑上相等的两个值之间的比较 <xref:System.Windows.Point> 可能会失败。</span><span class="sxs-lookup"><span data-stu-id="3841d-128">Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3841d-129">下面的示例演示如何 <xref:System.Windows.Point> 使用非静态方法检查两个结构是否相等 <xref:System.Windows.Point.Equals%2A> 。</span><span class="sxs-lookup"><span data-stu-id="3841d-129">The following example shows how to check if two <xref:System.Windows.Point> structures are equal using the non-static <xref:System.Windows.Point.Equals%2A> method.</span></span>  
  
 [!code-csharp[PointExamples_snip#NonStaticEqualsExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#nonstaticequalsexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Point value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.Point value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Equals(System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Windows::Point value);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Point -&gt; bool" Usage="point.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3841d-130">要与此实例进行比较的点。</span><span class="sxs-lookup"><span data-stu-id="3841d-130">The point to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="3841d-131">比较两个 <see cref="T:System.Windows.Point" /> 结构是否相等。</span><span class="sxs-lookup"><span data-stu-id="3841d-131">Compares two <see cref="T:System.Windows.Point" /> structures for equality.</span></span></summary>
        <returns><span data-ttu-id="3841d-132">如果两个 <see cref="T:System.Windows.Point" /> 结构都包含相同的 <see cref="P:System.Windows.Point.X" /> 值和 <see cref="P:System.Windows.Point.Y" /> 值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3841d-132"><see langword="true" /> if both <see cref="T:System.Windows.Point" /> structures contain the same <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3841d-133"><xref:System.Windows.Point> 坐标使用值表示 <xref:System.Double> 。</span><span class="sxs-lookup"><span data-stu-id="3841d-133"><xref:System.Windows.Point> coordinates are expressed using <xref:System.Double> values.</span></span> <span data-ttu-id="3841d-134">由于在 <xref:System.Double> 上运算时，的值可能会丢失精度，因此，逻辑上相等的两个值之间的比较 <xref:System.Windows.Point> 可能会失败。</span><span class="sxs-lookup"><span data-stu-id="3841d-134">Because the value of a <xref:System.Double> can lose precision when operated on, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Equals(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (point1 As Point, point2 As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="static member Equals : System.Windows.Point * System.Windows.Point -&gt; bool" Usage="System.Windows.Point.Equals (point1, point2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1"><span data-ttu-id="3841d-135">要比较的第一个点。</span><span class="sxs-lookup"><span data-stu-id="3841d-135">The first point to compare.</span></span></param>
        <param name="point2"><span data-ttu-id="3841d-136">要比较的第二个点。</span><span class="sxs-lookup"><span data-stu-id="3841d-136">The second point to compare.</span></span></param>
        <summary><span data-ttu-id="3841d-137">比较两个 <see cref="T:System.Windows.Point" /> 结构是否相等。</span><span class="sxs-lookup"><span data-stu-id="3841d-137">Compares two <see cref="T:System.Windows.Point" /> structures for equality.</span></span></summary>
        <returns><span data-ttu-id="3841d-138">如果 <paramref name="point1" /> 和 <paramref name="point2" /> 包含相同的 <see cref="P:System.Windows.Point.X" /> 和 <see cref="P:System.Windows.Point.Y" /> 值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3841d-138"><see langword="true" /> if <paramref name="point1" /> and <paramref name="point2" /> contain the same <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3841d-139">使用值描述点坐标 <xref:System.Double> 。</span><span class="sxs-lookup"><span data-stu-id="3841d-139">Point coordinates are described using <xref:System.Double> values.</span></span> <span data-ttu-id="3841d-140">由于在 <xref:System.Double> 上运算时，的值可能会丢失精度，因此，逻辑上相等的两个值之间的比较 <xref:System.Windows.Point> 可能会失败。</span><span class="sxs-lookup"><span data-stu-id="3841d-140">Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3841d-141">下面的示例演示如何 <xref:System.Windows.Point> 使用静态方法检查两个结构是否相等 <xref:System.Windows.Point.Equals%2A> 。</span><span class="sxs-lookup"><span data-stu-id="3841d-141">The following example shows how to check if two <xref:System.Windows.Point> structures are equal using the static <xref:System.Windows.Point.Equals%2A> method.</span></span>  
  
 [!code-csharp[PointExamples_snip#StaticEqualsExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#staticequalsexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="point.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3841d-142">返回此 <see cref="T:System.Windows.Point" /> 的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="3841d-142">Returns the hash code for this <see cref="T:System.Windows.Point" />.</span></span></summary>
        <returns><span data-ttu-id="3841d-143">此 <see cref="T:System.Windows.Point" /> 结构的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="3841d-143">The hash code for this <see cref="T:System.Windows.Point" /> structure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3841d-144">下面的示例演示如何获取结构的哈希代码 <xref:System.Windows.Point> 。</span><span class="sxs-lookup"><span data-stu-id="3841d-144">The following example shows how to get the hash code of a <xref:System.Windows.Point> structure.</span></span>  
  
 [!code-csharp[PointExamples_snip#GetHashCodeExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#gethashcodeexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Point Multiply (System.Windows.Point point, System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Point Multiply(valuetype System.Windows.Point point, valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Multiply(System.Windows.Point,System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (point As Point, matrix As Matrix) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point Multiply(System::Windows::Point point, System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Windows.Point * System.Windows.Media.Matrix -&gt; System.Windows.Point" Usage="System.Windows.Point.Multiply (point, matrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="3841d-145">要转换的点。</span><span class="sxs-lookup"><span data-stu-id="3841d-145">The point to transform.</span></span></param>
        <param name="matrix"><span data-ttu-id="3841d-146">变换矩阵。</span><span class="sxs-lookup"><span data-stu-id="3841d-146">The transformation matrix.</span></span></param>
        <summary><span data-ttu-id="3841d-147">使用指定的 <see cref="T:System.Windows.Point" /> 结构转换指定的 <see cref="T:System.Windows.Media.Matrix" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="3841d-147">Transforms the specified <see cref="T:System.Windows.Point" /> structure by the specified <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <returns><span data-ttu-id="3841d-148">已转换的点。</span><span class="sxs-lookup"><span data-stu-id="3841d-148">The transformed point.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3841d-149">下面的示例演示如何使用方法将结构与结构相乘 <xref:System.Windows.Point> <xref:System.Windows.Media.Matrix> <xref:System.Windows.Point.Multiply%2A> 。</span><span class="sxs-lookup"><span data-stu-id="3841d-149">The following example shows how to multiply a <xref:System.Windows.Point> structure by a <xref:System.Windows.Media.Matrix> structure using the <xref:System.Windows.Point.Multiply%2A> method.</span></span>  
  
 [!code-csharp[PointExamples_snip#MultiplyPointByMatrixExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#multiplypointbymatrixexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public void Offset (double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Offset(float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Offset(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Offset (offsetX As Double, offsetY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Offset(double offsetX, double offsetY);" />
      <MemberSignature Language="F#" Value="member this.Offset : double * double -&gt; unit" Usage="point.Offset (offsetX, offsetY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offsetX"><span data-ttu-id="3841d-150">要偏移该点 <see cref="P:System.Windows.Point.X" /> 坐标的量。</span><span class="sxs-lookup"><span data-stu-id="3841d-150">The amount to offset the point's <see cref="P:System.Windows.Point.X" /> coordinate.</span></span></param>
        <param name="offsetY"><span data-ttu-id="3841d-151">要偏移该点 <see cref="P:System.Windows.Point.Y" /> 坐标的量。</span><span class="sxs-lookup"><span data-stu-id="3841d-151">The amount to offset the point's <see cref="P:System.Windows.Point.Y" /> coordinate.</span></span></param>
        <summary><span data-ttu-id="3841d-152">将某个点的 <see cref="P:System.Windows.Point.X" /> 坐标和 <see cref="P:System.Windows.Point.Y" /> 坐标偏移指定的量。</span><span class="sxs-lookup"><span data-stu-id="3841d-152">Offsets a point's <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> coordinates by the specified amounts.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3841d-153">此操作等效于将添加 <xref:System.Windows.Point> 到 <xref:System.Windows.Vector> 。</span><span class="sxs-lookup"><span data-stu-id="3841d-153">This operation is equivalent to adding a <xref:System.Windows.Point> to a <xref:System.Windows.Vector>.</span></span>  
  
 <span data-ttu-id="3841d-154">请注意， <xref:System.Windows.Point.Offset%2A> 仅当可以直接更改和属性时，调用方法才会起作用 <xref:System.Windows.Point.X%2A> <xref:System.Windows.Point.Y%2A> 。</span><span class="sxs-lookup"><span data-stu-id="3841d-154">Note that calling the <xref:System.Windows.Point.Offset%2A> method will only have an effect if you can change the <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> properties directly.</span></span> <span data-ttu-id="3841d-155">由于 <xref:System.Windows.Point> 是一个值类型，因此，如果 <xref:System.Windows.Point> 使用属性或索引器引用对象，则会获得对象的副本，而不是对对象的引用。</span><span class="sxs-lookup"><span data-stu-id="3841d-155">Because <xref:System.Windows.Point> is a value type, if you reference a <xref:System.Windows.Point> object by using a property or indexer, you get a copy of the object, not a reference to the object.</span></span> <span data-ttu-id="3841d-156">如果尝试对 <xref:System.Windows.Point.X%2A> <xref:System.Windows.Point.Y%2A> 属性或索引器引用进行更改，则会出现编译器错误。</span><span class="sxs-lookup"><span data-stu-id="3841d-156">If you attempt to change <xref:System.Windows.Point.X%2A> or <xref:System.Windows.Point.Y%2A> on a property or indexer reference, a compiler error occurs.</span></span> <span data-ttu-id="3841d-157">同样， <xref:System.Windows.Point.Offset%2A> 对属性或索引器调用将不会更改基础对象。</span><span class="sxs-lookup"><span data-stu-id="3841d-157">Similarly, calling <xref:System.Windows.Point.Offset%2A> on the property or indexer will not change the underlying object.</span></span>  <span data-ttu-id="3841d-158">如果要更改被 <xref:System.Windows.Point> 引用为属性或索引器的的值，请创建新的 <xref:System.Windows.Point> ，修改其字段，然后将 <xref:System.Windows.Point> 返回回属性或索引器。</span><span class="sxs-lookup"><span data-stu-id="3841d-158">If you want to change the value of a <xref:System.Windows.Point> that is referenced as a property or indexer, create a new <xref:System.Windows.Point>, modify its fields, and then assign the <xref:System.Windows.Point> back to the property or indexer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3841d-159">下面的示例演示如何偏移结构的 <xref:System.Windows.Point.X%2A> 和 <xref:System.Windows.Point.Y%2A> 值 <xref:System.Windows.Point> 。</span><span class="sxs-lookup"><span data-stu-id="3841d-159">The following example shows how to offset the <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> values of a <xref:System.Windows.Point> structure.</span></span>  
  
 [!code-csharp[PointExamples_snip#OffsetExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#offsetexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Windows.Point operator + (System.Windows.Point point, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Point op_Addition(valuetype System.Windows.Point point, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Addition(System.Windows.Point,System.Windows.Vector)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (point As Point, vector As Vector) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point operator +(System::Windows::Point point, System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Windows.Point * System.Windows.Vector -&gt; System.Windows.Point" Usage="point + vector" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="3841d-160">要平移的点。</span><span class="sxs-lookup"><span data-stu-id="3841d-160">The point to translate.</span></span></param>
        <param name="vector"><span data-ttu-id="3841d-161"><paramref name="point" /> 的平移量。</span><span class="sxs-lookup"><span data-stu-id="3841d-161">The amount by which to translate <paramref name="point" />.</span></span></param>
        <summary><span data-ttu-id="3841d-162">将指定的 <see cref="T:System.Windows.Point" /> 平移指定的 <see cref="T:System.Windows.Vector" /> 并返回结果。</span><span class="sxs-lookup"><span data-stu-id="3841d-162">Translates the specified <see cref="T:System.Windows.Point" /> by the specified <see cref="T:System.Windows.Vector" /> and returns the result.</span></span></summary>
        <returns><span data-ttu-id="3841d-163">将指定点平移指定的向量所得的结果。</span><span class="sxs-lookup"><span data-stu-id="3841d-163">The result of translating the specified point by the specified vector.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3841d-164">下面的示例演示如何 <xref:System.Windows.Point> <xref:System.Windows.Vector> 使用重载的 (+) 运算符将添加到。</span><span class="sxs-lookup"><span data-stu-id="3841d-164">The following example shows how to add a <xref:System.Windows.Point> to a <xref:System.Windows.Vector> using the overloaded (+) operator.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedAdditionOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedadditionoperatorexample)]
 [!code-vb[PointExamples_snip#OverloadedAdditionOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedadditionoperatorexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.Add(System.Windows.Point,System.Windows.Vector)" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (point1 As Point, point2 As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Point * System.Windows.Point -&gt; bool" Usage="point1 = point2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1"><span data-ttu-id="3841d-165">要比较的第一个 <see cref="T:System.Windows.Point" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="3841d-165">The first <see cref="T:System.Windows.Point" /> structure to compare.</span></span></param>
        <param name="point2"><span data-ttu-id="3841d-166">要比较的第二个 <see cref="T:System.Windows.Point" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="3841d-166">The second <see cref="T:System.Windows.Point" /> structure to compare.</span></span></param>
        <summary><span data-ttu-id="3841d-167">比较两个 <see cref="T:System.Windows.Point" /> 结构是否相等。</span><span class="sxs-lookup"><span data-stu-id="3841d-167">Compares two <see cref="T:System.Windows.Point" /> structures for equality.</span></span></summary>
        <returns><span data-ttu-id="3841d-168">如果两个点（即 <paramref name="point1" /> 和 <paramref name="point2" />）的 <see cref="P:System.Windows.Point.X" /> 和 <see cref="P:System.Windows.Point.Y" /> 坐标都相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3841d-168"><see langword="true" /> if both the <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> coordinates of <paramref name="point1" /> and <paramref name="point2" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3841d-169">使用值描述点的坐标 <xref:System.Double> 。</span><span class="sxs-lookup"><span data-stu-id="3841d-169">A point's coordinates are described using <xref:System.Double> values.</span></span> <span data-ttu-id="3841d-170">因为在 <xref:System.Double> 对它们执行算术运算时，的值可能会丢失精度，所以，逻辑上相等的两个值之间的比较 <xref:System.Windows.Point> 可能会失败。</span><span class="sxs-lookup"><span data-stu-id="3841d-170">Because the value of <xref:System.Double> can lose precision when arithmetic operations are performed on them, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3841d-171">下面的示例演示如何 <xref:System.Windows.Point> 使用重载的 (= =) 运算符来检查两个结构是否相等。</span><span class="sxs-lookup"><span data-stu-id="3841d-171">The following example shows how to check if two <xref:System.Windows.Point> structures are equal using the overloaded (==) operator.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedEqualityOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedequalityoperatorexample)]
 [!code-vb[PointExamples_snip#OverloadedEqualityOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedequalityoperatorexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Point.Equals" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Explicit">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3841d-172">将 <see cref="T:System.Windows.Point" /> 转换为 <see cref="T:System.Windows.Size" /> 或 <see cref="T:System.Windows.Vector" />。</span><span class="sxs-lookup"><span data-stu-id="3841d-172">Converts a <see cref="T:System.Windows.Point" /> into a <see cref="T:System.Windows.Size" /> or a <see cref="T:System.Windows.Vector" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Windows.Size (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Size op_Explicit(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Size" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (point As Point) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Windows::Size(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Windows.Point -&gt; System.Windows.Size" Usage="System.Windows.Point.op_Explicit point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="3841d-173">要变换的点。</span><span class="sxs-lookup"><span data-stu-id="3841d-173">The point to convert.</span></span></param>
        <summary><span data-ttu-id="3841d-174">创建一个 <see cref="T:System.Windows.Size" /> 结构，该结构的 <see cref="P:System.Windows.Size.Width" /> 等于此点的 <see cref="P:System.Windows.Point.X" /> 值，且 <see cref="P:System.Windows.Size.Height" /> 等于此点的 <see cref="P:System.Windows.Point.Y" /> 值。</span><span class="sxs-lookup"><span data-stu-id="3841d-174">Creates a <see cref="T:System.Windows.Size" /> structure with a <see cref="P:System.Windows.Size.Width" /> equal to this point's <see cref="P:System.Windows.Point.X" /> value and a <see cref="P:System.Windows.Size.Height" /> equal to this point's <see cref="P:System.Windows.Point.Y" /> value.</span></span></summary>
        <returns><span data-ttu-id="3841d-175">一个 <see cref="T:System.Windows.Size" /> 结构，它的 <see cref="P:System.Windows.Size.Width" /> 等于此点的 <see cref="P:System.Windows.Point.X" /> 值，且 <see cref="P:System.Windows.Size.Height" /> 等于此点的 <see cref="P:System.Windows.Point.Y" /> 值。</span><span class="sxs-lookup"><span data-stu-id="3841d-175">A <see cref="T:System.Windows.Size" /> structure with a <see cref="P:System.Windows.Size.Width" /> equal to this point's <see cref="P:System.Windows.Point.X" /> value and a <see cref="P:System.Windows.Size.Height" /> equal to this point's <see cref="P:System.Windows.Point.Y" /> value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3841d-176">由于 <xref:System.Windows.Size> 结构不能为负数，因此使用点的 <xref:System.Windows.Point.X%2A> 和属性的绝对值 <xref:System.Windows.Point.Y%2A> 。</span><span class="sxs-lookup"><span data-stu-id="3841d-176">Because a <xref:System.Windows.Size> structure cannot be negative, the absolute values of the point's <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> properties are used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3841d-177">下面的示例演示如何将显式转换为 <xref:System.Windows.Point> <xref:System.Windows.Size> 。</span><span class="sxs-lookup"><span data-stu-id="3841d-177">The following example shows how to explicitly convert a <xref:System.Windows.Point> into a <xref:System.Windows.Size>.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedExplicitOperatorSizeExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedexplicitoperatorsizeexample)]
 [!code-vb[PointExamples_snip#OverloadedExplicitOperatorSizeExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedexplicitoperatorsizeexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Windows.Vector (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Vector op_Explicit(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Vector" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (point As Point) As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Windows::Vector(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Windows.Point -&gt; System.Windows.Vector" Usage="System.Windows.Point.op_Explicit point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="3841d-178">要变换的点。</span><span class="sxs-lookup"><span data-stu-id="3841d-178">The point to convert.</span></span></param>
        <summary><span data-ttu-id="3841d-179">创建一个 <see cref="T:System.Windows.Vector" /> 结构，该结构的 <see cref="P:System.Windows.Vector.X" /> 值等于该点的 <see cref="P:System.Windows.Point.X" /> 值，且 <see cref="P:System.Windows.Vector.Y" /> 值等于该点的 <see cref="P:System.Windows.Point.Y" /> 值。</span><span class="sxs-lookup"><span data-stu-id="3841d-179">Creates a <see cref="T:System.Windows.Vector" /> structure with an <see cref="P:System.Windows.Vector.X" /> value equal to the point's <see cref="P:System.Windows.Point.X" /> value and a <see cref="P:System.Windows.Vector.Y" /> value equal to the point's <see cref="P:System.Windows.Point.Y" /> value.</span></span></summary>
        <returns><span data-ttu-id="3841d-180">一个向量，它的 <see cref="P:System.Windows.Vector.X" /> 值等于该点的 <see cref="P:System.Windows.Point.X" /> 值，且 <see cref="P:System.Windows.Vector.Y" /> 值等于该点的 <see cref="P:System.Windows.Point.Y" /> 值。</span><span class="sxs-lookup"><span data-stu-id="3841d-180">A vector with an <see cref="P:System.Windows.Vector.X" /> value equal to the point's <see cref="P:System.Windows.Point.X" /> value and a <see cref="P:System.Windows.Vector.Y" /> value equal to the point's <see cref="P:System.Windows.Point.Y" /> value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3841d-181">下面的示例演示如何将显式转换为 <xref:System.Windows.Point> <xref:System.Windows.Vector> 。</span><span class="sxs-lookup"><span data-stu-id="3841d-181">The following example shows how to explicitly convert a <xref:System.Windows.Point> into a <xref:System.Windows.Vector>.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedExplicitOperatorVectorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedexplicitoperatorvectorexample)]
 [!code-vb[PointExamples_snip#OverloadedExplicitOperatorVectorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedexplicitoperatorvectorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (point1 As Point, point2 As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Point * System.Windows.Point -&gt; bool" Usage="System.Windows.Point.op_Inequality (point1, point2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1"><span data-ttu-id="3841d-182">要比较的第一个点。</span><span class="sxs-lookup"><span data-stu-id="3841d-182">The first point to compare.</span></span></param>
        <param name="point2"><span data-ttu-id="3841d-183">要比较的第二个点。</span><span class="sxs-lookup"><span data-stu-id="3841d-183">The second point to compare.</span></span></param>
        <summary><span data-ttu-id="3841d-184">比较两个 <see cref="T:System.Windows.Point" /> 结构是否不相等。</span><span class="sxs-lookup"><span data-stu-id="3841d-184">Compares two <see cref="T:System.Windows.Point" /> structures for inequality.</span></span></summary>
        <returns><span data-ttu-id="3841d-185">如果 <paramref name="point1" /> 和 <paramref name="point2" /> 有不同的 <see cref="P:System.Windows.Point.X" /> 或 <see cref="P:System.Windows.Point.Y" /> 坐标，则为 <see langword="true" />；如果 <paramref name="point1" /> 和 <paramref name="point2" /> 有相同的 <see cref="P:System.Windows.Point.X" /> 和 <see cref="P:System.Windows.Point.Y" /> 坐标，则为.<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3841d-185"><see langword="true" /> if <paramref name="point1" /> and <paramref name="point2" /> have different <see cref="P:System.Windows.Point.X" /> or <see cref="P:System.Windows.Point.Y" /> coordinates; <see langword="false" /> if <paramref name="point1" /> and <paramref name="point2" /> have the same <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> coordinates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3841d-186"><xref:System.Windows.Point.X%2A> <xref:System.Windows.Point.Y%2A> 使用值描述点的和坐标 <xref:System.Double> 。</span><span class="sxs-lookup"><span data-stu-id="3841d-186">A point's <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> coordinates are described using <xref:System.Double> values.</span></span> <span data-ttu-id="3841d-187">由于 <xref:System.Double> 值在操作时可能会丢失精度，因此，逻辑上相等的两个值之间的比较 <xref:System.Windows.Point> 可能会失败。</span><span class="sxs-lookup"><span data-stu-id="3841d-187">Because <xref:System.Double> values can lose precision when operated on, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3841d-188">下面的示例演示如何 <xref:System.Windows.Point> 使用重载的 (！ =) 运算符来检查两个结构是否不相等。</span><span class="sxs-lookup"><span data-stu-id="3841d-188">The following example shows how to check whether two <xref:System.Windows.Point> structures are not equal, using the overloaded (!=) operator.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedInequalityOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedinequalityoperatorexample)]
 [!code-vb[PointExamples_snip#OverloadedInequalityOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedinequalityoperatorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Point operator * (System.Windows.Point point, System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Point op_Multiply(valuetype System.Windows.Point point, valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (point As Point, matrix As Matrix) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point operator *(System::Windows::Point point, System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="static member ( * ) : System.Windows.Point * System.Windows.Media.Matrix -&gt; System.Windows.Point" Usage="point * matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="3841d-189">要转换的点。</span><span class="sxs-lookup"><span data-stu-id="3841d-189">The point to transform.</span></span></param>
        <param name="matrix"><span data-ttu-id="3841d-190">变换矩阵。</span><span class="sxs-lookup"><span data-stu-id="3841d-190">The transformation matrix.</span></span></param>
        <summary><span data-ttu-id="3841d-191">将指定的 <see cref="T:System.Windows.Point" /> 转换为指定的 <see cref="T:System.Windows.Media.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="3841d-191">Transforms the specified <see cref="T:System.Windows.Point" /> by the specified <see cref="T:System.Windows.Media.Matrix" />.</span></span></summary>
        <returns><span data-ttu-id="3841d-192">使用指定的矩阵转换指定点所得的结果。</span><span class="sxs-lookup"><span data-stu-id="3841d-192">The result of transforming the specified point using the specified matrix.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3841d-193">下面的示例演示如何 <xref:System.Windows.Point> <xref:System.Windows.Media.Matrix> 使用重载 ( \* ) 运算符将相乘。</span><span class="sxs-lookup"><span data-stu-id="3841d-193">The following example shows how to multiply a <xref:System.Windows.Point> by a <xref:System.Windows.Media.Matrix> using the overloaded (\*) operator.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedMultiplyPointByMatrixOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedmultiplypointbymatrixoperatorexample)]
 [!code-vb[PointExamples_snip#OverloadedMultiplyPointByMatrixOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedmultiplypointbymatrixoperatorexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.Multiply(System.Windows.Point,System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Subtraction">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3841d-194">从指定的 <see cref="T:System.Windows.Vector" /> 中减去指定的 <see cref="T:System.Windows.Point" /> 或 <see cref="T:System.Windows.Point" />。</span><span class="sxs-lookup"><span data-stu-id="3841d-194">Subtracts the specified <see cref="T:System.Windows.Vector" /> or <see cref="T:System.Windows.Point" /> from the specified <see cref="T:System.Windows.Point" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static System.Windows.Vector operator - (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Vector op_Subtraction(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (point1 As Point, point2 As Point) As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Vector operator -(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="static member ( - ) : System.Windows.Point * System.Windows.Point -&gt; System.Windows.Vector" Usage="point1 - point2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1"><span data-ttu-id="3841d-195">要从中减去 <paramref name="point2" /> 的点。</span><span class="sxs-lookup"><span data-stu-id="3841d-195">The point from which <paramref name="point2" /> is subtracted.</span></span></param>
        <param name="point2"><span data-ttu-id="3841d-196">要从 <paramref name="point1" /> 中减去的点。</span><span class="sxs-lookup"><span data-stu-id="3841d-196">The point to subtract from <paramref name="point1" />.</span></span></param>
        <summary><span data-ttu-id="3841d-197">从指定的 <see cref="T:System.Windows.Point" /> 中减去另一个指定的 <see cref="T:System.Windows.Point" /> 并将差作为 <see cref="T:System.Windows.Vector" /> 返回。</span><span class="sxs-lookup"><span data-stu-id="3841d-197">Subtracts the specified <see cref="T:System.Windows.Point" /> from another specified <see cref="T:System.Windows.Point" /> and returns the difference as a <see cref="T:System.Windows.Vector" />.</span></span></summary>
        <returns><span data-ttu-id="3841d-198"><paramref name="point1" /> 和 <paramref name="point2" /> 之间的差值。</span><span class="sxs-lookup"><span data-stu-id="3841d-198">The difference between <paramref name="point1" /> and <paramref name="point2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3841d-199">下面的示例演示如何 <xref:System.Windows.Point> 从另一个中减去 <xref:System.Windows.Point> ，并 <xref:System.Windows.Vector> 使用重载的 ( ) 运算符来返回。</span><span class="sxs-lookup"><span data-stu-id="3841d-199">The following example shows how to subtract a <xref:System.Windows.Point> from another <xref:System.Windows.Point> and return a <xref:System.Windows.Vector> using the overloaded (-) operator.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedSubtractionOperatorExample2](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedsubtractionoperatorexample2)]
 [!code-vb[PointExamples_snip#OverloadedSubtractionOperatorExample2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedsubtractionoperatorexample2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static System.Windows.Point operator - (System.Windows.Point point, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Point op_Subtraction(valuetype System.Windows.Point point, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Vector)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (point As Point, vector As Vector) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point operator -(System::Windows::Point point, System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="static member ( - ) : System.Windows.Point * System.Windows.Vector -&gt; System.Windows.Point" Usage="point - vector" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="3841d-200">要从中减去 <paramref name="vector" /> 的点。</span><span class="sxs-lookup"><span data-stu-id="3841d-200">The point from which <paramref name="vector" /> is subtracted.</span></span></param>
        <param name="vector"><span data-ttu-id="3841d-201">要从 <paramref name="point1" /> 中减去的向量</span><span class="sxs-lookup"><span data-stu-id="3841d-201">The vector to subtract from <paramref name="point1" /></span></span></param>
        <summary><span data-ttu-id="3841d-202">从指定的 <see cref="T:System.Windows.Vector" /> 减去指定的 <see cref="T:System.Windows.Point" /> 并返回所得的 <see cref="T:System.Windows.Point" />。</span><span class="sxs-lookup"><span data-stu-id="3841d-202">Subtracts the specified <see cref="T:System.Windows.Vector" /> from the specified <see cref="T:System.Windows.Point" /> and returns the resulting <see cref="T:System.Windows.Point" />.</span></span></summary>
        <returns><span data-ttu-id="3841d-203"><paramref name="point" /> 和 <paramref name="vector" /> 之间的差值。</span><span class="sxs-lookup"><span data-stu-id="3841d-203">The difference between <paramref name="point" /> and <paramref name="vector" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3841d-204">下面的示例演示如何 <xref:System.Windows.Vector> <xref:System.Windows.Point> 使用重载的 ( ) 运算符从中减去。</span><span class="sxs-lookup"><span data-stu-id="3841d-204">The following example shows how to subtract a <xref:System.Windows.Vector> from a <xref:System.Windows.Point> using the overloaded (-) operator.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedSubtractionOperatorExample1](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedsubtractionoperatorexample1)]
 [!code-vb[PointExamples_snip#OverloadedSubtractionOperatorExample1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedsubtractionoperatorexample1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Vector)" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Windows.Point Parse (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Point Parse(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (source As String) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point Parse(System::String ^ source);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; System.Windows.Point" Usage="System.Windows.Point.Parse source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="3841d-205">点的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="3841d-205">A string representation of a point.</span></span></param>
        <summary><span data-ttu-id="3841d-206">从指定的 <see cref="T:System.Windows.Point" /> 构造 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="3841d-206">Constructs a <see cref="T:System.Windows.Point" /> from the specified <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="3841d-207">等效的 <see cref="T:System.Windows.Point" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="3841d-207">The equivalent <see cref="T:System.Windows.Point" /> structure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3841d-208">下面的示例演示如何使用 <xref:System.Windows.Point.Parse%2A> 方法将 <xref:System.String> 某个点的表示形式转换为 <xref:System.Windows.Point> 结构。</span><span class="sxs-lookup"><span data-stu-id="3841d-208">The following example shows how to use the <xref:System.Windows.Point.Parse%2A> method to convert a <xref:System.String> representation of a point into a <xref:System.Windows.Point> structure.</span></span>  
  
 [!code-csharp[PointExamples_snip#ParseExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#parseexample)]
 [!code-vb[PointExamples_snip#ParseExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#parseexample)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="3841d-209"><paramref name="source" /> 不是由两个逗号分隔或空格分隔的双精度值组成。</span><span class="sxs-lookup"><span data-stu-id="3841d-209"><paramref name="source" /> is not composed of two comma- or space-delimited double values.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3841d-210"><paramref name="source" /> 不包含两个数字。</span><span class="sxs-lookup"><span data-stu-id="3841d-210"><paramref name="source" /> does not contain two numbers.</span></span>  
  
<span data-ttu-id="3841d-211">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3841d-211">-or-</span></span> 
 <span data-ttu-id="3841d-212"><paramref name="source" /> 包含的分隔符过多。</span><span class="sxs-lookup"><span data-stu-id="3841d-212"><paramref name="source" /> contains too many delimiters.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Subtract">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3841d-213">从指定的 <see cref="T:System.Windows.Point" /> 中减去指定的 <see cref="T:System.Windows.Vector" /> 或 <see cref="T:System.Windows.Point" />。</span><span class="sxs-lookup"><span data-stu-id="3841d-213">Subtracts the specified <see cref="T:System.Windows.Point" /> or <see cref="T:System.Windows.Vector" /> from the specified <see cref="T:System.Windows.Point" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Windows.Vector Subtract (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Vector Subtract(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (point1 As Point, point2 As Point) As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Vector Subtract(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Windows.Point * System.Windows.Point -&gt; System.Windows.Vector" Usage="System.Windows.Point.Subtract (point1, point2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1"><span data-ttu-id="3841d-214">要从中减去 <paramref name="point2" /> 的点。</span><span class="sxs-lookup"><span data-stu-id="3841d-214">The point from which <paramref name="point2" /> is subtracted.</span></span></param>
        <param name="point2"><span data-ttu-id="3841d-215">要从 <paramref name="point1" /> 中减去的点。</span><span class="sxs-lookup"><span data-stu-id="3841d-215">The point to subtract from <paramref name="point1" />.</span></span></param>
        <summary><span data-ttu-id="3841d-216">从指定的 <see cref="T:System.Windows.Point" /> 中减去另一个指定的 <see cref="T:System.Windows.Point" /> 并将差作为 <see cref="T:System.Windows.Vector" /> 返回。</span><span class="sxs-lookup"><span data-stu-id="3841d-216">Subtracts the specified <see cref="T:System.Windows.Point" /> from another specified <see cref="T:System.Windows.Point" /> and returns the difference as a <see cref="T:System.Windows.Vector" />.</span></span></summary>
        <returns><span data-ttu-id="3841d-217"><paramref name="point1" /> 和 <paramref name="point2" /> 之间的差值。</span><span class="sxs-lookup"><span data-stu-id="3841d-217">The difference between <paramref name="point1" /> and <paramref name="point2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3841d-218">下面的示例演示如何 <xref:System.Windows.Point> 使用静态方法从中减去另一个 <xref:System.Windows.Point> <xref:System.Windows.Point.Subtract%2A> 。</span><span class="sxs-lookup"><span data-stu-id="3841d-218">The following example shows how to subtract a <xref:System.Windows.Point> from another <xref:System.Windows.Point> using the static <xref:System.Windows.Point.Subtract%2A> method.</span></span>  
  
 [!code-csharp[PointExamples_snip#SubtractExample2](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#subtractexample2)]
 [!code-vb[PointExamples_snip#SubtractExample2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#subtractexample2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Windows.Point Subtract (System.Windows.Point point, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Point Subtract(valuetype System.Windows.Point point, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Vector)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (point As Point, vector As Vector) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point Subtract(System::Windows::Point point, System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Windows.Point * System.Windows.Vector -&gt; System.Windows.Point" Usage="System.Windows.Point.Subtract (point, vector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="3841d-219">要从中减去 <paramref name="vector" /> 的点。</span><span class="sxs-lookup"><span data-stu-id="3841d-219">The point from which <paramref name="vector" /> is subtracted.</span></span></param>
        <param name="vector"><span data-ttu-id="3841d-220">要从 <paramref name="vector" /> 中减去的 <paramref name="point" />。</span><span class="sxs-lookup"><span data-stu-id="3841d-220">The <paramref name="vector" /> to subtract from <paramref name="point" />.</span></span></param>
        <summary><span data-ttu-id="3841d-221">从指定的 <see cref="T:System.Windows.Vector" /> 减去指定的 <see cref="T:System.Windows.Point" /> 并返回所得的 <see cref="T:System.Windows.Point" />。</span><span class="sxs-lookup"><span data-stu-id="3841d-221">Subtracts the specified <see cref="T:System.Windows.Vector" /> from the specified <see cref="T:System.Windows.Point" /> and returns the resulting <see cref="T:System.Windows.Point" />.</span></span></summary>
        <returns><span data-ttu-id="3841d-222"><paramref name="point" /> 和 <paramref name="vector" /> 之间的差值。</span><span class="sxs-lookup"><span data-stu-id="3841d-222">The difference between <paramref name="point" /> and <paramref name="vector" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3841d-223">下面的示例演示如何 <xref:System.Windows.Vector> <xref:System.Windows.Point> 使用静态方法从中减去 <xref:System.Windows.Point.Subtract%2A> 。</span><span class="sxs-lookup"><span data-stu-id="3841d-223">The following example shows how to subtract a <xref:System.Windows.Vector> from a <xref:System.Windows.Point> using the static <xref:System.Windows.Point.Subtract%2A> method.</span></span>  
  
 [!code-csharp[PointExamples_snip#SubtractExample1](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#subtractexample1)]
 [!code-vb[PointExamples_snip#SubtractExample1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#subtractexample1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Point.Subtract" />
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (format As String, provider As IFormatProvider) As String Implements IFormattable.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IFormattable.ToString(System::String ^ format, IFormatProvider ^ provider) = IFormattable::ToString;" />
      <MemberSignature Language="F#" Value="abstract member System.IFormattable.ToString : string * IFormatProvider -&gt; string&#xA;override this.System.IFormattable.ToString : string * IFormatProvider -&gt; string" Usage="point.System.IFormattable.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="3841d-224">指定要使用的格式的字符串。</span><span class="sxs-lookup"><span data-stu-id="3841d-224">The string specifying the format to use.</span></span>  
  
<span data-ttu-id="3841d-225">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3841d-225">-or-</span></span> 
 <span data-ttu-id="3841d-226"><see langword="null" />，表示使用为 <see cref="T:System.IFormattable" /> 实现的类型定义的默认格式。</span><span class="sxs-lookup"><span data-stu-id="3841d-226"><see langword="null" /> to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</span></span></param>
        <param name="provider"><span data-ttu-id="3841d-227">用于格式化该值的 <see langword="IFormatProvider" />。</span><span class="sxs-lookup"><span data-stu-id="3841d-227">The <see langword="IFormatProvider" /> to use to format the value.</span></span>  
  
<span data-ttu-id="3841d-228">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3841d-228">-or-</span></span> 
 <span data-ttu-id="3841d-229">从操作系统的当前区域设置中获取数字格式信息的 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3841d-229"><see langword="null" /> to obtain the numeric format information from the current locale setting of the operating system.</span></span></param>
        <summary><span data-ttu-id="3841d-230">此成员支持 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 基础结构，但不能在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="3841d-230">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span> <span data-ttu-id="3841d-231">有关此成员的说明，请参见 <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="3841d-231">For a description of this member, see <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="3841d-232">一个字符串，包含采用指定格式的当前实例的值。</span><span class="sxs-lookup"><span data-stu-id="3841d-232">A string containing the value of the current instance in the specified format.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3841d-233">创建此 <see cref="T:System.String" /> 结构的 <see cref="T:System.Windows.Point" /> 表示形式。</span><span class="sxs-lookup"><span data-stu-id="3841d-233">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Point" /> structure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="point.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3841d-234">创建此 <see cref="T:System.String" /> 的 <see cref="T:System.Windows.Point" /> 表示形式。</span><span class="sxs-lookup"><span data-stu-id="3841d-234">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Point" />.</span></span></summary>
        <returns><span data-ttu-id="3841d-235">一个 <see cref="T:System.String" />，它包含此 <see cref="P:System.Windows.Point.X" /> 结构的 <see cref="P:System.Windows.Point.Y" /> 和 <see cref="T:System.Windows.Point" /> 值。</span><span class="sxs-lookup"><span data-stu-id="3841d-235">A <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values of this <see cref="T:System.Windows.Point" /> structure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3841d-236">下面的示例演示如何使用 <xref:System.Windows.Point.ToString%2A> 方法获取 <xref:System.String> 结构的表示形式 <xref:System.Windows.Point> 。</span><span class="sxs-lookup"><span data-stu-id="3841d-236">The following example shows how to use the <xref:System.Windows.Point.ToString%2A> method to get a <xref:System.String> representation of a <xref:System.Windows.Point> structure.</span></span>  
  
 [!code-csharp[PointExamples_snip#ToStringExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#tostringexample)]
 [!code-vb[PointExamples_snip#ToStringExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#tostringexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="point.ToString provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="3841d-237">区域性特定的格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="3841d-237">Culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="3841d-238">创建此 <see cref="T:System.String" /> 的 <see cref="T:System.Windows.Point" /> 表示形式。</span><span class="sxs-lookup"><span data-stu-id="3841d-238">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Point" />.</span></span></summary>
        <returns><span data-ttu-id="3841d-239">一个 <see cref="T:System.String" />，它包含此 <see cref="P:System.Windows.Point.X" /> 结构的 <see cref="P:System.Windows.Point.Y" /> 和 <see cref="T:System.Windows.Point" /> 值。</span><span class="sxs-lookup"><span data-stu-id="3841d-239">A <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values of this <see cref="T:System.Windows.Point" /> structure.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public double X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Point.X" />
      <MemberSignature Language="VB.NET" Value="Public Property X As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double X { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.X : double with get, set" Usage="System.Windows.Point.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3841d-240">获取或设置此 <see cref="P:System.Windows.Point.X" /> 结构的 <see cref="T:System.Windows.Point" /> 坐标值。</span><span class="sxs-lookup"><span data-stu-id="3841d-240">Gets or sets the <see cref="P:System.Windows.Point.X" />-coordinate value of this <see cref="T:System.Windows.Point" /> structure.</span></span></summary>
        <value><span data-ttu-id="3841d-241">此 <see cref="P:System.Windows.Point.X" /> 结构的 <see cref="T:System.Windows.Point" /> 坐标值。</span><span class="sxs-lookup"><span data-stu-id="3841d-241">The <see cref="P:System.Windows.Point.X" />-coordinate value of this <see cref="T:System.Windows.Point" /> structure.</span></span>  <span data-ttu-id="3841d-242">默认值为 <c>0</c>。</span><span class="sxs-lookup"><span data-stu-id="3841d-242">The default value is <c>0</c>.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3841d-243">下面的示例演示如何检查两个 <xref:System.Windows.Point> 结构是否不相等。</span><span class="sxs-lookup"><span data-stu-id="3841d-243">The following example shows how to check if two <xref:System.Windows.Point> structures are not equal.</span></span>  <span data-ttu-id="3841d-244">它还说明了 <xref:System.Windows.Point> 在声明结构时以及在声明结构后如何向结构分配值。</span><span class="sxs-lookup"><span data-stu-id="3841d-244">It also illustrates how to assign values to a <xref:System.Windows.Point> structure when the structure is being declared and after the structure has been declared.</span></span>  
  
 [!code-csharp[PointExamples_snip#PointInequalityExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#pointinequalityexample)]
 [!code-vb[PointExamples_snip#PointInequalityExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#pointinequalityexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Point.Y" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public double Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Point.Y" />
      <MemberSignature Language="VB.NET" Value="Public Property Y As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Y { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Y : double with get, set" Usage="System.Windows.Point.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3841d-245">获取或设置此 <see cref="P:System.Windows.Point.Y" /> 的 <see cref="T:System.Windows.Point" /> 坐标值。</span><span class="sxs-lookup"><span data-stu-id="3841d-245">Gets or sets the <see cref="P:System.Windows.Point.Y" />-coordinate value of this <see cref="T:System.Windows.Point" />.</span></span></summary>
        <value><span data-ttu-id="3841d-246">此 <see cref="P:System.Windows.Point.Y" /> 结构的 <see cref="T:System.Windows.Point" /> 坐标值。</span><span class="sxs-lookup"><span data-stu-id="3841d-246">The <see cref="P:System.Windows.Point.Y" />-coordinate value of this <see cref="T:System.Windows.Point" /> structure.</span></span>  <span data-ttu-id="3841d-247">默认值为 <c>0</c>。</span><span class="sxs-lookup"><span data-stu-id="3841d-247">The default value is <c>0</c>.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3841d-248">下面的示例演示如何检查两个 <xref:System.Windows.Point> 结构是否不相等。</span><span class="sxs-lookup"><span data-stu-id="3841d-248">The following example shows how to check if two <xref:System.Windows.Point> structures are not equal.</span></span>  <span data-ttu-id="3841d-249">它还说明了 <xref:System.Windows.Point> 在声明结构时以及在声明结构后如何向结构分配值。</span><span class="sxs-lookup"><span data-stu-id="3841d-249">It also illustrates how to assign values to a <xref:System.Windows.Point> structure when the structure is being declared and after the structure has been declared.</span></span>  
  
 [!code-csharp[PointExamples_snip#PointInequalityExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#pointinequalityexample)]
 [!code-vb[PointExamples_snip#PointInequalityExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#pointinequalityexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Point.X" />
      </Docs>
    </Member>
  </Members>
</Type>
