<Type Name="RoutedEventArgs" FullName="System.Windows.RoutedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="39a4c7a889ce793c1720c4be8a9d51d14000c240" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86715024" /></Metadata><TypeSignature Language="C#" Value="public class RoutedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RoutedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RoutedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class RoutedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoutedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type RoutedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9f033-101">包含与路由事件相关联的状态信息和事件数据。</span><span class="sxs-lookup"><span data-stu-id="9f033-101">Contains state information and event data associated with a routed event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f033-102"><xref:System.Windows.RoutedEventArgs>可以将不同的与单个一起使用 <xref:System.Windows.RoutedEventArgs.RoutedEvent%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9f033-102">Different <xref:System.Windows.RoutedEventArgs> can be used with a single <xref:System.Windows.RoutedEventArgs.RoutedEvent%2A>.</span></span> <span data-ttu-id="9f033-103">此类负责将的事件数据打包 <xref:System.Windows.RoutedEventArgs.RoutedEvent%2A> ，提供额外的事件状态信息，并由事件系统用来调用与路由事件关联的处理程序。</span><span class="sxs-lookup"><span data-stu-id="9f033-103">This class is responsible for packaging the event data for a <xref:System.Windows.RoutedEventArgs.RoutedEvent%2A>, providing extra event state information, and is used by the event system for invoking the handler associated with the routed event.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.RoutedEventArgs.RoutedEvent" />
    <altmember cref="T:System.Windows.EventManager" />
    <altmember cref="M:System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f033-104">初始化 <see cref="T:System.Windows.RoutedEventArgs" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9f033-104">Initializes a new instance of the <see cref="T:System.Windows.RoutedEventArgs" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoutedEventArgs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RoutedEventArgs.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoutedEventArgs();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9f033-105">初始化 <see cref="T:System.Windows.RoutedEventArgs" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9f033-105">Initializes a new instance of the <see cref="T:System.Windows.RoutedEventArgs" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f033-106">使用此无参数构造函数时，新实例的所有公共属性都 <xref:System.Windows.RoutedEventArgs> 采用以下默认值：</span><span class="sxs-lookup"><span data-stu-id="9f033-106">When using this parameterless constructor, all public properties of the new <xref:System.Windows.RoutedEventArgs> instance assume the following default values:</span></span>  
  
-   <span data-ttu-id="9f033-107"><xref:System.Windows.RoutedEventArgs.RoutedEvent%2A> 默认为 `null`。</span><span class="sxs-lookup"><span data-stu-id="9f033-107"><xref:System.Windows.RoutedEventArgs.RoutedEvent%2A> defaults to `null`.</span></span>  
  
-   <span data-ttu-id="9f033-108"><xref:System.Windows.RoutedEventArgs.Handled%2A> 默认为 `false`</span><span class="sxs-lookup"><span data-stu-id="9f033-108"><xref:System.Windows.RoutedEventArgs.Handled%2A> defaults to `false`</span></span>  
  
-   <span data-ttu-id="9f033-109"><xref:System.Windows.RoutedEventArgs.Source%2A> 默认为 `null`。</span><span class="sxs-lookup"><span data-stu-id="9f033-109"><xref:System.Windows.RoutedEventArgs.Source%2A> defaults to `null`.</span></span>  
  
-   <span data-ttu-id="9f033-110"><xref:System.Windows.RoutedEventArgs.OriginalSource%2A> 默认为 `null`。</span><span class="sxs-lookup"><span data-stu-id="9f033-110"><xref:System.Windows.RoutedEventArgs.OriginalSource%2A> defaults to `null`.</span></span>  
  
 <span data-ttu-id="9f033-111">和的 Null <xref:System.Windows.RoutedEventArgs.Source%2A> 值 <xref:System.Windows.RoutedEventArgs.OriginalSource%2A> 仅意味着 <xref:System.Windows.RoutedEventArgs> 数据不会尝试指定源。</span><span class="sxs-lookup"><span data-stu-id="9f033-111">Null values for <xref:System.Windows.RoutedEventArgs.Source%2A> and <xref:System.Windows.RoutedEventArgs.OriginalSource%2A> only mean that the <xref:System.Windows.RoutedEventArgs> data makes no attempt to specify the source.</span></span> <span data-ttu-id="9f033-112">当在对的调用中使用此实例时，将根据 <xref:System.Windows.UIElement.RaiseEvent%2A>  <xref:System.Windows.RoutedEventArgs.Source%2A> <xref:System.Windows.RoutedEventArgs.OriginalSource%2A> 引发事件的元素填充和值，并通过路由将其传递到侦听器。</span><span class="sxs-lookup"><span data-stu-id="9f033-112">When this instance is used in a call to <xref:System.Windows.UIElement.RaiseEvent%2A>, the  <xref:System.Windows.RoutedEventArgs.Source%2A> and <xref:System.Windows.RoutedEventArgs.OriginalSource%2A> values are populated based on the element that raised the event and are passed on to listeners through the routing.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.RoutedEventArgs.RoutedEvent" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoutedEventArgs (System.Windows.RoutedEvent routedEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.RoutedEvent routedEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RoutedEventArgs.#ctor(System.Windows.RoutedEvent)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (routedEvent As RoutedEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoutedEventArgs(System::Windows::RoutedEvent ^ routedEvent);" />
      <MemberSignature Language="F#" Value="new System.Windows.RoutedEventArgs : System.Windows.RoutedEvent -&gt; System.Windows.RoutedEventArgs" Usage="new System.Windows.RoutedEventArgs routedEvent" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="9f033-113"><see cref="T:System.Windows.RoutedEventArgs" /> 类的此实例的路由事件标识符。</span><span class="sxs-lookup"><span data-stu-id="9f033-113">The routed event identifier for this instance of the <see cref="T:System.Windows.RoutedEventArgs" /> class.</span></span></param>
        <summary><span data-ttu-id="9f033-114">使用提供的路由事件标识符初始化 <see cref="T:System.Windows.RoutedEventArgs" /> 类的一个新实例。</span><span class="sxs-lookup"><span data-stu-id="9f033-114">Initializes a new instance of the <see cref="T:System.Windows.RoutedEventArgs" /> class, using the supplied routed event identifier.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f033-115">使用此重载构造函数时，新实例的未指定属性 <xref:System.Windows.RoutedEventArgs> 将假定以下默认值：</span><span class="sxs-lookup"><span data-stu-id="9f033-115">When using this overloaded constructor, unspecified properties of the new <xref:System.Windows.RoutedEventArgs> instance assume the following default values:</span></span>  
  
-   <span data-ttu-id="9f033-116"><xref:System.Windows.RoutedEventArgs.Handled%2A> 默认为 `false`</span><span class="sxs-lookup"><span data-stu-id="9f033-116"><xref:System.Windows.RoutedEventArgs.Handled%2A> defaults to `false`</span></span>  
  
-   <span data-ttu-id="9f033-117"><xref:System.Windows.RoutedEventArgs.Source%2A> 默认为 `null`。</span><span class="sxs-lookup"><span data-stu-id="9f033-117"><xref:System.Windows.RoutedEventArgs.Source%2A> defaults to `null`.</span></span>  
  
-   <span data-ttu-id="9f033-118"><xref:System.Windows.RoutedEventArgs.OriginalSource%2A> 默认为 `null`。</span><span class="sxs-lookup"><span data-stu-id="9f033-118"><xref:System.Windows.RoutedEventArgs.OriginalSource%2A> defaults to `null`.</span></span>  
  
 <span data-ttu-id="9f033-119">和的 Null <xref:System.Windows.RoutedEventArgs.Source%2A> 值 <xref:System.Windows.RoutedEventArgs.OriginalSource%2A> 仅表示这 <xref:System.Windows.RoutedEventArgs> 不会尝试指定源。</span><span class="sxs-lookup"><span data-stu-id="9f033-119">Null values for <xref:System.Windows.RoutedEventArgs.Source%2A> and <xref:System.Windows.RoutedEventArgs.OriginalSource%2A> only mean that this <xref:System.Windows.RoutedEventArgs> makes no attempt to specify the source.</span></span> <span data-ttu-id="9f033-120">当在对的调用中使用此实例时，将根据 <xref:System.Windows.UIElement.RaiseEvent%2A>  <xref:System.Windows.RoutedEventArgs.Source%2A> <xref:System.Windows.RoutedEventArgs.OriginalSource%2A> 引发事件的元素填充和值，并通过路由将其传递到侦听器。</span><span class="sxs-lookup"><span data-stu-id="9f033-120">When this instance is used in a call to <xref:System.Windows.UIElement.RaiseEvent%2A>, the  <xref:System.Windows.RoutedEventArgs.Source%2A> and <xref:System.Windows.RoutedEventArgs.OriginalSource%2A> values are populated based on the element that raised the event and are passed on to listeners through the routing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f033-121">下面的示例构造一个新 <xref:System.Windows.RoutedEventArgs> 的，以便在调用中使用 <xref:System.Windows.UIElement.RaiseEvent%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9f033-121">The following example constructs a new <xref:System.Windows.RoutedEventArgs> for use in a call to <xref:System.Windows.UIElement.RaiseEvent%2A>.</span></span>  
  
 [!code-csharp[RoutedEventCustom#RaiseEvent](~/samples/snippets/csharp/VS_Snippets_Wpf/RoutedEventCustom/CSharp/SDKSampleLibrary/class1.cs#raiseevent)]
 [!code-vb[RoutedEventCustom#RaiseEvent](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RoutedEventCustom/VB/SDKSampleLibrary/Class1.vb#raiseevent)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)" />
        <altmember cref="P:System.Windows.RoutedEventArgs.RoutedEvent" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoutedEventArgs (System.Windows.RoutedEvent routedEvent, object source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.RoutedEvent routedEvent, object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (routedEvent As RoutedEvent, source As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoutedEventArgs(System::Windows::RoutedEvent ^ routedEvent, System::Object ^ source);" />
      <MemberSignature Language="F#" Value="new System.Windows.RoutedEventArgs : System.Windows.RoutedEvent * obj -&gt; System.Windows.RoutedEventArgs" Usage="new System.Windows.RoutedEventArgs (routedEvent, source)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="9f033-122"><see cref="T:System.Windows.RoutedEventArgs" /> 类的此实例的路由事件标识符。</span><span class="sxs-lookup"><span data-stu-id="9f033-122">The routed event identifier for this instance of the <see cref="T:System.Windows.RoutedEventArgs" /> class.</span></span></param>
        <param name="source"><span data-ttu-id="9f033-123">将在处理事件时报告的备用源。</span><span class="sxs-lookup"><span data-stu-id="9f033-123">An alternate source that will be reported when the event is handled.</span></span> <span data-ttu-id="9f033-124">这将预先填充 <see cref="P:System.Windows.RoutedEventArgs.Source" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="9f033-124">This pre-populates the <see cref="P:System.Windows.RoutedEventArgs.Source" /> property.</span></span></param>
        <summary><span data-ttu-id="9f033-125">使用提供的路由事件标识符初始化 <see cref="T:System.Windows.RoutedEventArgs" /> 类的一个新实例，同时提供为事件另外声明一个源的机会。</span><span class="sxs-lookup"><span data-stu-id="9f033-125">Initializes a new instance of the <see cref="T:System.Windows.RoutedEventArgs" /> class, using the supplied routed event identifier, and providing the opportunity to declare a different source for the event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f033-126">使用此重载构造函数时，新实例的未指定属性 <xref:System.Windows.RoutedEventArgs> 将假定以下默认值：</span><span class="sxs-lookup"><span data-stu-id="9f033-126">When using this overloaded constructor, unspecified properties of the new <xref:System.Windows.RoutedEventArgs> instance assume the following default values:</span></span>  
  
-   <span data-ttu-id="9f033-127"><xref:System.Windows.RoutedEventArgs.Handled%2A> 默认为 `false`</span><span class="sxs-lookup"><span data-stu-id="9f033-127"><xref:System.Windows.RoutedEventArgs.Handled%2A> defaults to `false`</span></span>  
  
-   <span data-ttu-id="9f033-128"><xref:System.Windows.RoutedEventArgs.OriginalSource%2A> 默认为 `null`。</span><span class="sxs-lookup"><span data-stu-id="9f033-128"><xref:System.Windows.RoutedEventArgs.OriginalSource%2A> defaults to `null`.</span></span>  
  
 <span data-ttu-id="9f033-129">的 Null 值 <xref:System.Windows.RoutedEventArgs.OriginalSource%2A> 基于引发事件并通过路由传递的元素进行填充，但会在 `null` 调用之前被读取。</span><span class="sxs-lookup"><span data-stu-id="9f033-129">Null values for <xref:System.Windows.RoutedEventArgs.OriginalSource%2A> are populated based on the element that raised the event and passed on through the routing, but will read `null` prior to invocation.</span></span>  
  
 <span data-ttu-id="9f033-130">传递到虚方法（如）时使用此签名 <xref:System.Windows.RoutedEventArgs> <xref:System.Windows.Controls.Primitives.TextBoxBase.OnSelectionChanged%2A> ，其中使用参数在内部调用 <xref:System.Windows.UIElement.RaiseEvent%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9f033-130">Use this signature when passing <xref:System.Windows.RoutedEventArgs> to virtuals such as <xref:System.Windows.Controls.Primitives.TextBoxBase.OnSelectionChanged%2A>, where the arguments are used to call <xref:System.Windows.UIElement.RaiseEvent%2A> internally.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RoutedEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Handled : bool with get, set" Usage="System.Windows.RoutedEventArgs.Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[set: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f033-131">获取或设置一个值，该值指示针对路由事件（在其经过路由时）的事件处理的当前状态。</span><span class="sxs-lookup"><span data-stu-id="9f033-131">Gets or sets a value that indicates the present state of the event handling for a routed event as it travels the route.</span></span></summary>
        <value><span data-ttu-id="9f033-132">设置的时候，如果事件将标记为已处理，则设置为 <see langword="true" /> ；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9f033-132">If setting, set to <see langword="true" /> if the event is to be marked handled; otherwise <see langword="false" />.</span></span> <span data-ttu-id="9f033-133">如果读取此值， <see langword="true" /> 指示沿路由的一个类处理程序或某个实例处理程序已将此事件标记为已处理。</span><span class="sxs-lookup"><span data-stu-id="9f033-133">If reading this value, <see langword="true" /> indicates that either a class handler, or some instance handler along the route, has already marked this event handled.</span></span> <span data-ttu-id="9f033-134"><see langword="false" />.指示没有这类处理程序将该事件标记为已处理。</span><span class="sxs-lookup"><span data-stu-id="9f033-134"><see langword="false" />.indicates that no such handler has marked the event handled.</span></span>  
  
<span data-ttu-id="9f033-135">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9f033-135">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f033-136">将事件标记为已处理会将路由事件的可见性限制为沿着事件路由的侦听器。</span><span class="sxs-lookup"><span data-stu-id="9f033-136">Marking the event handled will limit the visibility of the routed event to listeners along the event route.</span></span> <span data-ttu-id="9f033-137">该事件仍会传递路由的其余部分，但只有在方法调用中专门添加的处理程序才会 `HandledEventsToo` `true` <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> 在响应中调用。</span><span class="sxs-lookup"><span data-stu-id="9f033-137">The event does still travel the remainder of the route, but only handlers specifically added with `HandledEventsToo` `true` in the <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> method call will be invoked in response.</span></span> <span data-ttu-id="9f033-138">实例侦听器上的默认处理程序 (例如，在) 中表示的处理程序 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 将不会被调用。</span><span class="sxs-lookup"><span data-stu-id="9f033-138">Default handlers on instance listeners (such as those expressed in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]) will not be invoked.</span></span> <span data-ttu-id="9f033-139">处理标记为已处理的事件并非常见方案。</span><span class="sxs-lookup"><span data-stu-id="9f033-139">Handling events that are marked handled is not a common scenario.</span></span>  
  
 <span data-ttu-id="9f033-140">如果你是控件作者定义你自己的事件，那么，在类级别对事件处理做出的决策将影响你的控件的用户以及任何派生控件的用户，以及可能包含在你的控件中或包含控件的其他元素。</span><span class="sxs-lookup"><span data-stu-id="9f033-140">If you are a control author defining your own events, the decisions you make regarding event handling at the class level will impact users of your control as well as any users of derived controls, and potentially other elements that are either contained by your control or that contain your control.</span></span> <span data-ttu-id="9f033-141">有关详细信息，请参阅[将路由事件标记为“已处理”和类处理](/dotnet/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling)。</span><span class="sxs-lookup"><span data-stu-id="9f033-141">For more information, see [Marking Routed Events as Handled, and Class Handling](/dotnet/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling).</span></span>  
  
 <span data-ttu-id="9f033-142">在极少数情况下，适合处理标记为的事件  <xref:System.Windows.RoutedEventArgs.Handled%2A> `true` ，并通过将更改为来修改事件 <xref:System.Windows.RoutedEventArgs.Handled%2A> 参数 `false` 。</span><span class="sxs-lookup"><span data-stu-id="9f033-142">In very rare circumstances it is appropriate to handle events where  <xref:System.Windows.RoutedEventArgs.Handled%2A> is marked `true`, and modify the event arguments by changing <xref:System.Windows.RoutedEventArgs.Handled%2A> to `false`.</span></span> <span data-ttu-id="9f033-143">在控件输入事件的某些区域中，这可能是必需的，例如，对的键处理方式为， <xref:System.Windows.UIElement.KeyDown> <xref:System.Windows.UIElement.TextInput> 其中，低级别和高级别的输入事件争用处理，每个都尝试使用不同的路由策略。</span><span class="sxs-lookup"><span data-stu-id="9f033-143">This can be necessary in certain areas of input events of controls, such as key handling of <xref:System.Windows.UIElement.KeyDown> versus <xref:System.Windows.UIElement.TextInput> where low level and high level input events compete for the handling, and each is attempting to work with a different routing strategy.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f033-144">下面的示例实现一个将事件标记为已处理的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="9f033-144">The following example implements an event handler that marks the event handled.</span></span>  
  
 [!code-csharp[ClassHandling#OnStarClassHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/ClassHandling/CSharp/SDKSampleLibrary/class1.cs#onstarclasshandler)]
 [!code-vb[ClassHandling#OnStarClassHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClassHandling/visualbasic/sdksamplelibrary/class1.vb#onstarclasshandler)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected virtual void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberSignature Language="F#" Value="abstract member InvokeEventHandler : Delegate * obj -&gt; unit&#xA;override this.InvokeEventHandler : Delegate * obj -&gt; unit" Usage="routedEventArgs.InvokeEventHandler (genericHandler, genericTarget)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler"><span data-ttu-id="9f033-145">要调用的泛型处理程序/委托实现。</span><span class="sxs-lookup"><span data-stu-id="9f033-145">The generic handler / delegate implementation to be invoked.</span></span></param>
        <param name="genericTarget"><span data-ttu-id="9f033-146">应在其上调用所提供的处理程序的目标。</span><span class="sxs-lookup"><span data-stu-id="9f033-146">The target on which the provided handler should be invoked.</span></span></param>
        <summary><span data-ttu-id="9f033-147">当在派生类中重写时，提供特定于类型的调用事件处理程序的方式，该方式与基实现相比可提高效率。</span><span class="sxs-lookup"><span data-stu-id="9f033-147">When overridden in a derived class, provides a way to invoke event handlers in a type-specific way, which can increase efficiency over the base implementation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f033-148">此基实现合并了反射，以确定处理程序不是按原义处理的任何情况的正确处理程序 <xref:System.Windows.RoutedEventHandler> ，并且此反射步骤会对性能产生一些后果。</span><span class="sxs-lookup"><span data-stu-id="9f033-148">The base implementation incorporates reflection to determine the right handler for any case where the handler is not literally <xref:System.Windows.RoutedEventHandler>, and this reflection step does have some performance consequences.</span></span> <span data-ttu-id="9f033-149">通过不依赖于反射，可以更高效地进行调用。</span><span class="sxs-lookup"><span data-stu-id="9f033-149">Invocations can be made more efficient by not relying on reflection.</span></span> <span data-ttu-id="9f033-150">这是激发此方法可用于任何路由事件参数类的方案，可选择重写此方法。</span><span class="sxs-lookup"><span data-stu-id="9f033-150">This is the scenario that motivates this method being available for any routed event arguments class that choose to override it.</span></span> <span data-ttu-id="9f033-151">实现不应调用此方法的基，因为你的实现应已负责调用类型安全处理程序。</span><span class="sxs-lookup"><span data-stu-id="9f033-151">Implementations should not call the base for this method, because your implementation should already be responsible for invoking the type safe handlers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f033-152">下面的伪代码演示可用于实现的基本模式。</span><span class="sxs-lookup"><span data-stu-id="9f033-152">The following is pseudocode that illustrates a basic pattern that can be used for implementation.</span></span> <span data-ttu-id="9f033-153">此处， `MyRoutedEventHandler` 是的子类 <xref:System.Windows.RoutedEventHandler> 。</span><span class="sxs-lookup"><span data-stu-id="9f033-153">Here, `MyRoutedEventHandler` is a subclass of <xref:System.Windows.RoutedEventHandler>.</span></span>  
  
 [!code-csharp[CorePseudocode#RoutedEventArgs](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#routedeventargs)]
 [!code-vb[CorePseudocode#RoutedEventArgs](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#routedeventargs)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="9f033-154">此方法旨在由派生的事件数据类重写，以提供更高效的委托调用。</span><span class="sxs-lookup"><span data-stu-id="9f033-154">This method is intended to be overridden by derived event data classes to provide more efficient invocation of their delegates.</span></span> <span data-ttu-id="9f033-155">实现应将提供的强制转换 <paramref name="genericHandler" /> 为特定于类型的委托，然后调用该处理程序。</span><span class="sxs-lookup"><span data-stu-id="9f033-155">The implementation should cast the provided <paramref name="genericHandler" /> to the type-specific delegate, and then invoke that handler.</span></span>  
  
<span data-ttu-id="9f033-156">默认实现将尝试调用所提供的处理程序，并尝试将其强制转换为 <see cref="T:System.Windows.RoutedEventHandler" /> 。</span><span class="sxs-lookup"><span data-stu-id="9f033-156">The default implementation will attempt to invoke the provided handler, attempting to cast it as <see cref="T:System.Windows.RoutedEventHandler" />.</span></span> <span data-ttu-id="9f033-157">如果 <paramref name="genericHandler" /> 或 <paramref name="genericTarget" /> 作为提供，则 <see langword="null" /> 将引发异常。</span><span class="sxs-lookup"><span data-stu-id="9f033-157">If either <paramref name="genericHandler" /> or <paramref name="genericTarget" /> is provided as <see langword="null" />, exceptions will be raised.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSetSource">
      <MemberSignature Language="C#" Value="protected virtual void OnSetSource (object source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSetSource(object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RoutedEventArgs.OnSetSource(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSetSource (source As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSetSource(System::Object ^ source);" />
      <MemberSignature Language="F#" Value="abstract member OnSetSource : obj -&gt; unit&#xA;override this.OnSetSource : obj -&gt; unit" Usage="routedEventArgs.OnSetSource source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="9f033-158"><see cref="P:System.Windows.RoutedEventArgs.Source" /> 所设置为的新值。</span><span class="sxs-lookup"><span data-stu-id="9f033-158">The new value that <see cref="P:System.Windows.RoutedEventArgs.Source" /> is being set to.</span></span></param>
        <summary><span data-ttu-id="9f033-159">在派生类中重写时，每当实例的 <see cref="P:System.Windows.RoutedEventArgs.Source" /> 属性的值发生更改，则提供一个通知回调入口点。</span><span class="sxs-lookup"><span data-stu-id="9f033-159">When overridden in a derived class, provides a notification callback entry point whenever the value of the <see cref="P:System.Windows.RoutedEventArgs.Source" /> property of an instance changes.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="9f033-160">以编程方式更改事件的报告源可能需要更新事件内特定于类型的数据。</span><span class="sxs-lookup"><span data-stu-id="9f033-160">Changing the reported source of an event programmatically can potentially require updating the type-specific data within the event.</span></span> <span data-ttu-id="9f033-161">出于此原因，此 <see cref="M:System.Windows.RoutedEventArgs.OnSetSource(System.Object)" /> 方法是受保护的虚拟方法，旨在由的子类重写 <see cref="T:System.Windows.RoutedEventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="9f033-161">For this reason, the <see cref="M:System.Windows.RoutedEventArgs.OnSetSource(System.Object)" /> method is protected virtual and is intended to be overridden by subclasses of <see cref="T:System.Windows.RoutedEventArgs" />.</span></span>  
  
<span data-ttu-id="9f033-162">此方法没有默认实现。</span><span class="sxs-lookup"><span data-stu-id="9f033-162">This method has no default implementation.</span></span></para></block>
        <altmember cref="P:System.Windows.RoutedEventArgs.Source" />
      </Docs>
    </Member>
    <Member MemberName="OriginalSource">
      <MemberSignature Language="C#" Value="public object OriginalSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object OriginalSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RoutedEventArgs.OriginalSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ OriginalSource { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OriginalSource : obj" Usage="System.Windows.RoutedEventArgs.OriginalSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f033-163">在父类进行任何可能的 <see cref="P:System.Windows.RoutedEventArgs.Source" /> 调整之前，获取由纯命中测试确定的原始报告源。</span><span class="sxs-lookup"><span data-stu-id="9f033-163">Gets the original reporting source as determined by pure hit testing, before any possible <see cref="P:System.Windows.RoutedEventArgs.Source" /> adjustment by a parent class.</span></span></summary>
        <value><span data-ttu-id="9f033-164">在类处理可能对展平复合元素树进行任何 <see cref="P:System.Windows.RoutedEventArgs.Source" /> 调整之前的原始报告源。</span><span class="sxs-lookup"><span data-stu-id="9f033-164">The original reporting source, before any possible <see cref="P:System.Windows.RoutedEventArgs.Source" /> adjustment made by class handling, which may have been done to flatten composited element trees.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f033-165">此属性将在调用类事件处理程序或任何实例处理程序之前获取其值一次，在此之后永远不会进行调整。</span><span class="sxs-lookup"><span data-stu-id="9f033-165">This property acquires its value once, before the class event handlers or any instance handlers are invoked, and is never adjusted past this point.</span></span> <span data-ttu-id="9f033-166">原始源信息对类处理程序或类实现是只读的，与事件数据中报告的信息相同。</span><span class="sxs-lookup"><span data-stu-id="9f033-166">The original source information is read-only to class handlers or class implementations, just as it is reported in the event data.</span></span>  
  
 <span data-ttu-id="9f033-167">源可以调整的常见情况是控件的内容模型中的内容元素 (列表项的内容，例如，将列表项元素报告为， <xref:System.Windows.RoutedEventArgs.Source%2A> 列表项中的实际元素将为 <xref:System.Windows.RoutedEventArgs.OriginalSource%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9f033-167">Common cases where the source may be adjusted include content elements inside a content model for a control (the contents of a list item, for instance, will report the list item element as the <xref:System.Windows.RoutedEventArgs.Source%2A> and the actual element within the list item will be the <xref:System.Windows.RoutedEventArgs.OriginalSource%2A>.</span></span>  
  
 <span data-ttu-id="9f033-168">各种元素和内容模型的源调整因类而异。</span><span class="sxs-lookup"><span data-stu-id="9f033-168">Source adjustment by various elements and content models varies from class to class.</span></span> <span data-ttu-id="9f033-169">每个调整事件源的类都尝试预见哪个源最适用于大多数输入方案和类所需的方案，然后将该源设置为 <xref:System.Windows.RoutedEventArgs.Source%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9f033-169">Each class that adjusts event sources attempts to anticipate which source is the most useful to report for most input scenarios and the scenarios for which the class is intended, and then sets that source as the <xref:System.Windows.RoutedEventArgs.Source%2A>.</span></span> <span data-ttu-id="9f033-170">如果此源不是与事件处理相关的源，请 <xref:System.Windows.RoutedEventArgs.OriginalSource%2A> 改为查看它是否报告更适合的其他源。</span><span class="sxs-lookup"><span data-stu-id="9f033-170">If this source is not the one that has relevance to your handling of the event, try checking <xref:System.Windows.RoutedEventArgs.OriginalSource%2A> instead to see if it reports a different source that is more suitable.</span></span> <span data-ttu-id="9f033-171">有关输入事件的更多详细信息，请参阅 [输入概述](/dotnet/framework/wpf/advanced/input-overview)。</span><span class="sxs-lookup"><span data-stu-id="9f033-171">For more details on input events, see [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.RoutedEventArgs.Source" />
      </Docs>
    </Member>
    <Member MemberName="RoutedEvent">
      <MemberSignature Language="C#" Value="public System.Windows.RoutedEvent RoutedEvent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.RoutedEvent RoutedEvent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RoutedEventArgs.RoutedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Property RoutedEvent As RoutedEvent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::RoutedEvent ^ RoutedEvent { System::Windows::RoutedEvent ^ get(); void set(System::Windows::RoutedEvent ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RoutedEvent : System.Windows.RoutedEvent with get, set" Usage="System.Windows.RoutedEventArgs.RoutedEvent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f033-172">获取或设置与此 <see cref="T:System.Windows.RoutedEventArgs" /> 实例关联的 <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" />。</span><span class="sxs-lookup"><span data-stu-id="9f033-172">Gets or sets the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> associated with this <see cref="T:System.Windows.RoutedEventArgs" /> instance.</span></span></summary>
        <value><span data-ttu-id="9f033-173">已调用的事件的标识符。</span><span class="sxs-lookup"><span data-stu-id="9f033-173">The identifier for the event that has been invoked.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f033-174"><xref:System.Windows.RoutedEventArgs>如果通过处理程序) 获取了参数，则不能在已 (路由的上设置此值。</span><span class="sxs-lookup"><span data-stu-id="9f033-174">You cannot set this value on a <xref:System.Windows.RoutedEventArgs> that has already been routed (for instance, if you obtained the arguments through a handler).</span></span> <span data-ttu-id="9f033-175">如果尝试这样做，将生成异常。</span><span class="sxs-lookup"><span data-stu-id="9f033-175">Attempting to do so will generate an exception.</span></span> <span data-ttu-id="9f033-176">只能在尚未用于生成事件调用的实例上设置此方法。</span><span class="sxs-lookup"><span data-stu-id="9f033-176">You can only set it on an instance that has not yet been used to generate an invocation of the event.</span></span>  
  
 <span data-ttu-id="9f033-177">的值 <xref:System.Windows.RoutedEventArgs.RoutedEvent%2A> 不能随时处于 `null` 。</span><span class="sxs-lookup"><span data-stu-id="9f033-177">The value of <xref:System.Windows.RoutedEventArgs.RoutedEvent%2A> cannot be `null` at any time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f033-178">下面的示例使用初始构造函数创建新的路由事件数据，然后将该 <xref:System.Windows.RoutedEventArgs.RoutedEvent%2A> 属性设置为后续操作。</span><span class="sxs-lookup"><span data-stu-id="9f033-178">The following example creates new routed event data with an initial constructor and then sets the <xref:System.Windows.RoutedEventArgs.RoutedEvent%2A> property as a subsequent operation.</span></span> <span data-ttu-id="9f033-179">您必须 <xref:System.Windows.RoutedEventArgs.RoutedEvent%2A> 先设置，才能引发路由事件。</span><span class="sxs-lookup"><span data-stu-id="9f033-179">You must have <xref:System.Windows.RoutedEventArgs.RoutedEvent%2A> set prior to raising the routed event.</span></span>  
  
 [!code-csharp[ColorPicker_v2#RoutedEventArgsRoutedEvent](~/samples/snippets/csharp/VS_Snippets_Wpf/ColorPicker_v2/CSharp/ColorPicker.cs#routedeventargsroutedevent)]
 [!code-vb[ColorPicker_v2#RoutedEventArgsRoutedEvent](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ColorPicker_v2/visualbasic/colorpicker.vb#routedeventargsroutedevent)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9f033-180">在路由事件时试图更改 <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> 值。</span><span class="sxs-lookup"><span data-stu-id="9f033-180">Attempted to change the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> value while the event is being routed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public object Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RoutedEventArgs.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Source { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : obj with get, set" Usage="System.Windows.RoutedEventArgs.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f033-181">获取或设置对引发事件的对象的引用。</span><span class="sxs-lookup"><span data-stu-id="9f033-181">Gets or sets a reference to the object that raised the event.</span></span></summary>
        <value><span data-ttu-id="9f033-182">引发事件的对象。</span><span class="sxs-lookup"><span data-stu-id="9f033-182">The object that raised the event.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f033-183">对于实际传递到引发它的元素之外的路由的任何冒泡路由事件，以及对于未向下传递到引发它的元素的任何隧道路由事件，的值 <xref:System.Windows.RoutedEventArgs.Source%2A> 将不同于 `sender` 事件参数类的参数值。</span><span class="sxs-lookup"><span data-stu-id="9f033-183">For any bubbling routed event that has actually traveled the route beyond the element that raised it, and for any tunneling routed event that has not yet tunneled down to the element that raised it, the value of <xref:System.Windows.RoutedEventArgs.Source%2A> will be different than the value of the `sender` parameter of the event arguments class.</span></span> <span data-ttu-id="9f033-184">事件中涉及的两个元素中有哪些是最重要的 (<xref:System.Windows.RoutedEventArgs.Source%2A> 、引发它的元素或当前正在处理它的元素 `sender`) 依赖于处理程序所寻址的应用程序逻辑。</span><span class="sxs-lookup"><span data-stu-id="9f033-184">Which of the two elements involved in the event is of the most importance in any given handler (<xref:System.Windows.RoutedEventArgs.Source%2A>, the element that raised it, or `sender`, the element that is currently handling it) is dependent on the application logic that your handler is addressing.</span></span>  
  
 <span data-ttu-id="9f033-185">通常仅当重写或实现其他调整事件源的 Api （例如，在处理事件的类时），才能设置此属性。</span><span class="sxs-lookup"><span data-stu-id="9f033-185">Setting this property is typically only done when overriding or implementing other APIs that adjust event sources, such as when class handling an event.</span></span> <span data-ttu-id="9f033-186">不建议通过实例处理程序重置明显的事件源，特别是当处理程序未将事件标记为已处理时。</span><span class="sxs-lookup"><span data-stu-id="9f033-186">Resetting apparent event sources from instance handlers is not recommended, particularly when the handler does not mark the event as handled.</span></span>  
  
 <span data-ttu-id="9f033-187">如果重置 <xref:System.Windows.RoutedEventArgs.Source%2A> 以报告不同的事件源，则 <xref:System.Windows.RoutedEventArgs.OriginalSource%2A> 会继续将源报告为初始调用引发的第一个 <xref:System.Windows.UIElement.RaiseEvent%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9f033-187">If you do reset <xref:System.Windows.RoutedEventArgs.Source%2A> to report a different event source, <xref:System.Windows.RoutedEventArgs.OriginalSource%2A> will continue to report the source as first raised by the originating <xref:System.Windows.UIElement.RaiseEvent%2A> call.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.RoutedEventArgs.OriginalSource" />
      </Docs>
    </Member>
  </Members>
</Type>
