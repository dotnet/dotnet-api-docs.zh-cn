<Type Name="PresentationSource" FullName="System.Windows.PresentationSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="17fe2f99bd70e670492b222fc8795bba135f67ba" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86640872" /></Metadata><TypeSignature Language="C#" Value="public abstract class PresentationSource : System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PresentationSource extends System.Windows.Threading.DispatcherObject" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.PresentationSource" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PresentationSource&#xA;Inherits DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class PresentationSource abstract : System::Windows::Threading::DispatcherObject" />
  <TypeSignature Language="F#" Value="type PresentationSource = class&#xA;    inherit DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract PresentationSource extends System.Windows.Threading.DispatcherObject" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c5f2a-101">提供将其他技术的内容呈现为互操作方案的一部分的抽象基类。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-101">Provides an abstract base for classes that present content from another technology as part of an interoperation scenario.</span></span> <span data-ttu-id="c5f2a-102">此外，此类还提供用于处理这些源的静态方法，以及基本可视层表示体系结构。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-102">In addition, this class provides static methods for working with these sources, as well as the basic visual-layer presentation architecture.</span></span></summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:System.Windows.Interop.HwndSource" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PresentationSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PresentationSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c5f2a-103">在由派生类的构造函数调用时，提供基类值的初始化。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-103">Provides initialization for base class values when called by the constructor of a derived class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSource">
      <MemberSignature Language="C#" Value="protected void AddSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AddSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.AddSource" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AddSource ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AddSource();" />
      <MemberSignature Language="F#" Value="member this.AddSource : unit -&gt; unit" Usage="presentationSource.AddSource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c5f2a-104">将 <see cref="T:System.Windows.PresentationSource" /> 派生类实例添加到已知表示源的列表中。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-104">Adds a <see cref="T:System.Windows.PresentationSource" /> derived class instance to the list of known presentation sources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5f2a-105">此方法应由派生类调用以指示需要跟踪这些方法。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-105">This method should be called by derived classes to indicate that they need to be tracked.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSourceChangedHandler">
      <MemberSignature Language="C#" Value="public static void AddSourceChangedHandler (System.Windows.IInputElement element, System.Windows.SourceChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddSourceChangedHandler(class System.Windows.IInputElement element, class System.Windows.SourceChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddSourceChangedHandler (element As IInputElement, handler As SourceChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddSourceChangedHandler(System::Windows::IInputElement ^ element, System::Windows::SourceChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddSourceChangedHandler : System.Windows.IInputElement * System.Windows.SourceChangedEventHandler -&gt; unit" Usage="System.Windows.PresentationSource.AddSourceChangedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="handler" Type="System.Windows.SourceChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="c5f2a-106">向其添加处理程序的元素。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-106">The element to add the handler to.</span></span></param>
        <param name="handler"><span data-ttu-id="c5f2a-107">要添加的处理程序实现。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-107">The handler implementation to add.</span></span></param>
        <summary><span data-ttu-id="c5f2a-108">将 <see langword="SourceChanged" /> 事件的处理程序添加到提供的元素中。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-108">Adds a handler for the <see langword="SourceChanged" /> event to the provided element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5f2a-109">尽管此事件的语法块是什么，但没有合法的 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 附加属性用法。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-109">Despite what the syntax block for this event states, there is no legitimate [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] attached property usage.</span></span> <span data-ttu-id="c5f2a-110">不应尝试在中添加处理程序 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] ，并且代码中的处理程序只应放置在用作宿主的对象上，以便 (<xref:System.Windows.PresentationSource> ) 内容。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-110">You should not attempt to add handlers in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], and handlers in code should only be placed on objects that serve as hosts for presentation (<xref:System.Windows.PresentationSource> ) content.</span></span> <span data-ttu-id="c5f2a-111">此类处理程序只应在对象初始化过程中附加，并且应在 Dispose 方法或等效的对象清理中显式删除。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-111">Such handlers should only be attached during object initialization, and should be explicitly removed in a Dispose method or equivalent object cleanup.</span></span>  
  
 <span data-ttu-id="c5f2a-112">尽管这是路由事件，但由于典型应用程序方案中的元素数量相对较少，因此在这种情况下，对此事件施加了一些特殊限制，这与处理此事件无关。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-112">Even though this is a routed event, there are special restrictions placed on this event that differ from normal routed event behavior, due to the relatively small number of elements in a typical application scenario that would concern themselves with handling this event.</span></span>  
  
-   <span data-ttu-id="c5f2a-113">不能使用 <xref:System.Windows.UIElement> 或 <xref:System.Windows.ContentElement> <xref:System.Windows.UIElement.AddHandler%2A> 方法添加处理程序。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-113">You cannot use the <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement> <xref:System.Windows.UIElement.AddHandler%2A> methods to add handlers.</span></span> <span data-ttu-id="c5f2a-114">您必须使用 <xref:System.Windows.PresentationSource.AddSourceChangedHandler%2A>。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-114">You must use <xref:System.Windows.PresentationSource.AddSourceChangedHandler%2A>.</span></span>  
  
-   <span data-ttu-id="c5f2a-115">`+=`不支持 c # 和 `-=` 事件处理程序语法以及相关的特定于语言的处理程序语法，因为事件本身并不公开为公共的。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-115">The C# `+=` and `-=` event handler syntaxes, and related language-specific handler syntaxes, are not supported, because the event itself is not exposed as public.</span></span> <span data-ttu-id="c5f2a-116">仅 <xref:System.Windows.PresentationSource> 支持直接添加和删除处理程序的实用工具方法。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-116">Only the <xref:System.Windows.PresentationSource> utility methods for adding and removing the handlers directly are supported.</span></span>  
  
-   <span data-ttu-id="c5f2a-117">不允许使用类处理程序。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-117">Class handlers are not allowed.</span></span> <span data-ttu-id="c5f2a-118">具体而言，你不能 <xref:System.Windows.EventManager.RegisterClassHandler%2A> 在类构造函数中调用此事件，因为虽然存在用于 SourceChanged 的标识符字段，但标识符不是公共的。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-118">Specifically, you cannot call <xref:System.Windows.EventManager.RegisterClassHandler%2A> against this event in a class constructor because although an identifier field exists for SourceChanged, the identifier is not public.</span></span>  
  
-   <span data-ttu-id="c5f2a-119">即使其中一个处理程序尝试将参数标记为已处理，所有注册的处理程序也会接收 SourceChanged 事件。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-119">All registered handlers will receive the SourceChanged event even if one of the handlers attempts to mark the arguments as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearContentRenderedListeners">
      <MemberSignature Language="C#" Value="protected void ClearContentRenderedListeners ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ClearContentRenderedListeners() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.ClearContentRenderedListeners" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ClearContentRenderedListeners ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ClearContentRenderedListeners();" />
      <MemberSignature Language="F#" Value="member this.ClearContentRenderedListeners : unit -&gt; unit" Usage="presentationSource.ClearContentRenderedListeners " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c5f2a-120">将 <see cref="E:System.Windows.PresentationSource.ContentRendered" /> 事件的侦听器列表设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-120">Sets the list of listeners for the <see cref="E:System.Windows.PresentationSource.ContentRendered" /> event to <see langword="null" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.PresentationSource.ContentRendered" />
      </Docs>
    </Member>
    <Member MemberName="CompositionTarget">
      <MemberSignature Language="C#" Value="public System.Windows.Media.CompositionTarget CompositionTarget { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.CompositionTarget CompositionTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.CompositionTarget" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompositionTarget As CompositionTarget" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::CompositionTarget ^ CompositionTarget { System::Windows::Media::CompositionTarget ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CompositionTarget : System.Windows.Media.CompositionTarget" Usage="System.Windows.PresentationSource.CompositionTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CompositionTarget</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c5f2a-121">获取要在源中显示的视觉效果的可视目标。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-121">Gets the visual target for the visuals being presented in the source.</span></span></summary>
        <value><span data-ttu-id="c5f2a-122">可视目标（<see cref="T:System.Windows.Media.CompositionTarget" /> 派生类的实例）。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-122">A visual target (instance of a <see cref="T:System.Windows.Media.CompositionTarget" /> derived class).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5f2a-123">此属性的返回依赖于的实现 <xref:System.Windows.PresentationSource.GetCompositionTargetCore%2A> 。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-123">The return of this property relies on an implementation of <xref:System.Windows.PresentationSource.GetCompositionTargetCore%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c5f2a-124">派生类可以选择隐藏此属性以提供特定于类型的值。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-124">Derived classes can choose to shadow this property to offer a type-specific value.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ContentRendered">
      <MemberSignature Language="C#" Value="public event EventHandler ContentRendered;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ContentRendered" />
      <MemberSignature Language="DocId" Value="E:System.Windows.PresentationSource.ContentRendered" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContentRendered As EventHandler " FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ContentRendered;" />
      <MemberSignature Language="F#" Value="member this.ContentRendered : EventHandler " Usage="member this.ContentRendered : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event ContentRendered As EventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c5f2a-125">在呈现内容并准备开始用户交互时发生。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-125">Occurs when content is rendered and ready for user interaction.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentSources">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable CurrentSources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.IEnumerable CurrentSources" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.CurrentSources" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentSources As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::IEnumerable ^ CurrentSources { System::Collections::IEnumerable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentSources : System.Collections.IEnumerable" Usage="System.Windows.PresentationSource.CurrentSources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c5f2a-126">返回源的列表。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-126">Returns a list of sources.</span></span></summary>
        <value><span data-ttu-id="c5f2a-127">弱引用的列表。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-127">A list of weak references.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5f2a-128">返回的列表支持对随添加的源列表的只读、线程安全副本进行枚举器 <xref:System.Windows.PresentationSource.AddSource%2A> 。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-128">The returned list supports an enumerator over a read-only, thread-safe copy of the list of sources as added with <xref:System.Windows.PresentationSource.AddSource%2A>.</span></span>  
  
 <span data-ttu-id="c5f2a-129">枚举器将跳过列表中任何死弱引用。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-129">The enumerator skips any dead weak references in the list.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromDependencyObject">
      <MemberSignature Language="C#" Value="public static System.Windows.PresentationSource FromDependencyObject (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.PresentationSource FromDependencyObject(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.FromDependencyObject(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromDependencyObject (dependencyObject As DependencyObject) As PresentationSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::PresentationSource ^ FromDependencyObject(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberSignature Language="F#" Value="static member FromDependencyObject : System.Windows.DependencyObject -&gt; System.Windows.PresentationSource" Usage="System.Windows.PresentationSource.FromDependencyObject dependencyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PresentationSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject"><span data-ttu-id="c5f2a-130">要查找其源的 <see cref="T:System.Windows.DependencyObject" />。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-130">The <see cref="T:System.Windows.DependencyObject" /> to find the source for.</span></span></param>
        <summary><span data-ttu-id="c5f2a-131">返回要在其中呈现所提供的 <see cref="T:System.Windows.DependencyObject" /> 的源。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-131">Returns the source in which a provided <see cref="T:System.Windows.DependencyObject" /> is presented.</span></span></summary>
        <returns><span data-ttu-id="c5f2a-132">要在其中显示依赖项对象的 <see cref="T:System.Windows.PresentationSource" />。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-132">The <see cref="T:System.Windows.PresentationSource" /> in which the dependency object is being presented.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromVisual">
      <MemberSignature Language="C#" Value="public static System.Windows.PresentationSource FromVisual (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.PresentationSource FromVisual(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.FromVisual(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromVisual (visual As Visual) As PresentationSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::PresentationSource ^ FromVisual(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="static member FromVisual : System.Windows.Media.Visual -&gt; System.Windows.PresentationSource" Usage="System.Windows.PresentationSource.FromVisual visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PresentationSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual"><span data-ttu-id="c5f2a-133">要查找其源的 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-133">The <see cref="T:System.Windows.Media.Visual" /> to find the source for.</span></span></param>
        <summary><span data-ttu-id="c5f2a-134">返回要在其中呈现所提供的 <see cref="T:System.Windows.Media.Visual" /> 的源。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-134">Returns the source in which a provided <see cref="T:System.Windows.Media.Visual" /> is presented.</span></span></summary>
        <returns><span data-ttu-id="c5f2a-135">正在其中呈现视觉效果的 <see cref="T:System.Windows.PresentationSource" />；如果释放 <paramref name="visual" />，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-135">The <see cref="T:System.Windows.PresentationSource" /> in which the visual is being presented, or <see langword="null" /> if <paramref name="visual" /> is disposed.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c5f2a-136"><paramref name="visual" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-136"><paramref name="visual" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCompositionTargetCore">
      <MemberSignature Language="C#" Value="protected abstract System.Windows.Media.CompositionTarget GetCompositionTargetCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Media.CompositionTarget GetCompositionTargetCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.GetCompositionTargetCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetCompositionTargetCore () As CompositionTarget" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Windows::Media::CompositionTarget ^ GetCompositionTargetCore();" />
      <MemberSignature Language="F#" Value="abstract member GetCompositionTargetCore : unit -&gt; System.Windows.Media.CompositionTarget" Usage="presentationSource.GetCompositionTargetCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CompositionTarget</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c5f2a-137">在派生类中重写后，返回给定源的可视目标。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-137">When overridden in a derived class, returns a visual target for the given source.</span></span></summary>
        <returns><span data-ttu-id="c5f2a-138">返回呈现该视觉效果的目标 <see cref="T:System.Windows.Media.CompositionTarget" />。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-138">Returns a <see cref="T:System.Windows.Media.CompositionTarget" /> that is target for rendering the visual.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c5f2a-139">重写此方法以声明 <see cref="P:System.Windows.PresentationSource.CompositionTarget" /> 只读属性将返回的值。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-139">Override this method to declare the value that the <see cref="P:System.Windows.PresentationSource.CompositionTarget" /> read-only property will return.</span></span>  
  
<span data-ttu-id="c5f2a-140">重写应返回 <see cref="T:System.Windows.Media.CompositionTarget" /> 用于互操作方案的派生类类型的特定于类型的实例。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-140">Your override should return type-specific instances of the <see cref="T:System.Windows.Media.CompositionTarget" /> derived class type that is used for your interoperation scenario.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="public abstract bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDisposed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDisposed : bool" Usage="System.Windows.PresentationSource.IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c5f2a-141">在派生类中重写后，获取一个声明对象是否已被释放的值。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-141">When overridden in a derived class, gets a value that declares whether the object is disposed.</span></span></summary>
        <value><span data-ttu-id="c5f2a-142">如果释放对象，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-142"><see langword="true" /> if the object is disposed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c5f2a-143">派生类应实现 <see cref="T:System.IDisposable" /> 或提供等效的行为。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-143">Derived classes are expected to implement <see cref="T:System.IDisposable" /> or provide equivalent behavior.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="RemoveSource">
      <MemberSignature Language="C#" Value="protected void RemoveSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.RemoveSource" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RemoveSource ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RemoveSource();" />
      <MemberSignature Language="F#" Value="member this.RemoveSource : unit -&gt; unit" Usage="presentationSource.RemoveSource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c5f2a-144">从已知表示源的列表中移除 <see cref="T:System.Windows.PresentationSource" /> 派生类实例。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-144">Removes a <see cref="T:System.Windows.PresentationSource" /> derived class instance from the list of known presentation sources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSourceChangedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveSourceChangedHandler (System.Windows.IInputElement e, System.Windows.SourceChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveSourceChangedHandler(class System.Windows.IInputElement e, class System.Windows.SourceChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveSourceChangedHandler (e As IInputElement, handler As SourceChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveSourceChangedHandler(System::Windows::IInputElement ^ e, System::Windows::SourceChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveSourceChangedHandler : System.Windows.IInputElement * System.Windows.SourceChangedEventHandler -&gt; unit" Usage="System.Windows.PresentationSource.RemoveSourceChangedHandler (e, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.IInputElement" />
        <Parameter Name="handler" Type="System.Windows.SourceChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c5f2a-145">要从中移除处理程序的元素。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-145">The element to remove the handler from.</span></span></param>
        <param name="handler"><span data-ttu-id="c5f2a-146">要移除的处理程序实现。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-146">The handler implementation to remove.</span></span></param>
        <summary><span data-ttu-id="c5f2a-147">从所提供的元素中移除 <see langword="SourceChanged" /> 事件的处理程序。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-147">Removes a handler for the <see langword="SourceChanged" /> event from the provided element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5f2a-148">尽管这是路由事件，但由于典型应用程序方案中的元素数量相对较少，因此在这种情况下，对此事件施加了一些特殊限制，这与处理此事件无关。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-148">Even though this is a routed event, there are special restrictions placed on this event that differ from normal routed event behavior, due to the relatively small number of elements in a typical application scenario that would concern themselves with handling this event.</span></span>  
  
-   <span data-ttu-id="c5f2a-149">不能使用 <xref:System.Windows.UIElement> 或 <xref:System.Windows.ContentElement> <xref:System.Windows.UIElement.RemoveHandler%2A> 方法删除处理程序。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-149">You cannot use the <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement> <xref:System.Windows.UIElement.RemoveHandler%2A> methods to remove handlers.</span></span> <span data-ttu-id="c5f2a-150">您必须使用 <xref:System.Windows.PresentationSource.RemoveSourceChangedHandler%2A>。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-150">You must use <xref:System.Windows.PresentationSource.RemoveSourceChangedHandler%2A>.</span></span>  
  
-   <span data-ttu-id="c5f2a-151">`+=`不支持 c # 和 `-=` 事件处理程序语法以及其他特定于语言的处理程序语法，因为事件本身并不公开为公共的。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-151">The C# `+=` and `-=` event handler syntaxes, and other language-specific handler syntaxes, are not supported, because the event itself is not exposed as public.</span></span> <span data-ttu-id="c5f2a-152">仅 <xref:System.Windows.PresentationSource> 支持直接添加和删除处理程序的实用工具方法。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-152">Only the <xref:System.Windows.PresentationSource> utility methods for adding and removing the handlers directly are supported.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="RootChanged">
      <MemberSignature Language="C#" Value="protected void RootChanged (System.Windows.Media.Visual oldRoot, System.Windows.Media.Visual newRoot);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RootChanged(class System.Windows.Media.Visual oldRoot, class System.Windows.Media.Visual newRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RootChanged (oldRoot As Visual, newRoot As Visual)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RootChanged(System::Windows::Media::Visual ^ oldRoot, System::Windows::Media::Visual ^ newRoot);" />
      <MemberSignature Language="F#" Value="member this.RootChanged : System.Windows.Media.Visual * System.Windows.Media.Visual -&gt; unit" Usage="presentationSource.RootChanged (oldRoot, newRoot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityTreatAsSafe]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityTreatAsSafe&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldRoot" Type="System.Windows.Media.Visual" />
        <Parameter Name="newRoot" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="oldRoot"><span data-ttu-id="c5f2a-153">旧的根 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-153">The old root <see cref="T:System.Windows.Media.Visual" />.</span></span></param>
        <param name="newRoot"><span data-ttu-id="c5f2a-154">新的根 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-154">The new root <see cref="T:System.Windows.Media.Visual" />.</span></span></param>
        <summary><span data-ttu-id="c5f2a-155">提供根 <see cref="T:System.Windows.Media.Visual" /> 已发生更改的通知。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-155">Provides notification that the root <see cref="T:System.Windows.Media.Visual" /> has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5f2a-156">派生类应调用此方法以指示其根 <xref:System.Windows.Media.Visual> 已更改。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-156">Derived classes should call this method to indicate that their root <xref:System.Windows.Media.Visual> has changed.</span></span>  
  
 <span data-ttu-id="c5f2a-157">当且仅当这些根视觉对象是派生类时，调用此方法会导致在指定的根视觉对象上引发两个对象生存期事件 <xref:System.Windows.FrameworkElement> 。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-157">Calling this method causes two object lifetime events to be raised on the specified root visuals, if and only if those root visuals are <xref:System.Windows.FrameworkElement> derived classes.</span></span>  
  
-   <span data-ttu-id="c5f2a-158">旧的根视觉对象将引发 <xref:System.Windows.FrameworkElement.Unloaded> 事件，并将处理其元素树，并将此事件广播给每个子元素。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-158">The old root visual will raise the <xref:System.Windows.FrameworkElement.Unloaded> event, and will process its tree of elements downward, broadcasting this event to each child element.</span></span>  
  
-   <span data-ttu-id="c5f2a-159">新的根视觉对象将引发 <xref:System.Windows.FrameworkElement.Loaded> 事件，并将处理其元素树，并将此事件广播给每个子元素。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-159">The new root visual will raise the <xref:System.Windows.FrameworkElement.Loaded> event, and will process its tree of elements downward, broadcasting this event to each child element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootVisual">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.Visual RootVisual { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Visual RootVisual" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.RootVisual" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property RootVisual As Visual" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Windows::Media::Visual ^ RootVisual { System::Windows::Media::Visual ^ get(); void set(System::Windows::Media::Visual ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RootVisual : System.Windows.Media.Visual with get, set" Usage="System.Windows.PresentationSource.RootVisual" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[set: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c5f2a-160">在派生类中重写后，获取或设置要在源中显示的根视觉效果。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-160">When overridden in a derived class, gets or sets the root visual being presented in the source.</span></span></summary>
        <value><span data-ttu-id="c5f2a-161">根视觉效果。</span><span class="sxs-lookup"><span data-stu-id="c5f2a-161">The root visual.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
