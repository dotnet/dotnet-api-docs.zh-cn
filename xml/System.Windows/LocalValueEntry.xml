<Type Name="LocalValueEntry" FullName="System.Windows.LocalValueEntry">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d64697db3b35080490eb1932721c63ac42c54928" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86697422" /></Metadata><TypeSignature Language="C#" Value="public struct LocalValueEntry" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit LocalValueEntry extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.LocalValueEntry" />
  <TypeSignature Language="VB.NET" Value="Public Structure LocalValueEntry" />
  <TypeSignature Language="C++ CLI" Value="public value class LocalValueEntry" />
  <TypeSignature Language="F#" Value="type LocalValueEntry = struct" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示本地设置的依赖属性的属性标识符和属性值。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 获取的属性值时，将返回此类的实例 <xref:System.Windows.LocalValueEnumerator.Current%2A> <xref:System.Windows.LocalValueEnumerator> 。 所有 <xref:System.Windows.LocalValueEntry> 属性都是只读的。  
  
 此类没有公共构造函数。 若要获取此类的实例，必须调用 <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> ，然后从返回的中获取的值 <xref:System.Windows.LocalValueEnumerator.Current%2A> <xref:System.Windows.LocalValueEnumerator> 。  
  
   
  
## Examples  
 下面的示例循环访问和查询属性的本地设置的值 <xref:System.Windows.DependencyObject> <xref:System.Windows.LocalValueEntry> 。  
  
 [!code-csharp[DPClearValue#IterateLocalValuesAndClear](~/samples/snippets/csharp/VS_Snippets_Wpf/DPClearValue/CSharp/default.xaml.cs#iteratelocalvaluesandclear)]
 [!code-vb[DPClearValue#IterateLocalValuesAndClear](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DPClearValue/VisualBasic/default.xaml.vb#iteratelocalvaluesandclear)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.LocalValueEnumerator" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEntry.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="localValueEntry.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">要与当前的 <see cref="T:System.Windows.LocalValueEntry" /> 进行比较的 <see cref="T:System.Windows.LocalValueEntry" />。</param>
        <summary>确定两个 <see cref="T:System.Windows.LocalValueEntry" /> 实例是否相等。</summary>
        <returns>此 <see cref="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)" /> 实现比较 <see cref="P:System.Windows.LocalValueEntry.Property" /> 的各个值，并可能比较 <see cref="P:System.Windows.LocalValueEntry.Value" /> 的各个值。 <see cref="P:System.Windows.LocalValueEntry.Property" /> 的 <see cref="T:System.Windows.LocalValueEntry" /> 组件为值类型，因此将始终是按位比较。 对于 <see cref="P:System.Windows.LocalValueEntry.Value" /> 组件，如果它是值类型，此实现将使用按位比较。 对于具有引用类型的本地设置的属性，该行为将推迟到该类型的相等性确定机制中进行，因为它只在内部为两个值使用 == 运算符。 默认情况下，这将是值的引用相等性，因而整个 <see cref="T:System.Windows.LocalValueEntry" /> 的相等性将变为引用相等性。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEntry.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="localValueEntry.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回此 <see cref="T:System.Windows.LocalValueEntry" /> 的哈希代码。</summary>
        <returns>带符号的 32 位整数值。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.LocalValueEntry obj1, System.Windows.LocalValueEntry obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.LocalValueEntry obj1, valuetype System.Windows.LocalValueEntry obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (obj1 As LocalValueEntry, obj2 As LocalValueEntry) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::LocalValueEntry obj1, System::Windows::LocalValueEntry obj2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.LocalValueEntry * System.Windows.LocalValueEntry -&gt; bool" Usage="obj1 = obj2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Windows.LocalValueEntry" />
        <Parameter Name="obj2" Type="System.Windows.LocalValueEntry" />
      </Parameters>
      <Docs>
        <param name="obj1">要比较的第一个实例。</param>
        <param name="obj2">要比较的第二个实例。</param>
        <summary>比较指定的 <see cref="T:System.Windows.LocalValueEntry" /> 实例，以确定它们是否相同。</summary>
        <returns>如果 <paramref name="obj1" /><see cref="T:System.Windows.LocalValueEntry" /> 等于 <paramref name="obj2" /><see cref="T:System.Windows.LocalValueEntry" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此 <xref:System.Windows.LocalValueEntry.op_Equality%2A> 实现比较 <xref:System.Windows.LocalValueEntry.Property%2A> 的各个值，并可能比较 <xref:System.Windows.LocalValueEntry.Value%2A> 的各个值。 的 <xref:System.Windows.LocalValueEntry.Property%2A> 组件始终是 <xref:System.Windows.LocalValueEntry> 值类型，因此，此比较将始终为按位值比较。 对于 <xref:System.Windows.LocalValueEntry.Value%2A> 组件，如果它是值类型，此实现将使用按位比较。  
  
 对于具有引用类型的本地设置的属性，该行为将推迟到该类型的相等性确定机制中进行，因为它只在内部为两个值使用 `==` 运算符。 默认情况下，这是值的引用相等性。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.LocalValueEntry.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.LocalValueEntry obj1, System.Windows.LocalValueEntry obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.LocalValueEntry obj1, valuetype System.Windows.LocalValueEntry obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (obj1 As LocalValueEntry, obj2 As LocalValueEntry) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::LocalValueEntry obj1, System::Windows::LocalValueEntry obj2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.LocalValueEntry * System.Windows.LocalValueEntry -&gt; bool" Usage="System.Windows.LocalValueEntry.op_Inequality (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Windows.LocalValueEntry" />
        <Parameter Name="obj2" Type="System.Windows.LocalValueEntry" />
      </Parameters>
      <Docs>
        <param name="obj1">要比较的第一个实例。</param>
        <param name="obj2">要比较的第二个实例。</param>
        <summary>比较指定的 <see cref="T:System.Windows.LocalValueEnumerator" /> 实例，以确定它们是否不同。</summary>
        <returns>此实现比较 <see cref="P:System.Windows.LocalValueEntry.Property" /> 的值和 <see cref="P:System.Windows.LocalValueEntry.Value" /> 的 <see cref="T:System.Windows.LocalValueEntry" /> 组件。 <see cref="P:System.Windows.LocalValueEntry.Property" /> 的 <see cref="T:System.Windows.LocalValueEntry" /> 组件始终为值类型，所以此比较将始终是按位比较。 对于 <see cref="P:System.Windows.LocalValueEntry.Value" /> 组件，如果它是值类型，此实现将使用按位比较。  
  
对于具有引用类型的本地设置的属性，该行为将推迟到该类型的相等性确定机制中进行，因为它只在内部为两个值使用 <see langword="==" /> 运算符。 默认情况下，这是值的引用相等性。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.LocalValueEntry.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyProperty Property { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyProperty Property" />
      <MemberSignature Language="DocId" Value="P:System.Windows.LocalValueEntry.Property" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Property As DependencyProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyProperty ^ Property { System::Windows::DependencyProperty ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Property : System.Windows.DependencyProperty" Usage="System.Windows.LocalValueEntry.Property" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取该条目表示的本地设置的依赖项属性的标识符。</summary>
        <value>本地设置的依赖项属性的标识符。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此属性可以查询本地设置的依赖属性的标识符并获取其元数据。 此获取的元数据可能包含属性的初始默认值以及属性是否支持属性值继承。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyProperty" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.LocalValueEntry.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Windows.LocalValueEntry.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取本地设置的依赖属性的值。</summary>
        <value>对象形式的本地设置的依赖属性的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要确定此值的更具体的类型，请检查当前的， <xref:System.Windows.LocalValueEntry.Property%2A> <xref:System.Windows.LocalValueEntry> 并获取其 <xref:System.Windows.DependencyProperty.PropertyType%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyProperty" />
      </Docs>
    </Member>
  </Members>
</Type>
