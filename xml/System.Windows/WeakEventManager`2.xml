<Type Name="WeakEventManager&lt;TEventSource,TEventArgs&gt;" FullName="System.Windows.WeakEventManager&lt;TEventSource,TEventArgs&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eacb601725a8f755dad95235d794090a0782d305" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="82339508" /></Metadata><TypeSignature Language="C#" Value="public class WeakEventManager&lt;TEventSource,TEventArgs&gt; : System.Windows.WeakEventManager where TEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WeakEventManager`2&lt;TEventSource, (class System.EventArgs) TEventArgs&gt; extends System.Windows.WeakEventManager" />
  <TypeSignature Language="DocId" Value="T:System.Windows.WeakEventManager`2" />
  <TypeSignature Language="VB.NET" Value="Public Class WeakEventManager(Of TEventSource, TEventArgs)&#xA;Inherits WeakEventManager" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TEventSource, typename TEventArgs&gt;&#xA; where TEventArgs : EventArgspublic ref class WeakEventManager : System::Windows::WeakEventManager" />
  <TypeSignature Language="F#" Value="type WeakEventManager&lt;'EventSource, 'EventArgs (requires 'EventArgs :&gt; EventArgs)&gt; = class&#xA;    inherit WeakEventManager" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEventSource" />
    <TypeParameter Name="TEventArgs">
      <Constraints>
        <BaseTypeName>System.EventArgs</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Windows.WeakEventManager</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TEventSource"><span data-ttu-id="5a267-101">引发事件的类型。</span><span class="sxs-lookup"><span data-stu-id="5a267-101">The type that raises the event.</span></span></typeparam>
    <typeparam name="TEventArgs"><span data-ttu-id="5a267-102">保存事件数据的类型。</span><span class="sxs-lookup"><span data-stu-id="5a267-102">The type that holds the event data.</span></span></typeparam>
    <summary><span data-ttu-id="5a267-103">提供类型安全的 <see cref="T:System.Windows.WeakEventManager" />，其可让您指定要用于弱事件监听程序模式的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="5a267-103">Provides a type-safe <see cref="T:System.Windows.WeakEventManager" /> that enables you to specify the event handler to use for the "weak event listener" pattern.</span></span> <span data-ttu-id="5a267-104">此类定义事件源的类型参数和使用的事件数据的类型参数。</span><span class="sxs-lookup"><span data-stu-id="5a267-104">This class defines a type parameter for the source of the event and a type parameter for the event data that is used.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a267-105"><xref:System.Windows.WeakEventManager>通过使用类，您可以通过指定要订阅的事件、事件的源和事件处理程序来利用弱事件侦听器模式。</span><span class="sxs-lookup"><span data-stu-id="5a267-105">The <xref:System.Windows.WeakEventManager> class enables you to leverage the weak event listener pattern by specifying the event to subscribe to, the source of the event, and event handler.</span></span>  <span data-ttu-id="5a267-106">你可以使用 <xref:System.Windows.WeakEventManager%602> 作为实现 <xref:System.Windows.IWeakEventListener> 接口和使用专用的替代方法 <xref:System.Windows.WeakEventManager> 。</span><span class="sxs-lookup"><span data-stu-id="5a267-106">You can use <xref:System.Windows.WeakEventManager%602> as an alternative to implementing the <xref:System.Windows.IWeakEventListener> interface and using a specialized <xref:System.Windows.WeakEventManager>.</span></span> <span data-ttu-id="5a267-107">调用时 <xref:System.Windows.WeakEventManager%602.AddHandler%2A> ，源的类型必须为， `TEventSource` 并且传递的事件处理程序必须具有 `TEventArgs` 作为其事件数据。</span><span class="sxs-lookup"><span data-stu-id="5a267-107">When you call <xref:System.Windows.WeakEventManager%602.AddHandler%2A>, the source must be of type `TEventSource` and the event handler you pass must have `TEventArgs` as its event data.</span></span> <span data-ttu-id="5a267-108">这确保了在编译时进行类型检查。</span><span class="sxs-lookup"><span data-stu-id="5a267-108">This ensures that type checking occurs at compile time.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public static void AddHandler (TEventSource source, string eventName, EventHandler&lt;TEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddHandler(!TEventSource source, string eventName, class System.EventHandler`1&lt;!TEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.WeakEventManager`2.AddHandler(`0,System.String,System.EventHandler{`1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddHandler (source As TEventSource, eventName As String, handler As EventHandler(Of TEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddHandler(TEventSource source, System::String ^ eventName, EventHandler&lt;TEventArgs&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddHandler : 'EventSource * string * EventHandler&lt;'EventArgs (requires 'EventArgs :&gt; EventArgs)&gt; -&gt; unit" Usage="System.Windows.WeakEventManager&lt;'EventSource, 'EventArgs (requires 'EventArgs :&gt; System.EventArgs)&gt;.AddHandler (source, eventName, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="TEventSource" />
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="handler" Type="System.EventHandler&lt;TEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="5a267-109">引发指定事件的源对象。</span><span class="sxs-lookup"><span data-stu-id="5a267-109">The source object that raises the specified event.</span></span></param>
        <param name="eventName"><span data-ttu-id="5a267-110">要订阅的事件的名称。</span><span class="sxs-lookup"><span data-stu-id="5a267-110">The name of the event to subscribe to.</span></span></param>
        <param name="handler"><span data-ttu-id="5a267-111">处理事件的委托。</span><span class="sxs-lookup"><span data-stu-id="5a267-111">The delegate that handles the event.</span></span></param>
        <summary><span data-ttu-id="5a267-112">添加指定的事件处理程序到指定的事件。</span><span class="sxs-lookup"><span data-stu-id="5a267-112">Adds the specified event handler to the specified event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewListenerList">
      <MemberSignature Language="C#" Value="protected override System.Windows.WeakEventManager.ListenerList NewListenerList ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.WeakEventManager/ListenerList NewListenerList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.WeakEventManager`2.NewListenerList" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function NewListenerList () As WeakEventManager.ListenerList" />
      <MemberSignature Language="F#" Value="override this.NewListenerList : unit -&gt; System.Windows.WeakEventManager.ListenerList" Usage="weakEventManager.NewListenerList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WeakEventManager+ListenerList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5a267-113">返回包含事件侦听器的新对象。</span><span class="sxs-lookup"><span data-stu-id="5a267-113">Returns a new object to contain listeners to an event.</span></span></summary>
        <returns><span data-ttu-id="5a267-114">包含事件侦听器的新对象。</span><span class="sxs-lookup"><span data-stu-id="5a267-114">A new object to contain listeners to an event.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveHandler (TEventSource source, string eventName, EventHandler&lt;TEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveHandler(!TEventSource source, string eventName, class System.EventHandler`1&lt;!TEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.WeakEventManager`2.RemoveHandler(`0,System.String,System.EventHandler{`1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveHandler (source As TEventSource, eventName As String, handler As EventHandler(Of TEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveHandler(TEventSource source, System::String ^ eventName, EventHandler&lt;TEventArgs&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveHandler : 'EventSource * string * EventHandler&lt;'EventArgs (requires 'EventArgs :&gt; EventArgs)&gt; -&gt; unit" Usage="System.Windows.WeakEventManager&lt;'EventSource, 'EventArgs (requires 'EventArgs :&gt; System.EventArgs)&gt;.RemoveHandler (source, eventName, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="TEventSource" />
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="handler" Type="System.EventHandler&lt;TEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="5a267-115">引发指定事件的源对象。</span><span class="sxs-lookup"><span data-stu-id="5a267-115">The source object that raises the specified event.</span></span></param>
        <param name="eventName"><span data-ttu-id="5a267-116">从中移除处理程序的事件的名称。</span><span class="sxs-lookup"><span data-stu-id="5a267-116">The name of the event to remove the handler from.</span></span></param>
        <param name="handler"><span data-ttu-id="5a267-117">移除的委托</span><span class="sxs-lookup"><span data-stu-id="5a267-117">The delegate to remove</span></span></param>
        <summary><span data-ttu-id="5a267-118">从指定事件中移除指定的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="5a267-118">Removes the specified event handler from the specified event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartListening">
      <MemberSignature Language="C#" Value="protected override void StartListening (object source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void StartListening(object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.WeakEventManager`2.StartListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub StartListening (source As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void StartListening(System::Object ^ source);" />
      <MemberSignature Language="F#" Value="override this.StartListening : obj -&gt; unit" Usage="weakEventManager.StartListening source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="5a267-119">引发事件到其中的对象。</span><span class="sxs-lookup"><span data-stu-id="5a267-119">The object to that raises the event.</span></span></param>
        <summary><span data-ttu-id="5a267-120">启动对指定对象侦听事件。</span><span class="sxs-lookup"><span data-stu-id="5a267-120">Starts listening for the event on the specified object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="protected override void StopListening (object source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void StopListening(object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.WeakEventManager`2.StopListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub StopListening (source As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void StopListening(System::Object ^ source);" />
      <MemberSignature Language="F#" Value="override this.StopListening : obj -&gt; unit" Usage="weakEventManager.StopListening source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="5a267-121">引发事件到其中的对象。</span><span class="sxs-lookup"><span data-stu-id="5a267-121">The object to that raises the event.</span></span></param>
        <summary><span data-ttu-id="5a267-122">停止对指定对象侦听事件。</span><span class="sxs-lookup"><span data-stu-id="5a267-122">Stops listening for the event on the specified object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
