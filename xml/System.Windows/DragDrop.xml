<Type Name="DragDrop" FullName="System.Windows.DragDrop">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4819d251b99c1e57d35d56a54f3896837b9991e6" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102061206" /></Metadata><TypeSignature Language="C#" Value="public static class DragDrop" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DragDrop extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DragDrop" />
  <TypeSignature Language="VB.NET" Value="Public Class DragDrop" />
  <TypeSignature Language="C++ CLI" Value="public ref class DragDrop abstract sealed" />
  <TypeSignature Language="F#" Value="type DragDrop = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供用于启动拖放操作的帮助器方法和字段（包括开始拖放操作的方法），并提供用于添加和移除拖放相关事件处理程序的工具。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 拖放通常指一种数据传输方法，该方法涉及使用鼠标 (或某个其他指针设备) 选择一个或多个对象，将这些对象拖到用户界面中的某个所需拖放目标 (UI) ，并将其删除。 拖放操作类似于复制 (或剪切用于将数据从一个对象或应用程序传输到另一个对象或应用程序的) 和粘贴操作。 拖放操作通常涉及两个参与方：拖动的数据源自的拖动源和接收已删除数据的拖放目标。 拖放操作所需的事件和方法是在 <xref:System.Windows.DragDrop> 类中定义的。 拖放事件是附加事件，可附加到任何 <xref:System.Windows.UIElement> 或 <xref:System.Windows.ContentElement> 。 拖动源和放置目标可能是相同应用程序或不同应用程序中的 UI 元素。 但是，拖放目标必须知道如何处理拖动源传递的数据。  
  
> [!NOTE]
>  <xref:System.Windows.UIElement>和 <xref:System.Windows.ContentElement> 类包含拖放事件的别名，以便在将这些类作为基类继承时，事件显示在类成员列表中。 将事件处理程序附加到其中一个类的拖放事件时，处理程序将附加到基础 <xref:System.Windows.DragDrop> 事件，并接收相同的事件数据实例。 有关示例，请参阅 <xref:System.Windows.UIElement.Drop?displayProperty=nameWithType>。  
  
 拖动源通过调用静态 <xref:System.Windows.DragDrop.DoDragDrop%2A> 方法和向其传递传输的数据来启动拖放操作。 元素通常在作为拖动源时处理以下事件：  
  
-   <xref:System.Windows.DragDrop.GiveFeedback>  
  
-   <xref:System.Windows.DragDrop.QueryContinueDrag>  
  
 当元素是拖放目标时，它通常会处理以下事件：  
  
-   <xref:System.Windows.DragDrop.DragEnter>  
  
-   <xref:System.Windows.DragDrop.DragLeave>  
  
-   <xref:System.Windows.DragDrop.DragOver>  
  
-   <xref:System.Windows.DragDrop.Drop>  
  
 有关详细信息和示例，请参阅 [拖放概述](/dotnet/framework/wpf/advanced/drag-and-drop-overview)。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DataObject" />
  </Docs>
  <Members>
    <Member MemberName="AddDragEnterHandler">
      <MemberSignature Language="C#" Value="public static void AddDragEnterHandler (System.Windows.DependencyObject element, System.Windows.DragEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddDragEnterHandler(class System.Windows.DependencyObject element, class System.Windows.DragEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DragDrop.AddDragEnterHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddDragEnterHandler (element As DependencyObject, handler As DragEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddDragEnterHandler(System::Windows::DependencyObject ^ element, System::Windows::DragEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddDragEnterHandler : System.Windows.DependencyObject * System.Windows.DragEventHandler -&gt; unit" Usage="System.Windows.DragDrop.AddDragEnterHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DragEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">要对其添加事件处理程序的依赖对象（<see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />）。</param>
        <param name="handler">一个委托，用于引用要添加的处理程序方法。</param>
        <summary>将 <see cref="E:System.Windows.DragDrop.DragEnter" /> 事件处理程序添加到指定的依赖对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将 <xref:System.Windows.DragDrop.DragEnter> 对象拖入元素的边界时发生该事件。  
  
 此方法为事件的冒泡版本添加处理程序 <xref:System.Windows.DragDrop.DragEnter> 。 若要为此事件的隧道版本添加处理程序，请参阅 <xref:System.Windows.DragDrop.AddPreviewDragEnterHandler%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.DragDrop.DragEnterEvent" />
        <altmember cref="M:System.Windows.DragDrop.RemoveDragEnterHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="AddDragLeaveHandler">
      <MemberSignature Language="C#" Value="public static void AddDragLeaveHandler (System.Windows.DependencyObject element, System.Windows.DragEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddDragLeaveHandler(class System.Windows.DependencyObject element, class System.Windows.DragEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DragDrop.AddDragLeaveHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddDragLeaveHandler (element As DependencyObject, handler As DragEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddDragLeaveHandler(System::Windows::DependencyObject ^ element, System::Windows::DragEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddDragLeaveHandler : System.Windows.DependencyObject * System.Windows.DragEventHandler -&gt; unit" Usage="System.Windows.DragDrop.AddDragLeaveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DragEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">要对其添加事件处理程序的依赖对象（<see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />）。</param>
        <param name="handler">一个委托，用于引用要添加的处理程序方法。</param>
        <summary>将 <see cref="E:System.Windows.DragDrop.DragLeave" /> 事件处理程序添加到指定的依赖对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将 <xref:System.Windows.DragDrop.DragLeave> 对象拖出元素的边界时发生该事件。  
  
 此方法为事件的冒泡版本添加处理程序 <xref:System.Windows.DragDrop.DragLeave> 。 若要为此事件的隧道版本添加处理程序，请参阅 <xref:System.Windows.DragDrop.AddPreviewDragLeaveHandler%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.DragDrop.DragLeaveEvent" />
        <altmember cref="M:System.Windows.DragDrop.RemoveDragLeaveHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="AddDragOverHandler">
      <MemberSignature Language="C#" Value="public static void AddDragOverHandler (System.Windows.DependencyObject element, System.Windows.DragEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddDragOverHandler(class System.Windows.DependencyObject element, class System.Windows.DragEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DragDrop.AddDragOverHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddDragOverHandler (element As DependencyObject, handler As DragEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddDragOverHandler(System::Windows::DependencyObject ^ element, System::Windows::DragEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddDragOverHandler : System.Windows.DependencyObject * System.Windows.DragEventHandler -&gt; unit" Usage="System.Windows.DragDrop.AddDragOverHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DragEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">要对其添加事件处理程序的依赖对象（<see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />）。</param>
        <param name="handler">一个委托，用于引用要添加的处理程序方法。</param>
        <summary>将 <see cref="E:System.Windows.DragDrop.DragOver" /> 事件处理程序添加到指定的依赖对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将 <xref:System.Windows.DragDrop.DragOver> 对象拖动到元素的边界上时发生此事件。  
  
 此方法为事件的冒泡版本添加处理程序 <xref:System.Windows.DragDrop.DragOver> 。 若要为此事件的隧道版本添加处理程序，请参阅 <xref:System.Windows.DragDrop.AddPreviewDragOverHandler%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.DragDrop.DragOverEvent" />
        <altmember cref="M:System.Windows.DragDrop.RemoveDragOverHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="AddDropHandler">
      <MemberSignature Language="C#" Value="public static void AddDropHandler (System.Windows.DependencyObject element, System.Windows.DragEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddDropHandler(class System.Windows.DependencyObject element, class System.Windows.DragEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DragDrop.AddDropHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddDropHandler (element As DependencyObject, handler As DragEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddDropHandler(System::Windows::DependencyObject ^ element, System::Windows::DragEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddDropHandler : System.Windows.DependencyObject * System.Windows.DragEventHandler -&gt; unit" Usage="System.Windows.DragDrop.AddDropHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DragEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">要对其添加事件处理程序的依赖对象（<see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />）。</param>
        <param name="handler">一个委托，用于引用要添加的处理程序方法。</param>
        <summary>将 <see cref="E:System.Windows.DragDrop.Drop" /> 事件处理程序添加到指定的依赖对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 <xref:System.Windows.DragDrop.Drop> 元素的边界内删除对象时发生该事件。  
  
 此方法为事件的冒泡版本添加处理程序 <xref:System.Windows.DragDrop.Drop> 。 若要为此事件的隧道版本添加处理程序，请参阅 <xref:System.Windows.DragDrop.AddPreviewDropHandler%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.DragDrop.DropEvent" />
        <altmember cref="M:System.Windows.DragDrop.RemoveDropHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="AddGiveFeedbackHandler">
      <MemberSignature Language="C#" Value="public static void AddGiveFeedbackHandler (System.Windows.DependencyObject element, System.Windows.GiveFeedbackEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddGiveFeedbackHandler(class System.Windows.DependencyObject element, class System.Windows.GiveFeedbackEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DragDrop.AddGiveFeedbackHandler(System.Windows.DependencyObject,System.Windows.GiveFeedbackEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddGiveFeedbackHandler (element As DependencyObject, handler As GiveFeedbackEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddGiveFeedbackHandler(System::Windows::DependencyObject ^ element, System::Windows::GiveFeedbackEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddGiveFeedbackHandler : System.Windows.DependencyObject * System.Windows.GiveFeedbackEventHandler -&gt; unit" Usage="System.Windows.DragDrop.AddGiveFeedbackHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.GiveFeedbackEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">要对其添加事件处理程序的依赖对象（<see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />）。</param>
        <param name="handler">一个委托，用于引用要添加的处理程序方法。</param>
        <summary>将 <see cref="E:System.Windows.DragDrop.GiveFeedback" /> 事件处理程序添加到指定的依赖对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 <xref:System.Windows.DragDrop.GiveFeedback> 拖动操作过程中发生该事件。  
  
 此方法为事件的冒泡版本添加处理程序 <xref:System.Windows.DragDrop.GiveFeedback> 。 若要为此事件的隧道版本添加处理程序，请参阅 <xref:System.Windows.DragDrop.AddPreviewGiveFeedbackHandler%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.DragDrop.GiveFeedbackEvent" />
        <altmember cref="M:System.Windows.DragDrop.RemoveGiveFeedbackHandler(System.Windows.DependencyObject,System.Windows.GiveFeedbackEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="AddPreviewDragEnterHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewDragEnterHandler (System.Windows.DependencyObject element, System.Windows.DragEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewDragEnterHandler(class System.Windows.DependencyObject element, class System.Windows.DragEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DragDrop.AddPreviewDragEnterHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewDragEnterHandler (element As DependencyObject, handler As DragEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewDragEnterHandler(System::Windows::DependencyObject ^ element, System::Windows::DragEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewDragEnterHandler : System.Windows.DependencyObject * System.Windows.DragEventHandler -&gt; unit" Usage="System.Windows.DragDrop.AddPreviewDragEnterHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DragEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">要对其添加事件处理程序的依赖对象（<see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />）。</param>
        <param name="handler">一个委托，用于引用要添加的处理程序方法。</param>
        <summary>将 <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> 事件处理程序添加到指定的依赖对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将 <xref:System.Windows.DragDrop.PreviewDragEnter> 对象拖入元素的边界时发生该事件。  
  
 此方法为事件的隧道版本添加处理程序 <xref:System.Windows.DragDrop.PreviewDragEnter> 。 若要为此事件的冒泡版本添加处理程序，请参见 <xref:System.Windows.DragDrop.AddDragEnterHandler%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.DragDrop.PreviewDragEnterEvent" />
        <altmember cref="M:System.Windows.DragDrop.RemovePreviewDragEnterHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="AddPreviewDragLeaveHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewDragLeaveHandler (System.Windows.DependencyObject element, System.Windows.DragEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewDragLeaveHandler(class System.Windows.DependencyObject element, class System.Windows.DragEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DragDrop.AddPreviewDragLeaveHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewDragLeaveHandler (element As DependencyObject, handler As DragEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewDragLeaveHandler(System::Windows::DependencyObject ^ element, System::Windows::DragEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewDragLeaveHandler : System.Windows.DependencyObject * System.Windows.DragEventHandler -&gt; unit" Usage="System.Windows.DragDrop.AddPreviewDragLeaveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DragEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">要对其添加事件处理程序的依赖对象（<see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />）。</param>
        <param name="handler">一个委托，用于引用要添加的处理程序方法。</param>
        <summary>将 <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> 事件处理程序添加到指定的依赖对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将 <xref:System.Windows.DragDrop.PreviewDragLeave> 对象拖出元素的边界时发生该事件。  
  
 此方法为事件的隧道版本添加处理程序 <xref:System.Windows.DragDrop.PreviewDragLeave> 。 若要为此事件的冒泡版本添加处理程序，请参见 <xref:System.Windows.DragDrop.AddDragLeaveHandler%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.DragDrop.PreviewDragLeaveEvent" />
        <altmember cref="M:System.Windows.DragDrop.RemovePreviewDragLeaveHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="AddPreviewDragOverHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewDragOverHandler (System.Windows.DependencyObject element, System.Windows.DragEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewDragOverHandler(class System.Windows.DependencyObject element, class System.Windows.DragEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DragDrop.AddPreviewDragOverHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewDragOverHandler (element As DependencyObject, handler As DragEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewDragOverHandler(System::Windows::DependencyObject ^ element, System::Windows::DragEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewDragOverHandler : System.Windows.DependencyObject * System.Windows.DragEventHandler -&gt; unit" Usage="System.Windows.DragDrop.AddPreviewDragOverHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DragEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">要对其添加事件处理程序的依赖对象（<see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />）。</param>
        <param name="handler">一个委托，用于引用要添加的处理程序方法。</param>
        <summary>将 <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> 事件处理程序添加到指定的依赖对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.DragDrop.PreviewDragOver>在元素的边界上拖动 n 个对象时发生此事件。  
  
 此方法为事件的隧道版本添加处理程序 <xref:System.Windows.DragDrop.PreviewDragOver> 。 若要为此事件的冒泡版本添加处理程序，请参见 <xref:System.Windows.DragDrop.AddDragOverHandler%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.DragDrop.PreviewDragOverEvent" />
        <altmember cref="M:System.Windows.DragDrop.RemovePreviewDragOverHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="AddPreviewDropHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewDropHandler (System.Windows.DependencyObject element, System.Windows.DragEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewDropHandler(class System.Windows.DependencyObject element, class System.Windows.DragEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DragDrop.AddPreviewDropHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewDropHandler (element As DependencyObject, handler As DragEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewDropHandler(System::Windows::DependencyObject ^ element, System::Windows::DragEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewDropHandler : System.Windows.DependencyObject * System.Windows.DragEventHandler -&gt; unit" Usage="System.Windows.DragDrop.AddPreviewDropHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DragEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">要对其添加事件处理程序的依赖对象（<see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />）。</param>
        <param name="handler">一个委托，用于引用要添加的处理程序方法。</param>
        <summary>将 <see cref="E:System.Windows.DragDrop.PreviewDrop" /> 事件处理程序添加到指定的依赖对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 <xref:System.Windows.DragDrop.PreviewDrop> 元素的边界内删除对象时发生该事件。  
  
 此方法为事件的隧道版本添加处理程序 <xref:System.Windows.DragDrop.PreviewDrop> 。 若要为此事件的冒泡版本添加处理程序，请参见 <xref:System.Windows.DragDrop.AddDropHandler%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.DragDrop.PreviewDropEvent" />
        <altmember cref="M:System.Windows.DragDrop.RemovePreviewDropHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="AddPreviewGiveFeedbackHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewGiveFeedbackHandler (System.Windows.DependencyObject element, System.Windows.GiveFeedbackEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewGiveFeedbackHandler(class System.Windows.DependencyObject element, class System.Windows.GiveFeedbackEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DragDrop.AddPreviewGiveFeedbackHandler(System.Windows.DependencyObject,System.Windows.GiveFeedbackEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewGiveFeedbackHandler (element As DependencyObject, handler As GiveFeedbackEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewGiveFeedbackHandler(System::Windows::DependencyObject ^ element, System::Windows::GiveFeedbackEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewGiveFeedbackHandler : System.Windows.DependencyObject * System.Windows.GiveFeedbackEventHandler -&gt; unit" Usage="System.Windows.DragDrop.AddPreviewGiveFeedbackHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.GiveFeedbackEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">要对其添加事件处理程序的依赖对象（<see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />）。</param>
        <param name="handler">一个委托，用于引用要添加的处理程序方法。</param>
        <summary>将 <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> 事件处理程序添加到指定的依赖对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 <xref:System.Windows.DragDrop.PreviewGiveFeedback> 拖动操作过程中发生该事件。  
  
 此方法为事件的隧道版本添加处理程序 <xref:System.Windows.DragDrop.PreviewGiveFeedback> 。 若要为此事件的冒泡版本添加处理程序，请参见 <xref:System.Windows.DragDrop.AddGiveFeedbackHandler%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.DragDrop.PreviewGiveFeedbackEvent" />
        <altmember cref="M:System.Windows.DragDrop.RemovePreviewGiveFeedbackHandler(System.Windows.DependencyObject,System.Windows.GiveFeedbackEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="AddPreviewQueryContinueDragHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewQueryContinueDragHandler (System.Windows.DependencyObject element, System.Windows.QueryContinueDragEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewQueryContinueDragHandler(class System.Windows.DependencyObject element, class System.Windows.QueryContinueDragEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DragDrop.AddPreviewQueryContinueDragHandler(System.Windows.DependencyObject,System.Windows.QueryContinueDragEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewQueryContinueDragHandler (element As DependencyObject, handler As QueryContinueDragEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewQueryContinueDragHandler(System::Windows::DependencyObject ^ element, System::Windows::QueryContinueDragEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewQueryContinueDragHandler : System.Windows.DependencyObject * System.Windows.QueryContinueDragEventHandler -&gt; unit" Usage="System.Windows.DragDrop.AddPreviewQueryContinueDragHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.QueryContinueDragEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">要对其添加事件处理程序的依赖对象（<see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />）。</param>
        <param name="handler">一个委托，用于引用要添加的处理程序方法。</param>
        <summary>将 <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> 事件处理程序添加到指定的依赖对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此 <xref:System.Windows.DragDrop.PreviewQueryContinueDrag> 事件在拖放操作过程中发生，并允许拖动源确定是否应取消拖放操作。  
  
 此方法为事件的隧道版本添加处理程序 <xref:System.Windows.DragDrop.PreviewQueryContinueDrag> 。 若要为此事件的冒泡版本添加处理程序，请参见 <xref:System.Windows.DragDrop.AddQueryContinueDragHandler%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.DragDrop.PreviewQueryContinueDragEvent" />
        <altmember cref="M:System.Windows.DragDrop.RemovePreviewQueryContinueDragHandler(System.Windows.DependencyObject,System.Windows.QueryContinueDragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="AddQueryContinueDragHandler">
      <MemberSignature Language="C#" Value="public static void AddQueryContinueDragHandler (System.Windows.DependencyObject element, System.Windows.QueryContinueDragEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddQueryContinueDragHandler(class System.Windows.DependencyObject element, class System.Windows.QueryContinueDragEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DragDrop.AddQueryContinueDragHandler(System.Windows.DependencyObject,System.Windows.QueryContinueDragEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddQueryContinueDragHandler (element As DependencyObject, handler As QueryContinueDragEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddQueryContinueDragHandler(System::Windows::DependencyObject ^ element, System::Windows::QueryContinueDragEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddQueryContinueDragHandler : System.Windows.DependencyObject * System.Windows.QueryContinueDragEventHandler -&gt; unit" Usage="System.Windows.DragDrop.AddQueryContinueDragHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.QueryContinueDragEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">要对其添加事件处理程序的依赖对象（<see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />）。</param>
        <param name="handler">一个委托，用于引用要添加的处理程序方法。</param>
        <summary>将 <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> 事件处理程序添加到指定的依赖对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此 <xref:System.Windows.DragDrop.QueryContinueDrag> 事件在拖放操作过程中发生，并允许拖动源确定是否应取消拖放操作。  
  
 此方法为事件的冒泡版本添加处理程序 <xref:System.Windows.DragDrop.QueryContinueDrag> 。 若要为此事件的隧道版本添加处理程序，请参阅 <xref:System.Windows.DragDrop.AddPreviewQueryContinueDragHandler%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.DragDrop.QueryContinueDragEvent" />
        <altmember cref="M:System.Windows.DragDrop.RemoveQueryContinueDragHandler(System.Windows.DependencyObject,System.Windows.QueryContinueDragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="DoDragDrop">
      <MemberSignature Language="C#" Value="public static System.Windows.DragDropEffects DoDragDrop (System.Windows.DependencyObject dragSource, object data, System.Windows.DragDropEffects allowedEffects);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.DragDropEffects DoDragDrop(class System.Windows.DependencyObject dragSource, object data, valuetype System.Windows.DragDropEffects allowedEffects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DragDrop.DoDragDrop(System.Windows.DependencyObject,System.Object,System.Windows.DragDropEffects)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DoDragDrop (dragSource As DependencyObject, data As Object, allowedEffects As DragDropEffects) As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DragDropEffects DoDragDrop(System::Windows::DependencyObject ^ dragSource, System::Object ^ data, System::Windows::DragDropEffects allowedEffects);" />
      <MemberSignature Language="F#" Value="static member DoDragDrop : System.Windows.DependencyObject * obj * System.Windows.DragDropEffects -&gt; System.Windows.DragDropEffects" Usage="System.Windows.DragDrop.DoDragDrop (dragSource, data, allowedEffects)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DragDropEffects</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dragSource" Type="System.Windows.DependencyObject" />
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="allowedEffects" Type="System.Windows.DragDropEffects" />
      </Parameters>
      <Docs>
        <param name="dragSource">对依赖项对象的引用（该对象是被拖动数据的源）。</param>
        <param name="data">包含被拖动数据的数据对象。</param>
        <param name="allowedEffects"><see cref="T:System.Windows.DragDropEffects" /> 值中的一个，指定拖放操作的允许效果。</param>
        <summary>启动拖放操作。</summary>
        <returns><see cref="T:System.Windows.DragDropEffects" /> 值中的一个，指定在拖放操作期间执行的最终效果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您的应用程序负责确定何时发生拖动，然后启动拖放操作。 通常，这是在 <xref:System.Windows.UIElement.MouseDown> <xref:System.Windows.UIElement.MouseMove> 要拖动的元素上发生和序列的事件时。 可以通过调用静态 <xref:System.Windows.DragDrop.DoDragDrop%2A> 方法并向其传递传输的数据来启动拖放操作。 如有必要，<xref:System.Windows.DragDrop.DoDragDrop%2A> 方法将使 <xref:System.Windows.DataObject> 中的数据自动换行。 为了更好地控制数据格式，可将 <xref:System.Windows.DataObject> 中的数据换行，然后再将其传递至 <xref:System.Windows.DragDrop.DoDragDrop%2A> 方法。  
  
 从方法返回的值 <xref:System.Windows.DragDrop.DoDragDrop%2A> 是 <xref:System.Windows.DragEventArgs.Effects%2A?displayProperty=nameWithType> 在拖放目标的 <xref:System.Windows.DragDrop.Drop> 事件处理程序中设置的属性的值。 如果返回值与对的调用中指定的值不匹配 `allowedEffects` ，则 <xref:System.Windows.DragDrop.DoDragDrop%2A> 不执行拖放操作。  
  
   
  
## Examples  
 下面的示例显示了如何从 <xref:System.Windows.Shapes.Ellipse> 元素的 <xref:System.Windows.UIElement.MouseMove> 事件处理程序中启动拖放操作，以将其作为拖动源。 传输的数据是椭圆的属性的字符串表示形式 <xref:System.Windows.Shapes.Shape.Fill%2A> 。 数据以字符串的形式传递给 <xref:System.Windows.DragDrop.DoDragDrop%2A> 方法，并自动包装在中 <xref:System.Windows.DataObject> 。  
  
 [!code-csharp[DragDropSnippets#DoDragDrop](~/samples/snippets/csharp/VS_Snippets_Wpf/dragdropsnippets/cs/mainwindow.xaml.cs#dodragdrop)]
 [!code-vb[DragDropSnippets#DoDragDrop](~/samples/snippets/visualbasic/VS_Snippets_Wpf/dragdropsnippets/vb/mainwindow.xaml.vb#dodragdrop)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dragSource" /> 或 <paramref name="data" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="DragEnter">
      <MemberSignature Language="C#" Value="see AddDragEnterHandler, and RemoveDragEnterHandler" />
      <MemberSignature Language="ILAsm" Value="see AddDragEnterHandler, and RemoveDragEnterHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.DragDrop.DragEnter" />
      <MemberSignature Language="VB.NET" Value="see AddDragEnterHandler, and RemoveDragEnterHandler" />
      <MemberSignature Language="F#" Value="see AddDragEnterHandler, and RemoveDragEnterHandler" Usage="see AddDragEnterHandler, and RemoveDragEnterHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>当对象被拖放到作为放置目标的元素的边界内时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 每次将对象拖到作为拖放目标的元素的边界中时，将引发此事件。 如果元素的属性为，则不引发此事件 <xref:System.Windows.UIElement.AllowDrop%2A> `false` 。  
  
 对于放置目标，处理此事件是可选的，对于所有拖放方案，此事件不是必需的。 通常，如果适用于你的应用程序，可处理此事件，以便提供拖放操作效果预览。 请勿设置 <xref:System.Windows.DragEventArgs.Effects%2A?displayProperty=nameWithType> 事件中的 <xref:System.Windows.DragDrop.DragEnter> 属性，因为在 <xref:System.Windows.DragDrop.DragOver> 事件中该属性将被覆盖。  
  
## <a name="routed-event-information"></a>路由事件信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.DragDrop.DragEnterEvent>|  
|路由策略|冒泡|  
|委托|<xref:System.Windows.DragEventHandler>|  
  
 对应的隧道事件为 <xref:System.Windows.DragDrop.PreviewDragEnter> 。  
  
   
  
## Examples  
 下面的示例演示 <xref:System.Windows.DragDrop.DragEnter> 元素的 <xref:System.Windows.Shapes.Ellipse> 事件处理程序。 此代码通过保存当前的 <xref:System.Windows.Shapes.Shape.Fill%2A> 画笔预览拖放操作的效果。 然后，它会检查是否将 <xref:System.Windows.DataObject> 拖动到椭圆上，是否包含可转换为的字符串数据 <xref:System.Windows.Media.Brush> 。 如果是，将 <xref:System.Windows.Media.Brush> 应用于椭圆。 在 <xref:System.Windows.DragDrop.DragLeave> 事件处理程序中还原更改。 如果数据无法转换为 <xref:System.Windows.Media.Brush>，则不执行任何操作。  
  
 [!code-csharp[DragDropSnippets#DragEnter](~/samples/snippets/csharp/VS_Snippets_Wpf/dragdropsnippets/cs/mainwindow.xaml.cs#dragenter)]
 [!code-vb[DragDropSnippets#DragEnter](~/samples/snippets/visualbasic/VS_Snippets_Wpf/dragdropsnippets/vb/mainwindow.xaml.vb#dragenter)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragEnter" />
        <altmember cref="E:System.Windows.ContentElement.DragEnter" />
        <altmember cref="M:System.Windows.DragDrop.AddDragEnterHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
        <altmember cref="M:System.Windows.DragDrop.RemoveDragEnterHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="DragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DragDrop.DragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.DragDrop.DragEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="E:System.Windows.DragDrop.DragEnter" /> 附加事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将 <xref:System.Windows.DragDrop.DragEnter> 对象拖入元素的边界时发生该事件。  
  
 此字段标识事件的冒泡版本 <xref:System.Windows.DragDrop.DragEnter> 。 有关此事件的隧道版本的标识符，请参见 <xref:System.Windows.DragDrop.PreviewDragEnterEvent> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.DragDrop.DragEnter" />
        <altmember cref="M:System.Windows.DragDrop.AddDragEnterHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
        <altmember cref="M:System.Windows.DragDrop.RemoveDragEnterHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="DragLeave">
      <MemberSignature Language="C#" Value="see AddDragLeaveHandler, and RemoveDragLeaveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddDragLeaveHandler, and RemoveDragLeaveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.DragDrop.DragLeave" />
      <MemberSignature Language="VB.NET" Value="see AddDragLeaveHandler, and RemoveDragLeaveHandler" />
      <MemberSignature Language="F#" Value="see AddDragLeaveHandler, and RemoveDragLeaveHandler" Usage="see AddDragLeaveHandler, and RemoveDragLeaveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在将对象拖出用作拖放目标的元素边界，且未放置时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此事件在每次将对象拖出作为放置目标的元素边界时引发一次，而不会被删除。 如果元素的属性为，则不引发此事件 <xref:System.Windows.UIElement.AllowDrop%2A> `false` 。  
  
 你通常会处理此事件，以撤消你在事件处理程序中所做的任何更改 <xref:System.Windows.DragDrop.DragEnter> 。  
  
## <a name="routed-event-information"></a>路由事件信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.DragDrop.DragLeaveEvent>|  
|路由策略|冒泡|  
|委托|<xref:System.Windows.DragEventHandler>|  
  
 对应的隧道事件为 <xref:System.Windows.DragDrop.PreviewDragLeave> 。  
  
   
  
## Examples  
 下面的示例演示 <xref:System.Windows.DragDrop.DragLeave> 元素的 <xref:System.Windows.Shapes.Ellipse> 事件处理程序。 此代码通过将保存的 <xref:System.Windows.Media.Brush> 应用到椭圆来撤销 <xref:System.Windows.DragDrop.DragEnter> 事件处理程序中执行的预览。  
  
 [!code-csharp[DragDropSnippets#DragLeave](~/samples/snippets/csharp/VS_Snippets_Wpf/dragdropsnippets/cs/mainwindow.xaml.cs#dragleave)]
 [!code-vb[DragDropSnippets#DragLeave](~/samples/snippets/visualbasic/VS_Snippets_Wpf/dragdropsnippets/vb/mainwindow.xaml.vb#dragleave)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragLeave" />
        <altmember cref="E:System.Windows.ContentElement.DragLeave" />
        <altmember cref="M:System.Windows.DragDrop.AddDragLeaveHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
        <altmember cref="M:System.Windows.DragDrop.RemoveDragLeaveHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="DragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DragDrop.DragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.DragDrop.DragLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="E:System.Windows.DragDrop.DragLeave" /> 附加事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将 <xref:System.Windows.DragDrop.DragLeave> 对象拖出元素的边界时发生该事件。  
  
 此字段标识事件的冒泡版本 <xref:System.Windows.DragDrop.DragLeave> 。 有关此事件的隧道版本的标识符，请参见 <xref:System.Windows.DragDrop.PreviewDragLeaveEvent> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.DragDrop.DragLeave" />
        <altmember cref="M:System.Windows.DragDrop.AddDragLeaveHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
        <altmember cref="M:System.Windows.DragDrop.RemoveDragLeaveHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="DragOver">
      <MemberSignature Language="C#" Value="see AddDragOverHandler, and RemoveDragOverHandler" />
      <MemberSignature Language="ILAsm" Value="see AddDragOverHandler, and RemoveDragOverHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.DragDrop.DragOver" />
      <MemberSignature Language="VB.NET" Value="see AddDragOverHandler, and RemoveDragOverHandler" />
      <MemberSignature Language="F#" Value="see AddDragOverHandler, and RemoveDragOverHandler" Usage="see AddDragOverHandler, and RemoveDragOverHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在将对象拖入作为放置目标的元素边界时持续发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当拖动的对象在充当拖放目标的元素边界内时，将连续引发此事件。 如果元素的属性为，则不引发此事件 <xref:System.Windows.UIElement.AllowDrop%2A> `false` 。  
  
 <xref:System.Windows.DragDrop.DragOver>事件与 <xref:System.Windows.DragDrop.GiveFeedback> 拖动源上的事件配对。 在 <xref:System.Windows.DragDrop.DragOver> 事件处理程序中，您通常会检查传输的数据是否是拖放目标可以处理的格式。 您还可以检查是否已按下任何修改键，这通常指示用户是否打算进行移动或复制操作。 执行这些检查后，设置 <xref:System.Windows.DragEventArgs.Effects%2A?displayProperty=nameWithType> 属性以通知拖动源放置数据将产生的效果。 拖动源将在事件参数的属性中接收此信息 <xref:System.Windows.GiveFeedbackEventArgs.Effects%2A> <xref:System.Windows.DragDrop.GiveFeedback> ，并可以设置相应的光标以向用户提供反馈。  
  
## <a name="routed-event-information"></a>路由事件信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.DragDrop.DragOverEvent>|  
|路由策略|冒泡|  
|委托|<xref:System.Windows.DragEventHandler>|  
  
 对应的隧道事件为 <xref:System.Windows.DragDrop.PreviewDragOver> 。  
  
   
  
## Examples  
 下面的示例演示 <xref:System.Windows.DragDrop.DragOver> 元素的 <xref:System.Windows.Shapes.Ellipse> 事件处理程序。 此代码检查是否已将 <xref:System.Windows.DataObject> 拖动到包含可以转换为 <xref:System.Windows.Media.Brush> 的字符串数据的椭圆上方。 如果是，它会将 <xref:System.Windows.DragEventArgs.Effects%2A?displayProperty=nameWithType> 属性设置为 <xref:System.Windows.DragDropEffects.Copy>。 这将向拖动源指示可以将数据复制到椭圆。 如果数据无法转换为 <xref:System.Windows.Media.Brush>，则将 <xref:System.Windows.DragEventArgs.Effects%2A?displayProperty=nameWithType> 属性设置为 <xref:System.Windows.DragDropEffects.None>。 这将向拖动源指示椭圆不是数据的有效拖放目标。  
  
 [!code-csharp[DragDropSnippets#DragOver](~/samples/snippets/csharp/VS_Snippets_Wpf/dragdropsnippets/cs/mainwindow.xaml.cs#dragover)]
 [!code-vb[DragDropSnippets#DragOver](~/samples/snippets/visualbasic/VS_Snippets_Wpf/dragdropsnippets/vb/mainwindow.xaml.vb#dragover)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragOver" />
        <altmember cref="E:System.Windows.ContentElement.DragOver" />
        <altmember cref="M:System.Windows.DragDrop.AddDragOverHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
        <altmember cref="M:System.Windows.DragDrop.RemoveDragOverHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="DragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DragDrop.DragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragOverEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragOverEvent : System.Windows.RoutedEvent" Usage="System.Windows.DragDrop.DragOverEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="E:System.Windows.DragDrop.DragOver" /> 附加事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将 <xref:System.Windows.DragDrop.DragOver> 对象拖动到元素的边界上时发生此事件。  
  
 此字段标识事件的冒泡版本 <xref:System.Windows.DragDrop.DragOver> 。 有关此事件的隧道版本的标识符，请参见 <xref:System.Windows.DragDrop.PreviewDragOverEvent> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.DragDrop.DragOver" />
        <altmember cref="M:System.Windows.DragDrop.AddDragOverHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
        <altmember cref="M:System.Windows.DragDrop.RemoveDragOverHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="Drop">
      <MemberSignature Language="C#" Value="see AddDropHandler, and RemoveDropHandler" />
      <MemberSignature Language="ILAsm" Value="see AddDropHandler, and RemoveDropHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.DragDrop.Drop" />
      <MemberSignature Language="VB.NET" Value="see AddDropHandler, and RemoveDropHandler" />
      <MemberSignature Language="F#" Value="see AddDropHandler, and RemoveDropHandler" Usage="see AddDropHandler, and RemoveDropHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在将对象拖入用作放置目标的元素边界时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.DragDrop.Drop>当对象被置于作为放置目标的元素的边界内时，会引发一次事件。 如果元素的属性为，则不引发此事件 <xref:System.Windows.UIElement.AllowDrop%2A> `false` 。 此事件结束拖放操作。  
  
 在 <xref:System.Windows.DragDrop.Drop> 事件处理程序中，从提取已传输的数据， <xref:System.Windows.DataObject> 并对应用程序所需的任何数据执行任何处理。 若要通知拖动源的效果（例如复制或移动），请 <xref:System.Windows.DragEventArgs.Effects%2A?displayProperty=nameWithType> 在 <xref:System.Windows.DragDrop.Drop> 事件处理程序中设置属性。 此属性的值是 <xref:System.Windows.DragDrop.DoDragDrop%2A> 启动拖放操作的方法的返回值。 如果返回的值与对的调用中指定的值不匹配 `allowedEffects` <xref:System.Windows.DragDrop.DoDragDrop%2A> ，则不会执行拖放操作。 属性的初始值与 <xref:System.Windows.DragEventArgs.Effects%2A?displayProperty=nameWithType> 调用方法时指定的值相同 `allowedEffects` <xref:System.Windows.DragDrop.DoDragDrop%2A> 。 如果未设置该 <xref:System.Windows.DragEventArgs.Effects%2A?displayProperty=nameWithType> 属性，则会返回此初始值，并假定发生了这一情况 `allowedEffects` 。  
  
## <a name="routed-event-information"></a>路由事件信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.DragDrop.DropEvent>|  
|路由策略|冒泡|  
|委托|<xref:System.Windows.DragEventHandler>|  
  
 对应的隧道事件为 <xref:System.Windows.DragDrop.PreviewDrop> 。  
  
   
  
## Examples  
 下面的示例演示 <xref:System.Windows.DragDrop.Drop> 元素的 <xref:System.Windows.Shapes.Ellipse> 事件处理程序。 此代码应用拖放操作的效果。 它会检查是否将 <xref:System.Windows.DataObject> 拖动到包含可以转换为 <xref:System.Windows.Media.Brush> 的字符串数据的椭圆上方。 如果是，将 <xref:System.Windows.Media.Brush> 应用于椭圆。 如果数据无法转换为 <xref:System.Windows.Media.Brush>，则不执行任何操作。  
  
 [!code-csharp[DragDropSnippets#Drop](~/samples/snippets/csharp/VS_Snippets_Wpf/dragdropsnippets/cs/mainwindow.xaml.cs#drop)]
 [!code-vb[DragDropSnippets#Drop](~/samples/snippets/visualbasic/VS_Snippets_Wpf/dragdropsnippets/vb/mainwindow.xaml.vb#drop)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragOver" />
        <altmember cref="E:System.Windows.ContentElement.Drop" />
        <altmember cref="M:System.Windows.DragDrop.AddDropHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
        <altmember cref="M:System.Windows.DragDrop.RemoveDropHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="DropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DragDrop.DropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DropEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DropEvent : System.Windows.RoutedEvent" Usage="System.Windows.DragDrop.DropEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="E:System.Windows.DragDrop.Drop" /> 附加事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 <xref:System.Windows.DragDrop.Drop> 元素的边界内删除对象时发生该事件。  
  
 此字段标识事件的冒泡版本 <xref:System.Windows.DragDrop.Drop> 。 有关此事件的隧道版本的标识符，请参见 <xref:System.Windows.DragDrop.PreviewDropEvent> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.DragDrop.Drop" />
        <altmember cref="M:System.Windows.DragDrop.AddDropHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
        <altmember cref="M:System.Windows.DragDrop.RemoveDropHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="GiveFeedback">
      <MemberSignature Language="C#" Value="see AddGiveFeedbackHandler, and RemoveGiveFeedbackHandler" />
      <MemberSignature Language="ILAsm" Value="see AddGiveFeedbackHandler, and RemoveGiveFeedbackHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.DragDrop.GiveFeedback" />
      <MemberSignature Language="VB.NET" Value="see AddGiveFeedbackHandler, and RemoveGiveFeedbackHandler" />
      <MemberSignature Language="F#" Value="see AddGiveFeedbackHandler, and RemoveGiveFeedbackHandler" Usage="see AddGiveFeedbackHandler, and RemoveGiveFeedbackHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在拖放操作期间持续发生，使拖动源能够向用户提供反馈。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对拖动源进行拖动时，持续引发 <xref:System.Windows.DragDrop.GiveFeedback> 事件。 此事件与 <xref:System.Windows.DragDrop.DragOver> 放置目标上的事件配对。 此事件的默认处理程序会检查拖动源是否在有效放置目标之上。 如果是，它会检查拖放目标的允许的效果。 然后向最终用户提供有关允许的放置效果的反馈。 通常通过将鼠标光标更改为非放置、复制或移动光标实现此操作。 仅在需要使用自定义光标向用户提供反馈时处理此事件。 如果处理此事件，则必须将其标记为已处理，以防止默认行为重写处理程序。  
  
> [!CAUTION]
>  此事件在拖放操作期间持续引发。 因此，应避免事件处理程序中的资源密集型任务。 例如，每次引发 <xref:System.Windows.DragDrop.GiveFeedback> 事件时，请使用缓存的光标，而不是创建新光标。  
  
## <a name="routed-event-information"></a>路由事件信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.DragDrop.GiveFeedbackEvent>|  
|路由策略|冒泡|  
|委托|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
 对应的隧道事件为 <xref:System.Windows.DragDrop.PreviewGiveFeedback> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GiveFeedback" />
        <altmember cref="E:System.Windows.ContentElement.GiveFeedback" />
        <altmember cref="M:System.Windows.DragDrop.AddGiveFeedbackHandler(System.Windows.DependencyObject,System.Windows.GiveFeedbackEventHandler)" />
        <altmember cref="M:System.Windows.DragDrop.RemoveGiveFeedbackHandler(System.Windows.DependencyObject,System.Windows.GiveFeedbackEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="GiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DragDrop.GiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GiveFeedbackEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GiveFeedbackEvent : System.Windows.RoutedEvent" Usage="System.Windows.DragDrop.GiveFeedbackEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="E:System.Windows.DragDrop.GiveFeedback" /> 附加事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 <xref:System.Windows.DragDrop.GiveFeedback> 拖动操作过程中发生该事件。  
  
 此字段标识事件的冒泡版本 <xref:System.Windows.DragDrop.GiveFeedback> 。 有关此事件的隧道版本的标识符，请参见 <xref:System.Windows.DragDrop.PreviewGiveFeedbackEvent> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.DragDrop.GiveFeedback" />
        <altmember cref="M:System.Windows.DragDrop.AddGiveFeedbackHandler(System.Windows.DependencyObject,System.Windows.GiveFeedbackEventHandler)" />
        <altmember cref="M:System.Windows.DragDrop.RemoveGiveFeedbackHandler(System.Windows.DependencyObject,System.Windows.GiveFeedbackEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnter">
      <MemberSignature Language="C#" Value="see AddPreviewDragEnterHandler, and RemovePreviewDragEnterHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewDragEnterHandler, and RemovePreviewDragEnterHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.DragDrop.PreviewDragEnter" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewDragEnterHandler, and RemovePreviewDragEnterHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewDragEnterHandler, and RemovePreviewDragEnterHandler" Usage="see AddPreviewDragEnterHandler, and RemovePreviewDragEnterHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>当对象被拖放到作为放置目标的元素的边界内时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 每次将对象拖到作为拖放目标的元素的边界中时，将引发此事件。 如果元素的属性为，则不引发此事件 <xref:System.Windows.UIElement.AllowDrop%2A> `false` 。  
  
 有关详细信息，请参阅 <xref:System.Windows.DragDrop.DragEnter> 事件。  
  
## <a name="routed-event-information"></a>路由事件信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.DragDrop.PreviewDragEnterEvent>|  
|路由策略|隧道|  
|委托|<xref:System.Windows.DragEventHandler>|  
  
 对应的冒泡事件为 <xref:System.Windows.DragDrop.DragEnter> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewDragEnter" />
        <altmember cref="E:System.Windows.ContentElement.PreviewDragEnter" />
        <altmember cref="M:System.Windows.DragDrop.AddPreviewDragEnterHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
        <altmember cref="M:System.Windows.DragDrop.RemovePreviewDragEnterHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DragDrop.PreviewDragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.DragDrop.PreviewDragEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> 附加事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将 <xref:System.Windows.DragDrop.PreviewDragEnter> 对象拖入元素的边界时发生该事件。  
  
 此字段标识事件的隧道版本 <xref:System.Windows.DragDrop.PreviewDragEnter> 。 有关此事件的冒泡版本的标识符，请参见 <xref:System.Windows.DragDrop.DragEnterEvent> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.DragDrop.PreviewDragEnter" />
        <altmember cref="M:System.Windows.DragDrop.AddPreviewDragEnterHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
        <altmember cref="M:System.Windows.DragDrop.RemovePreviewDragEnterHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeave">
      <MemberSignature Language="C#" Value="see AddPreviewDragLeaveHandler, and RemovePreviewDragLeaveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewDragLeaveHandler, and RemovePreviewDragLeaveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.DragDrop.PreviewDragLeave" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewDragLeaveHandler, and RemovePreviewDragLeaveHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewDragLeaveHandler, and RemovePreviewDragLeaveHandler" Usage="see AddPreviewDragLeaveHandler, and RemovePreviewDragLeaveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在将对象拖出用作拖放目标的元素边界，且未放置时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此事件在每次将对象拖出作为放置目标的元素边界时引发一次，而不会被删除。 如果元素的属性为，则不引发此事件 <xref:System.Windows.UIElement.AllowDrop%2A> `false` 。  
  
 有关详细信息，请参阅 <xref:System.Windows.DragDrop.DragLeave> 事件。  
  
## <a name="routed-event-information"></a>路由事件信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.DragDrop.PreviewDragLeaveEvent>|  
|路由策略|隧道|  
|委托|<xref:System.Windows.DragEventHandler>|  
  
 对应的冒泡事件为 <xref:System.Windows.DragDrop.DragLeave> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewDragLeave" />
        <altmember cref="E:System.Windows.ContentElement.PreviewDragLeave" />
        <altmember cref="M:System.Windows.DragDrop.AddPreviewDragLeaveHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
        <altmember cref="M:System.Windows.DragDrop.RemovePreviewDragLeaveHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DragDrop.PreviewDragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.DragDrop.PreviewDragLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> 附加事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将 <xref:System.Windows.DragDrop.PreviewDragLeave> 对象拖出元素的边界时发生该事件。  
  
 此字段标识事件的隧道版本 <xref:System.Windows.DragDrop.PreviewDragLeave> 。 有关此事件的冒泡版本的标识符，请参见 <xref:System.Windows.DragDrop.DragLeaveEvent> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.DragDrop.PreviewDragLeave" />
        <altmember cref="M:System.Windows.DragDrop.AddPreviewDragLeaveHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
        <altmember cref="M:System.Windows.DragDrop.RemovePreviewDragLeaveHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOver">
      <MemberSignature Language="C#" Value="see AddPreviewDragOverHandler, and RemovePreviewDragOverHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewDragOverHandler, and RemovePreviewDragOverHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.DragDrop.PreviewDragOver" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewDragOverHandler, and RemovePreviewDragOverHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewDragOverHandler, and RemovePreviewDragOverHandler" Usage="see AddPreviewDragOverHandler, and RemovePreviewDragOverHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在将对象拖入作为放置目标的元素边界时持续发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当拖动的对象在充当拖放目标的元素边界内时，将连续引发此事件。 如果元素的属性为，则不引发此事件 <xref:System.Windows.UIElement.AllowDrop%2A> `false` 。  
  
 有关详细信息，请参阅 <xref:System.Windows.DragDrop.DragOver> 事件。  
  
## <a name="routed-event-information"></a>路由事件信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.DragDrop.PreviewDragOverEvent>|  
|路由策略|隧道|  
|委托|<xref:System.Windows.DragEventHandler>|  
  
 对应的冒泡事件为 <xref:System.Windows.DragDrop.DragOver> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewDragOver" />
        <altmember cref="E:System.Windows.ContentElement.PreviewDragOver" />
        <altmember cref="M:System.Windows.DragDrop.AddPreviewDragOverHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
        <altmember cref="M:System.Windows.DragDrop.RemovePreviewDragOverHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DragDrop.PreviewDragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragOverEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragOverEvent : System.Windows.RoutedEvent" Usage="System.Windows.DragDrop.PreviewDragOverEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> 附加事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.DragDrop.PreviewDragOver>在元素的边界上拖动 n 个对象时发生此事件。  
  
 此字段标识事件的隧道版本 <xref:System.Windows.DragDrop.PreviewDragOver> 。 有关此事件的冒泡版本的标识符，请参见 <xref:System.Windows.DragDrop.DragOverEvent> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.DragDrop.PreviewDragOver" />
        <altmember cref="M:System.Windows.DragDrop.AddPreviewDragOverHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
        <altmember cref="M:System.Windows.DragDrop.RemovePreviewDragOverHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewDrop">
      <MemberSignature Language="C#" Value="see AddPreviewDropHandler, and RemovePreviewDropHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewDropHandler, and RemovePreviewDropHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.DragDrop.PreviewDrop" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewDropHandler, and RemovePreviewDropHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewDropHandler, and RemovePreviewDropHandler" Usage="see AddPreviewDropHandler, and RemovePreviewDropHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在将对象拖入用作放置目标的元素边界时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当对象被置于作为放置目标的元素的边界内时，将引发此事件一次。 如果元素的属性为，则不引发此事件 <xref:System.Windows.UIElement.AllowDrop%2A> `false` 。 此事件结束拖放操作。  
  
 有关详细信息，请参阅 <xref:System.Windows.DragDrop.Drop> 事件。  
  
## <a name="routed-event-information"></a>路由事件信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.DragDrop.PreviewDropEvent>|  
|路由策略|隧道|  
|委托|<xref:System.Windows.DragEventHandler>|  
  
 对应的冒泡事件为 <xref:System.Windows.DragDrop.Drop> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewDrop" />
        <altmember cref="E:System.Windows.ContentElement.PreviewDrop" />
        <altmember cref="M:System.Windows.DragDrop.AddPreviewDropHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
        <altmember cref="M:System.Windows.DragDrop.RemovePreviewDropHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewDropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DragDrop.PreviewDropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDropEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDropEvent : System.Windows.RoutedEvent" Usage="System.Windows.DragDrop.PreviewDropEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="E:System.Windows.DragDrop.PreviewDrop" /> 附加事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 <xref:System.Windows.DragDrop.PreviewDrop> 元素的边界内删除对象时发生该事件。  
  
 此字段标识事件的隧道版本 <xref:System.Windows.DragDrop.PreviewDrop> 。 有关此事件的冒泡版本的标识符，请参见 <xref:System.Windows.DragDrop.DropEvent> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.DragDrop.PreviewDrop" />
        <altmember cref="M:System.Windows.DragDrop.AddPreviewDropHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
        <altmember cref="M:System.Windows.DragDrop.RemovePreviewDropHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedback">
      <MemberSignature Language="C#" Value="see AddPreviewGiveFeedbackHandler, and RemovePreviewGiveFeedbackHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewGiveFeedbackHandler, and RemovePreviewGiveFeedbackHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.DragDrop.PreviewGiveFeedback" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewGiveFeedbackHandler, and RemovePreviewGiveFeedbackHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewGiveFeedbackHandler, and RemovePreviewGiveFeedbackHandler" Usage="see AddPreviewGiveFeedbackHandler, and RemovePreviewGiveFeedbackHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在拖放操作期间持续发生，使拖动源能够向用户提供反馈。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 拖动拖动源时，将连续引发此事件。 有关详细信息，请参阅 <xref:System.Windows.DragDrop.GiveFeedback> 事件。  
  
## <a name="routed-event-information"></a>路由事件信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.DragDrop.PreviewGiveFeedbackEvent>|  
|路由策略|隧道|  
|委托|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
 对应的冒泡事件为 <xref:System.Windows.DragDrop.GiveFeedback> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewGiveFeedback" />
        <altmember cref="E:System.Windows.ContentElement.PreviewGiveFeedback" />
        <altmember cref="M:System.Windows.DragDrop.AddPreviewGiveFeedbackHandler(System.Windows.DependencyObject,System.Windows.GiveFeedbackEventHandler)" />
        <altmember cref="M:System.Windows.DragDrop.RemovePreviewGiveFeedbackHandler(System.Windows.DependencyObject,System.Windows.GiveFeedbackEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DragDrop.PreviewGiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGiveFeedbackEvent : System.Windows.RoutedEvent" Usage="System.Windows.DragDrop.PreviewGiveFeedbackEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> 附加事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 <xref:System.Windows.DragDrop.PreviewGiveFeedback> 拖动操作过程中发生该事件。  
  
 此字段标识事件的隧道版本 <xref:System.Windows.DragDrop.PreviewGiveFeedback> 。 有关此事件的冒泡版本的标识符，请参见 <xref:System.Windows.DragDrop.GiveFeedbackEvent> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.DragDrop.PreviewGiveFeedback" />
        <altmember cref="M:System.Windows.DragDrop.AddPreviewGiveFeedbackHandler(System.Windows.DependencyObject,System.Windows.GiveFeedbackEventHandler)" />
        <altmember cref="M:System.Windows.DragDrop.RemovePreviewGiveFeedbackHandler(System.Windows.DependencyObject,System.Windows.GiveFeedbackEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="see AddPreviewQueryContinueDragHandler, and RemovePreviewQueryContinueDragHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewQueryContinueDragHandler, and RemovePreviewQueryContinueDragHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.DragDrop.PreviewQueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewQueryContinueDragHandler, and RemovePreviewQueryContinueDragHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewQueryContinueDragHandler, and RemovePreviewQueryContinueDragHandler" Usage="see AddPreviewQueryContinueDragHandler, and RemovePreviewQueryContinueDragHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在进行拖放操作时不断出现，并启用放置源以结束拖放操作（取决于键/按钮状态）。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 拖动拖动源时，将连续引发此事件。 有关详细信息，请参阅 <xref:System.Windows.DragDrop.QueryContinueDrag> 事件。  
  
## <a name="routed-event-information"></a>路由事件信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.DragDrop.PreviewQueryContinueDragEvent>|  
|路由策略|隧道|  
|委托|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
 对应的冒泡事件为 <xref:System.Windows.DragDrop.QueryContinueDrag> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewQueryContinueDrag" />
        <altmember cref="E:System.Windows.ContentElement.PreviewQueryContinueDrag" />
        <altmember cref="M:System.Windows.DragDrop.AddPreviewQueryContinueDragHandler(System.Windows.DependencyObject,System.Windows.QueryContinueDragEventHandler)" />
        <altmember cref="M:System.Windows.DragDrop.RemovePreviewQueryContinueDragHandler(System.Windows.DependencyObject,System.Windows.QueryContinueDragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewQueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DragDrop.PreviewQueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewQueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewQueryContinueDragEvent : System.Windows.RoutedEvent" Usage="System.Windows.DragDrop.PreviewQueryContinueDragEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> 附加事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此 <xref:System.Windows.DragDrop.PreviewQueryContinueDrag> 事件在拖放操作过程中发生，并允许拖动源确定是否应取消拖放操作。  
  
 此字段标识事件的隧道版本 <xref:System.Windows.DragDrop.PreviewQueryContinueDrag> 。 有关此事件的冒泡版本的标识符，请参见 <xref:System.Windows.DragDrop.QueryContinueDragEvent> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" />
        <altmember cref="M:System.Windows.DragDrop.AddPreviewQueryContinueDragHandler(System.Windows.DependencyObject,System.Windows.QueryContinueDragEventHandler)" />
        <altmember cref="M:System.Windows.DragDrop.RemovePreviewQueryContinueDragHandler(System.Windows.DependencyObject,System.Windows.QueryContinueDragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDrag">
      <MemberSignature Language="C#" Value="see AddQueryContinueDragHandler, and RemoveQueryContinueDragHandler" />
      <MemberSignature Language="ILAsm" Value="see AddQueryContinueDragHandler, and RemoveQueryContinueDragHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.DragDrop.QueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="see AddQueryContinueDragHandler, and RemoveQueryContinueDragHandler" />
      <MemberSignature Language="F#" Value="see AddQueryContinueDragHandler, and RemoveQueryContinueDragHandler" Usage="see AddQueryContinueDragHandler, and RemoveQueryContinueDragHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在进行拖放操作时不断出现，并启用放置源以结束拖放操作（取决于键/按钮状态）。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对拖动源进行拖动时，持续引发 <xref:System.Windows.DragDrop.QueryContinueDrag> 事件。 你可以根据 ESC、SHIFT、CTRL 和 ALT 键以及鼠标按钮的状态处理此事件，以确定结束拖放操作的操作。 此事件的默认处理程序在按下 ESC 键后取消拖放操作，并且在释放鼠标按钮后放置数据。 如果你处理此事件以更改默认行为，请确保在处理程序中提供等效的机制来结束拖放操作。 否则，该 <xref:System.Windows.DragDrop.DoDragDrop%2A> 方法将不会返回，并且你的应用程序将停止响应。 如果处理此事件，则必须将其标记为已处理，以防止默认行为重写处理程序。  
  
## <a name="routed-event-information"></a>路由事件信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.DragDrop.QueryContinueDragEvent>|  
|路由策略|冒泡|  
|委托|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
 对应的隧道事件为 <xref:System.Windows.DragDrop.PreviewQueryContinueDrag> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.QueryContinueDrag" />
        <altmember cref="E:System.Windows.ContentElement.QueryContinueDrag" />
        <altmember cref="M:System.Windows.DragDrop.AddQueryContinueDragHandler(System.Windows.DependencyObject,System.Windows.QueryContinueDragEventHandler)" />
        <altmember cref="M:System.Windows.DragDrop.RemoveQueryContinueDragHandler(System.Windows.DependencyObject,System.Windows.QueryContinueDragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DragDrop.QueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryContinueDragEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable QueryContinueDragEvent : System.Windows.RoutedEvent" Usage="System.Windows.DragDrop.QueryContinueDragEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> 附加事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此 <xref:System.Windows.DragDrop.QueryContinueDrag> 事件在拖放操作过程中发生，并允许拖动源确定是否应取消拖放操作。  
  
 此字段标识事件的冒泡版本 <xref:System.Windows.DragDrop.QueryContinueDrag> 。 有关此事件的隧道版本的标识符，请参见 <xref:System.Windows.DragDrop.PreviewQueryContinueDragEvent> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.DragDrop.QueryContinueDrag" />
        <altmember cref="M:System.Windows.DragDrop.AddQueryContinueDragHandler(System.Windows.DependencyObject,System.Windows.QueryContinueDragEventHandler)" />
        <altmember cref="M:System.Windows.DragDrop.RemoveQueryContinueDragHandler(System.Windows.DependencyObject,System.Windows.QueryContinueDragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveDragEnterHandler">
      <MemberSignature Language="C#" Value="public static void RemoveDragEnterHandler (System.Windows.DependencyObject element, System.Windows.DragEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveDragEnterHandler(class System.Windows.DependencyObject element, class System.Windows.DragEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DragDrop.RemoveDragEnterHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveDragEnterHandler (element As DependencyObject, handler As DragEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveDragEnterHandler(System::Windows::DependencyObject ^ element, System::Windows::DragEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveDragEnterHandler : System.Windows.DependencyObject * System.Windows.DragEventHandler -&gt; unit" Usage="System.Windows.DragDrop.RemoveDragEnterHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DragEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">要从中删除事件处理程序的依赖对象（<see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />）。</param>
        <param name="handler">一个委托，用于引用要删除的处理程序方法。</param>
        <summary>从指定的依赖对象中删除  <see cref="E:System.Windows.DragDrop.DragEnter" /> 事件处理程序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将 <xref:System.Windows.DragDrop.DragEnter> 对象拖入元素的边界时发生该事件。  
  
 此方法删除事件的冒泡版本的处理程序 <xref:System.Windows.DragDrop.DragEnter> 。 若要为此事件的隧道版本删除处理程序，请参阅 <xref:System.Windows.DragDrop.RemovePreviewDragEnterHandler%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.DragDrop.DragEnterEvent" />
        <altmember cref="M:System.Windows.DragDrop.AddDragEnterHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveDragLeaveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveDragLeaveHandler (System.Windows.DependencyObject element, System.Windows.DragEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveDragLeaveHandler(class System.Windows.DependencyObject element, class System.Windows.DragEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DragDrop.RemoveDragLeaveHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveDragLeaveHandler (element As DependencyObject, handler As DragEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveDragLeaveHandler(System::Windows::DependencyObject ^ element, System::Windows::DragEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveDragLeaveHandler : System.Windows.DependencyObject * System.Windows.DragEventHandler -&gt; unit" Usage="System.Windows.DragDrop.RemoveDragLeaveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DragEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">要从中删除事件处理程序的依赖对象（<see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />）。</param>
        <param name="handler">一个委托，用于引用要删除的处理程序方法。</param>
        <summary>从指定的依赖对象中删除  <see cref="E:System.Windows.DragDrop.DragLeave" /> 事件处理程序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将 <xref:System.Windows.DragDrop.DragLeave> 对象拖出元素的边界时发生该事件。  
  
 此方法删除事件的冒泡版本的处理程序 <xref:System.Windows.DragDrop.DragLeave> 。 若要为此事件的隧道版本删除处理程序，请参阅 <xref:System.Windows.DragDrop.RemovePreviewDragLeaveHandler%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.DragDrop.DragLeaveEvent" />
        <altmember cref="M:System.Windows.DragDrop.AddDragLeaveHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveDragOverHandler">
      <MemberSignature Language="C#" Value="public static void RemoveDragOverHandler (System.Windows.DependencyObject element, System.Windows.DragEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveDragOverHandler(class System.Windows.DependencyObject element, class System.Windows.DragEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DragDrop.RemoveDragOverHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveDragOverHandler (element As DependencyObject, handler As DragEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveDragOverHandler(System::Windows::DependencyObject ^ element, System::Windows::DragEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveDragOverHandler : System.Windows.DependencyObject * System.Windows.DragEventHandler -&gt; unit" Usage="System.Windows.DragDrop.RemoveDragOverHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DragEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">要从中删除事件处理程序的依赖对象（<see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />）。</param>
        <param name="handler">一个委托，用于引用要删除的处理程序方法。</param>
        <summary>从指定的依赖对象中删除  <see cref="E:System.Windows.DragDrop.DragOver" /> 事件处理程序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将 <xref:System.Windows.DragDrop.DragOver> 对象拖动到元素的边界上时发生此事件。  
  
 此方法删除事件的冒泡版本的处理程序 <xref:System.Windows.DragDrop.DragOver> 。 若要为此事件的隧道版本删除处理程序，请参阅 <xref:System.Windows.DragDrop.RemovePreviewDragOverHandler%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.DragDrop.DragOverEvent" />
        <altmember cref="M:System.Windows.DragDrop.AddDragOverHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveDropHandler">
      <MemberSignature Language="C#" Value="public static void RemoveDropHandler (System.Windows.DependencyObject element, System.Windows.DragEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveDropHandler(class System.Windows.DependencyObject element, class System.Windows.DragEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DragDrop.RemoveDropHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveDropHandler (element As DependencyObject, handler As DragEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveDropHandler(System::Windows::DependencyObject ^ element, System::Windows::DragEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveDropHandler : System.Windows.DependencyObject * System.Windows.DragEventHandler -&gt; unit" Usage="System.Windows.DragDrop.RemoveDropHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DragEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">要从中删除事件处理程序的依赖对象（<see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />）。</param>
        <param name="handler">一个委托，用于引用要删除的处理程序方法。</param>
        <summary>从指定的依赖对象中删除  <see cref="E:System.Windows.DragDrop.Drop" /> 事件处理程序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 <xref:System.Windows.DragDrop.Drop> 元素的边界内删除对象时发生该事件。  
  
 此方法删除事件的冒泡版本的处理程序 <xref:System.Windows.DragDrop.Drop> 。 若要为此事件的隧道版本删除处理程序，请参阅 <xref:System.Windows.DragDrop.RemovePreviewDropHandler%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.DragDrop.DropEvent" />
        <altmember cref="M:System.Windows.DragDrop.AddDropHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveGiveFeedbackHandler">
      <MemberSignature Language="C#" Value="public static void RemoveGiveFeedbackHandler (System.Windows.DependencyObject element, System.Windows.GiveFeedbackEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveGiveFeedbackHandler(class System.Windows.DependencyObject element, class System.Windows.GiveFeedbackEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DragDrop.RemoveGiveFeedbackHandler(System.Windows.DependencyObject,System.Windows.GiveFeedbackEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveGiveFeedbackHandler (element As DependencyObject, handler As GiveFeedbackEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveGiveFeedbackHandler(System::Windows::DependencyObject ^ element, System::Windows::GiveFeedbackEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveGiveFeedbackHandler : System.Windows.DependencyObject * System.Windows.GiveFeedbackEventHandler -&gt; unit" Usage="System.Windows.DragDrop.RemoveGiveFeedbackHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.GiveFeedbackEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">要从中删除事件处理程序的依赖对象（<see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />）。</param>
        <param name="handler">一个委托，用于引用要删除的处理程序方法。</param>
        <summary>从指定的依赖对象中删除  <see cref="E:System.Windows.DragDrop.GiveFeedback" /> 事件处理程序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 <xref:System.Windows.DragDrop.GiveFeedback> 拖动操作过程中发生该事件。  
  
 此方法删除事件的冒泡版本的处理程序 <xref:System.Windows.DragDrop.GiveFeedback> 。 若要为此事件的隧道版本删除处理程序，请参阅 <xref:System.Windows.DragDrop.RemovePreviewGiveFeedbackHandler%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.DragDrop.GiveFeedbackEvent" />
        <altmember cref="M:System.Windows.DragDrop.AddGiveFeedbackHandler(System.Windows.DependencyObject,System.Windows.GiveFeedbackEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewDragEnterHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewDragEnterHandler (System.Windows.DependencyObject element, System.Windows.DragEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewDragEnterHandler(class System.Windows.DependencyObject element, class System.Windows.DragEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DragDrop.RemovePreviewDragEnterHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewDragEnterHandler (element As DependencyObject, handler As DragEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewDragEnterHandler(System::Windows::DependencyObject ^ element, System::Windows::DragEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewDragEnterHandler : System.Windows.DependencyObject * System.Windows.DragEventHandler -&gt; unit" Usage="System.Windows.DragDrop.RemovePreviewDragEnterHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DragEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">要从中删除事件处理程序的依赖对象（<see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />）。</param>
        <param name="handler">一个委托，用于引用要删除的处理程序方法。</param>
        <summary>从指定的依赖对象中删除  <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> 事件处理程序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将 <xref:System.Windows.DragDrop.PreviewDragEnter> 对象拖入元素的边界时发生该事件。  
  
 此方法删除事件的隧道版本的处理程序 <xref:System.Windows.DragDrop.PreviewDragEnter> 。 若要为此事件的冒泡版本删除处理程序，请参阅 <xref:System.Windows.DragDrop.RemoveDragEnterHandler%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.DragDrop.PreviewDragEnterEvent" />
        <altmember cref="M:System.Windows.DragDrop.AddPreviewDragEnterHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewDragLeaveHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewDragLeaveHandler (System.Windows.DependencyObject element, System.Windows.DragEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewDragLeaveHandler(class System.Windows.DependencyObject element, class System.Windows.DragEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DragDrop.RemovePreviewDragLeaveHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewDragLeaveHandler (element As DependencyObject, handler As DragEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewDragLeaveHandler(System::Windows::DependencyObject ^ element, System::Windows::DragEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewDragLeaveHandler : System.Windows.DependencyObject * System.Windows.DragEventHandler -&gt; unit" Usage="System.Windows.DragDrop.RemovePreviewDragLeaveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DragEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">要从中删除事件处理程序的依赖对象（<see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />）。</param>
        <param name="handler">一个委托，用于引用要删除的处理程序方法。</param>
        <summary>从指定的依赖对象中删除  <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> 事件处理程序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将 <xref:System.Windows.DragDrop.PreviewDragLeave> 对象拖出元素的边界时发生该事件。  
  
 此方法删除事件的隧道版本的处理程序 <xref:System.Windows.DragDrop.PreviewDragLeave> 。 若要为此事件的冒泡版本删除处理程序，请参阅 <xref:System.Windows.DragDrop.RemoveDragLeaveHandler%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.DragDrop.PreviewDragLeaveEvent" />
        <altmember cref="M:System.Windows.DragDrop.AddPreviewDragLeaveHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewDragOverHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewDragOverHandler (System.Windows.DependencyObject element, System.Windows.DragEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewDragOverHandler(class System.Windows.DependencyObject element, class System.Windows.DragEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DragDrop.RemovePreviewDragOverHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewDragOverHandler (element As DependencyObject, handler As DragEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewDragOverHandler(System::Windows::DependencyObject ^ element, System::Windows::DragEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewDragOverHandler : System.Windows.DependencyObject * System.Windows.DragEventHandler -&gt; unit" Usage="System.Windows.DragDrop.RemovePreviewDragOverHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DragEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">要从中删除事件处理程序的依赖对象（<see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />）。</param>
        <param name="handler">一个委托，用于引用要删除的处理程序方法。</param>
        <summary>从指定的依赖对象中删除  <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> 事件处理程序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.DragDrop.PreviewDragOver>在元素的边界上拖动 n 个对象时发生此事件。  
  
 此方法删除事件的隧道版本的处理程序 <xref:System.Windows.DragDrop.PreviewDragOver> 。 若要为此事件的冒泡版本删除处理程序，请参阅 <xref:System.Windows.DragDrop.RemoveDragOverHandler%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.DragDrop.PreviewDragOverEvent" />
        <altmember cref="M:System.Windows.DragDrop.AddPreviewDragOverHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewDropHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewDropHandler (System.Windows.DependencyObject element, System.Windows.DragEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewDropHandler(class System.Windows.DependencyObject element, class System.Windows.DragEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DragDrop.RemovePreviewDropHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewDropHandler (element As DependencyObject, handler As DragEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewDropHandler(System::Windows::DependencyObject ^ element, System::Windows::DragEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewDropHandler : System.Windows.DependencyObject * System.Windows.DragEventHandler -&gt; unit" Usage="System.Windows.DragDrop.RemovePreviewDropHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DragEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">要从中删除事件处理程序的依赖对象（<see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />）。</param>
        <param name="handler">一个委托，用于引用要删除的处理程序方法。</param>
        <summary>从指定的依赖对象中删除  <see cref="E:System.Windows.DragDrop.PreviewDrop" /> 事件处理程序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 <xref:System.Windows.DragDrop.PreviewDrop> 元素的边界内删除对象时发生该事件。  
  
 此方法删除事件的隧道版本的处理程序 <xref:System.Windows.DragDrop.PreviewDrop> 。 若要为此事件的冒泡版本删除处理程序，请参阅 <xref:System.Windows.DragDrop.RemoveDropHandler%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.DragDrop.PreviewDropEvent" />
        <altmember cref="M:System.Windows.DragDrop.AddPreviewDropHandler(System.Windows.DependencyObject,System.Windows.DragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewGiveFeedbackHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewGiveFeedbackHandler (System.Windows.DependencyObject element, System.Windows.GiveFeedbackEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewGiveFeedbackHandler(class System.Windows.DependencyObject element, class System.Windows.GiveFeedbackEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DragDrop.RemovePreviewGiveFeedbackHandler(System.Windows.DependencyObject,System.Windows.GiveFeedbackEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewGiveFeedbackHandler (element As DependencyObject, handler As GiveFeedbackEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewGiveFeedbackHandler(System::Windows::DependencyObject ^ element, System::Windows::GiveFeedbackEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewGiveFeedbackHandler : System.Windows.DependencyObject * System.Windows.GiveFeedbackEventHandler -&gt; unit" Usage="System.Windows.DragDrop.RemovePreviewGiveFeedbackHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.GiveFeedbackEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">要从中删除事件处理程序的依赖对象（<see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />）。</param>
        <param name="handler">一个委托，用于引用要删除的处理程序方法。</param>
        <summary>从指定的依赖对象中删除  <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> 事件处理程序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 <xref:System.Windows.DragDrop.PreviewGiveFeedback> 拖动操作过程中发生该事件。  
  
 此方法删除事件的隧道版本的处理程序 <xref:System.Windows.DragDrop.PreviewGiveFeedback> 。 若要为此事件的冒泡版本删除处理程序，请参阅 <xref:System.Windows.DragDrop.RemoveGiveFeedbackHandler%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.DragDrop.PreviewGiveFeedbackEvent" />
        <altmember cref="M:System.Windows.DragDrop.AddPreviewGiveFeedbackHandler(System.Windows.DependencyObject,System.Windows.GiveFeedbackEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewQueryContinueDragHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewQueryContinueDragHandler (System.Windows.DependencyObject element, System.Windows.QueryContinueDragEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewQueryContinueDragHandler(class System.Windows.DependencyObject element, class System.Windows.QueryContinueDragEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DragDrop.RemovePreviewQueryContinueDragHandler(System.Windows.DependencyObject,System.Windows.QueryContinueDragEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewQueryContinueDragHandler (element As DependencyObject, handler As QueryContinueDragEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewQueryContinueDragHandler(System::Windows::DependencyObject ^ element, System::Windows::QueryContinueDragEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewQueryContinueDragHandler : System.Windows.DependencyObject * System.Windows.QueryContinueDragEventHandler -&gt; unit" Usage="System.Windows.DragDrop.RemovePreviewQueryContinueDragHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.QueryContinueDragEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">要从中删除事件处理程序的依赖对象（<see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />）。</param>
        <param name="handler">一个委托，用于引用要删除的处理程序方法。</param>
        <summary>从指定的依赖对象中删除  <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> 事件处理程序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此 <xref:System.Windows.DragDrop.PreviewQueryContinueDrag> 事件在拖放操作过程中发生，并允许拖动源确定是否应取消拖放操作。  
  
 此方法删除事件的隧道版本的处理程序 <xref:System.Windows.DragDrop.PreviewQueryContinueDrag> 。 若要为此事件的冒泡版本删除处理程序，请参阅 <xref:System.Windows.DragDrop.RemoveQueryContinueDragHandler%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.DragDrop.PreviewQueryContinueDragEvent" />
        <altmember cref="M:System.Windows.DragDrop.AddPreviewQueryContinueDragHandler(System.Windows.DependencyObject,System.Windows.QueryContinueDragEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveQueryContinueDragHandler">
      <MemberSignature Language="C#" Value="public static void RemoveQueryContinueDragHandler (System.Windows.DependencyObject element, System.Windows.QueryContinueDragEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveQueryContinueDragHandler(class System.Windows.DependencyObject element, class System.Windows.QueryContinueDragEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DragDrop.RemoveQueryContinueDragHandler(System.Windows.DependencyObject,System.Windows.QueryContinueDragEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveQueryContinueDragHandler (element As DependencyObject, handler As QueryContinueDragEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveQueryContinueDragHandler(System::Windows::DependencyObject ^ element, System::Windows::QueryContinueDragEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveQueryContinueDragHandler : System.Windows.DependencyObject * System.Windows.QueryContinueDragEventHandler -&gt; unit" Usage="System.Windows.DragDrop.RemoveQueryContinueDragHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.QueryContinueDragEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">要从中删除事件处理程序的依赖对象（<see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />）。</param>
        <param name="handler">一个委托，用于引用要删除的处理程序方法。</param>
        <summary>从指定的依赖对象中删除  <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> 事件处理程序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此 <xref:System.Windows.DragDrop.QueryContinueDrag> 事件在拖放操作过程中发生，并允许拖动源确定是否应取消拖放操作。  
  
 此方法删除事件的冒泡版本的处理程序 <xref:System.Windows.DragDrop.QueryContinueDrag> 。 若要为此事件的隧道版本删除处理程序，请参阅 <xref:System.Windows.DragDrop.RemovePreviewQueryContinueDragHandler%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.DragDrop.QueryContinueDragEvent" />
        <altmember cref="M:System.Windows.DragDrop.AddQueryContinueDragHandler(System.Windows.DependencyObject,System.Windows.QueryContinueDragEventHandler)" />
      </Docs>
    </Member>
  </Members>
</Type>
