<Type Name="VisualStateManager" FullName="System.Windows.VisualStateManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8a1f159d1f8a69b263062579cf3ad2a360eed09e" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83947912" /></Metadata><TypeSignature Language="C#" Value="public class VisualStateManager : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualStateManager extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualStateManager" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualStateManager&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualStateManager : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type VisualStateManager = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="923f5-101">管理控件的状态以及用于状态过渡的逻辑。</span><span class="sxs-lookup"><span data-stu-id="923f5-101">Manages states and the logic for transitioning between states for controls.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="923f5-102">通过 <xref:System.Windows.VisualStateManager>，您可以指定控件的状态、控件在处于某种状态时的外观以及控件更改状态的时间。</span><span class="sxs-lookup"><span data-stu-id="923f5-102">The <xref:System.Windows.VisualStateManager> enables you to specify states for a control, the appearance of a control when it is in a certain state, and when a control changes states.</span></span> <span data-ttu-id="923f5-103">例如，当按下时，<xref:System.Windows.Controls.Button> 的外观可能略有不同。</span><span class="sxs-lookup"><span data-stu-id="923f5-103">For example, a <xref:System.Windows.Controls.Button> might have a slightly different appearance when it is pressed than when it is not pressed.</span></span> <span data-ttu-id="923f5-104"><xref:System.Windows.Controls.Button> 所定义的两个状态对应于按下（`"Pressed"`）时和不（`"Normal"`）。</span><span class="sxs-lookup"><span data-stu-id="923f5-104">Two states that the <xref:System.Windows.Controls.Button> defines correspond to when it is pressed (`"Pressed"`) and when it is not (`"Normal"`).</span></span> <span data-ttu-id="923f5-105">当控件处于状态时，该控件的外观由 <xref:System.Windows.VisualState>定义。</span><span class="sxs-lookup"><span data-stu-id="923f5-105">The appearance of a control when it is in a state is defined by a <xref:System.Windows.VisualState>.</span></span> <span data-ttu-id="923f5-106"><xref:System.Windows.VisualState> 包含 <xref:System.Windows.Media.Animation.Storyboard> 对象的集合，这些对象指定控件在处于该状态时控件的外观如何变化。</span><span class="sxs-lookup"><span data-stu-id="923f5-106">A <xref:System.Windows.VisualState> contains a collection of <xref:System.Windows.Media.Animation.Storyboard> objects that specify how the control's appearance changes when the control is in that state.</span></span> <span data-ttu-id="923f5-107">通过设置控件的 `VisualStateManager.VisualStateGroups` 附加属性，可以向控件添加可视状态。</span><span class="sxs-lookup"><span data-stu-id="923f5-107">You add visual states to a control by setting the `VisualStateManager.VisualStateGroups` attached property on the control.</span></span> <span data-ttu-id="923f5-108">每个 <xref:System.Windows.VisualStateGroup> 都包含互斥的 <xref:System.Windows.VisualState> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="923f5-108">Each <xref:System.Windows.VisualStateGroup> contains a collection of <xref:System.Windows.VisualState> objects that are mutually exclusive.</span></span> <span data-ttu-id="923f5-109">也就是说，控件在每个 <xref:System.Windows.VisualStateGroup>中始终处于一种状态。</span><span class="sxs-lookup"><span data-stu-id="923f5-109">That is, the control is always in exactly one state of in each <xref:System.Windows.VisualStateGroup>.</span></span>  
  
 <span data-ttu-id="923f5-110">使用 <xref:System.Windows.VisualStateManager> 还可以指定控件何时进入特定状态。</span><span class="sxs-lookup"><span data-stu-id="923f5-110">The <xref:System.Windows.VisualStateManager> also enables you to specify when a control enters a specific state.</span></span> <span data-ttu-id="923f5-111">你应调用以更改状态的方法取决于你的方案。</span><span class="sxs-lookup"><span data-stu-id="923f5-111">The method that you should call to change states depends on your scenario.</span></span> <span data-ttu-id="923f5-112">如果创建的控件在其 <xref:System.Windows.Controls.ControlTemplate>中使用 <xref:System.Windows.VisualStateManager>，请调用 <xref:System.Windows.VisualStateManager.GoToState%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="923f5-112">If you create a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>, call the <xref:System.Windows.VisualStateManager.GoToState%2A> method.</span></span> <span data-ttu-id="923f5-113">有关如何创建使用 <xref:System.Windows.VisualStateManager>的控件的详细信息，请参阅[创建具有可自定义外观的控件](/dotnet/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance)。</span><span class="sxs-lookup"><span data-stu-id="923f5-113">For more information about how to create controls that use the <xref:System.Windows.VisualStateManager>, see [Creating a Control That Has a Customizable Appearance](/dotnet/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance).</span></span> <span data-ttu-id="923f5-114">如果在 <xref:System.Windows.Controls.ControlTemplate> 外使用 <xref:System.Windows.VisualStateManager> （例如，如果在 <xref:System.Windows.Controls.UserControl> 中或在单个元素中使用 <xref:System.Windows.VisualStateManager>），请调用 <xref:System.Windows.VisualStateManager.GoToElementState%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="923f5-114">If you use the <xref:System.Windows.VisualStateManager> outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.Controls.UserControl> or in a single element), call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method.</span></span> <span data-ttu-id="923f5-115">在任一情况下，<xref:System.Windows.VisualStateManager> 都将执行适当地启动和停止与所涉及状态关联的情节提要的逻辑。</span><span class="sxs-lookup"><span data-stu-id="923f5-115">In either case, the <xref:System.Windows.VisualStateManager> performs the logic that is required to appropriately start and stop the storyboards that are associated with the involved state.</span></span> <span data-ttu-id="923f5-116">例如，假设控件定义了状态 `State1` 和 `State2`，其中每个状态都具有与之关联的情节提要。</span><span class="sxs-lookup"><span data-stu-id="923f5-116">For example, suppose that a control defines the states, `State1` and `State2`, each of which has a storyboard associated with it.</span></span> <span data-ttu-id="923f5-117">如果控件处于 `State1` 中，并将 `State2` 传递到 <xref:System.Windows.VisualStateManager.GoToState%2A> 或 <xref:System.Windows.VisualStateManager.GoToElementState%2A>，则 <xref:System.Windows.VisualStateManager> 在 `State2` 中启动情节提要，并停止 `State1`中的情节提要。</span><span class="sxs-lookup"><span data-stu-id="923f5-117">If the control is in `State1` and you pass `State2` to <xref:System.Windows.VisualStateManager.GoToState%2A> or <xref:System.Windows.VisualStateManager.GoToElementState%2A>, the <xref:System.Windows.VisualStateManager> starts the storyboard in `State2` and stops the storyboard in `State1`.</span></span>  
  
 <span data-ttu-id="923f5-118">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 中附带的控件使用 <xref:System.Windows.VisualStateManager> 更改可视状态。</span><span class="sxs-lookup"><span data-stu-id="923f5-118">Controls that are included with [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] use the <xref:System.Windows.VisualStateManager> to change visual states.</span></span> <span data-ttu-id="923f5-119">为 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]附带的控件创建 <xref:System.Windows.Controls.ControlTemplate> 时，可以将 <xref:System.Windows.VisualState> 对象添加到控件的 <xref:System.Windows.Controls.ControlTemplate>，以指定控件在特定状态下的外观。</span><span class="sxs-lookup"><span data-stu-id="923f5-119">When you create a <xref:System.Windows.Controls.ControlTemplate> for a control that is included with [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], you can add <xref:System.Windows.VisualState> objects to the control's <xref:System.Windows.Controls.ControlTemplate> to specify the control's appearance in a certain state.</span></span> <span data-ttu-id="923f5-120">若要查找 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]附带的控件的可视状态的名称，请参阅[控件样式和模板](/dotnet/framework/wpf/controls/control-styles-and-templates)。</span><span class="sxs-lookup"><span data-stu-id="923f5-120">To find the names of the visual states for the controls that are included with [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], see [Control Styles and Templates](/dotnet/framework/wpf/controls/control-styles-and-templates).</span></span> <span data-ttu-id="923f5-121">控件的逻辑处理状态之间的转换，因此您无需执行任何其他操作，只需在新 <xref:System.Windows.Controls.ControlTemplate>中定义 <xref:System.Windows.VisualState> 对象即可。</span><span class="sxs-lookup"><span data-stu-id="923f5-121">The control's logic handles transitioning between states, so you do not need to do anything other than define the <xref:System.Windows.VisualState> objects in the new <xref:System.Windows.Controls.ControlTemplate>.</span></span> <span data-ttu-id="923f5-122">有关如何为现有控件创建控件模板的详细信息，请参阅[通过创建 System.windows.controls.controltemplate> 自定义现有控件的外观](/dotnet/framework/wpf/controls/customizing-the-appearance-of-an-existing-control)。</span><span class="sxs-lookup"><span data-stu-id="923f5-122">For more information about how to create control templates for existing controls, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](/dotnet/framework/wpf/controls/customizing-the-appearance-of-an-existing-control).</span></span>  
  
 <span data-ttu-id="923f5-123">如果要实现自己的逻辑以便在状态之间转换，必须从 <xref:System.Windows.VisualStateManager>继承，重写 <xref:System.Windows.VisualStateManager.GoToStateCore%2A> 方法，并在使用自定义逻辑的控件上设置 <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A?displayProperty=nameWithType> 附加属性。</span><span class="sxs-lookup"><span data-stu-id="923f5-123">If you want to implement your own logic for transitioning between states, you must inherit from <xref:System.Windows.VisualStateManager>, override the <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method, and set the <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A?displayProperty=nameWithType> attached property on the control that uses the custom logic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="923f5-124">下面的示例创建一个 <xref:System.Windows.Shapes.Rectangle>，并将名为 `CommonStates` 的 <xref:System.Windows.VisualStateGroup> 添加到 `VisualStateManager.VisualStatesGroups` 附加属性。</span><span class="sxs-lookup"><span data-stu-id="923f5-124">The following example creates a <xref:System.Windows.Shapes.Rectangle> and adds a <xref:System.Windows.VisualStateGroup> named `CommonStates` to the `VisualStateManager.VisualStatesGroups` attached property.</span></span> <span data-ttu-id="923f5-125">该示例定义了 `CommonStates`<xref:System.Windows.VisualStateGroup>中的 `MouseOver` 和 `Normal`<xref:System.Windows.VisualState> 对象。</span><span class="sxs-lookup"><span data-stu-id="923f5-125">The example defines the `MouseOver` and `Normal`<xref:System.Windows.VisualState> objects in the `CommonStates`<xref:System.Windows.VisualStateGroup>.</span></span> <span data-ttu-id="923f5-126">当用户将鼠标指针移到 <xref:System.Windows.Shapes.Rectangle>上时，它将在半秒内从红色更改为绿色。</span><span class="sxs-lookup"><span data-stu-id="923f5-126">When the user moves the mouse pointer over the <xref:System.Windows.Shapes.Rectangle>, it changes from red to green over one half second.</span></span> <span data-ttu-id="923f5-127">当用户将鼠标离开矩形时，<xref:System.Windows.Controls.Grid> 会立即改回为红色。</span><span class="sxs-lookup"><span data-stu-id="923f5-127">When the user moves the mouse away from the rectangle, the <xref:System.Windows.Controls.Grid> immediately changes back to red.</span></span> <span data-ttu-id="923f5-128">请注意，`Normal` 状态不定义 <xref:System.Windows.Media.Animation.Storyboard>。</span><span class="sxs-lookup"><span data-stu-id="923f5-128">Note that the `Normal` state does not define a <xref:System.Windows.Media.Animation.Storyboard>.</span></span> <span data-ttu-id="923f5-129"><xref:System.Windows.Media.Animation.Storyboard> 不是必需的，因为当 <xref:System.Windows.Shapes.Rectangle> 从 `MouseOver` 状态转换为 `Normal` 状态时，<xref:System.Windows.Media.Animation.Storyboard> 的 `MouseOver` 将停止，<xref:System.Windows.Media.SolidColorBrush.Color%2A> 的 <xref:System.Windows.Media.SolidColorBrush> 属性将返回为红色。</span><span class="sxs-lookup"><span data-stu-id="923f5-129">A <xref:System.Windows.Media.Animation.Storyboard> is not required because when the <xref:System.Windows.Shapes.Rectangle> transitions from the `MouseOver` state to the `Normal` state, the <xref:System.Windows.Media.Animation.Storyboard> for `MouseOver` is stopped and the <xref:System.Windows.Media.SolidColorBrush.Color%2A> property for the <xref:System.Windows.Media.SolidColorBrush> returns to red.</span></span>  
  
 [!code-xaml[VSMCustomControl#VSMNoTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml#vsmnotemplate)]  
  
 <span data-ttu-id="923f5-130">下面的示例演示上一示例中定义的事件处理程序，并调用 <xref:System.Windows.VisualStateManager.GoToElementState%2A> 方法来转换状态。</span><span class="sxs-lookup"><span data-stu-id="923f5-130">The following example shows the event handler that is defined in the previous example and calls the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to transition between states.</span></span> <span data-ttu-id="923f5-131">如果上一个示例中的矩形是 <xref:System.Windows.Controls.ControlTemplate>的一部分，则该示例必须调用 <xref:System.Windows.VisualStateManager.GoToState%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="923f5-131">If the rectangle in the previous example was part of a <xref:System.Windows.Controls.ControlTemplate>, the example would have to call the <xref:System.Windows.VisualStateManager.GoToState%2A> method.</span></span>  
  
 [!code-csharp[VSMCustomControl#GoToElementState](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml.cs#gotoelementstate)]
 [!code-vb[VSMCustomControl#GoToElementState](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/window1.xaml.vb#gotoelementstate)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualStateManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualStateManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="923f5-132">初始化 <see cref="T:System.Windows.VisualStateManager" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="923f5-132">Initializes a new instance of the <see cref="T:System.Windows.VisualStateManager" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomVisualStateManager">
      <MemberSignature Language="C#" Value="see GetCustomVisualStateManager, and SetCustomVisualStateManager" />
      <MemberSignature Language="ILAsm" Value="see GetCustomVisualStateManager, and SetCustomVisualStateManager" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateManager.CustomVisualStateManager" />
      <MemberSignature Language="VB.NET" Value="see GetCustomVisualStateManager, and SetCustomVisualStateManager" />
      <MemberSignature Language="F#" Value="see GetCustomVisualStateManager, and SetCustomVisualStateManager" Usage="see GetCustomVisualStateManager, and SetCustomVisualStateManager" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="923f5-133">获取或设置在控件的状态间转换的 <see cref="T:System.Windows.VisualStateManager" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="923f5-133">Gets or sets the <see cref="T:System.Windows.VisualStateManager" /> object that transitions between the states of a control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="923f5-134">如果 `null`<xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A>，<xref:System.Windows.VisualStateManager> 将使用自己的逻辑在状态之间转换。</span><span class="sxs-lookup"><span data-stu-id="923f5-134">If <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A> is `null`, the <xref:System.Windows.VisualStateManager> uses its own logic to transition between states.</span></span> <span data-ttu-id="923f5-135">如果要实现自己的逻辑以便在不同状态之间进行转换，请创建一个继承自 <xref:System.Windows.VisualStateManager> 的类，并重写 <xref:System.Windows.VisualStateManager.GoToStateCore%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="923f5-135">If you want to implement your own logic for transitioning between states, create a class that inherits from <xref:System.Windows.VisualStateManager> and override the <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method.</span></span> <span data-ttu-id="923f5-136">若要使用自定义类，请将 <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A> 属性设置为自定义类型的对象。</span><span class="sxs-lookup"><span data-stu-id="923f5-136">To use the custom class, set the <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A> property to an object of your custom type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomVisualStateManagerProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CustomVisualStateManagerProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CustomVisualStateManagerProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.VisualStateManager.CustomVisualStateManagerProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CustomVisualStateManagerProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CustomVisualStateManagerProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CustomVisualStateManagerProperty : System.Windows.DependencyProperty" Usage="System.Windows.VisualStateManager.CustomVisualStateManagerProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="923f5-137">标识 <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="923f5-137">Identifies the <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomVisualStateManager">
      <MemberSignature Language="C#" Value="public static System.Windows.VisualStateManager GetCustomVisualStateManager (System.Windows.FrameworkElement obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.VisualStateManager GetCustomVisualStateManager(class System.Windows.FrameworkElement obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomVisualStateManager (obj As FrameworkElement) As VisualStateManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::VisualStateManager ^ GetCustomVisualStateManager(System::Windows::FrameworkElement ^ obj);" />
      <MemberSignature Language="F#" Value="static member GetCustomVisualStateManager : System.Windows.FrameworkElement -&gt; System.Windows.VisualStateManager" Usage="System.Windows.VisualStateManager.GetCustomVisualStateManager obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.VisualStateManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="923f5-138">要从中获取 <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> 附加属性的元素。</span><span class="sxs-lookup"><span data-stu-id="923f5-138">The element to get the <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> attached property from.</span></span></param>
        <summary><span data-ttu-id="923f5-139">获取 <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> 附加属性。</span><span class="sxs-lookup"><span data-stu-id="923f5-139">Gets the <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> attached property.</span></span></summary>
        <returns><span data-ttu-id="923f5-140">切换控件状态的可视状态管理器。</span><span class="sxs-lookup"><span data-stu-id="923f5-140">The visual state manager that transitions between the states of a control.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVisualStateGroups">
      <MemberSignature Language="C#" Value="public static System.Collections.IList GetVisualStateGroups (System.Windows.FrameworkElement obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IList GetVisualStateGroups(class System.Windows.FrameworkElement obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetVisualStateGroups (obj As FrameworkElement) As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IList ^ GetVisualStateGroups(System::Windows::FrameworkElement ^ obj);" />
      <MemberSignature Language="F#" Value="static member GetVisualStateGroups : System.Windows.FrameworkElement -&gt; System.Collections.IList" Usage="System.Windows.VisualStateManager.GetVisualStateGroups obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="923f5-141">要从中获取 <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> 附加属性的元素。</span><span class="sxs-lookup"><span data-stu-id="923f5-141">The element to get the <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> attached property from.</span></span></param>
        <summary><span data-ttu-id="923f5-142">获取 <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> 附加属性。</span><span class="sxs-lookup"><span data-stu-id="923f5-142">Gets the <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> attached property.</span></span></summary>
        <returns><span data-ttu-id="923f5-143">与指定对象关联的 <see cref="T:System.Windows.VisualStateGroup" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="923f5-143">The collection of <see cref="T:System.Windows.VisualStateGroup" /> objects that is associated with the specified object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GoToElementState">
      <MemberSignature Language="C#" Value="public static bool GoToElementState (System.Windows.FrameworkElement stateGroupsRoot, string stateName, bool useTransitions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GoToElementState(class System.Windows.FrameworkElement stateGroupsRoot, string stateName, bool useTransitions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GoToElementState (stateGroupsRoot As FrameworkElement, stateName As String, useTransitions As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GoToElementState(System::Windows::FrameworkElement ^ stateGroupsRoot, System::String ^ stateName, bool useTransitions);" />
      <MemberSignature Language="F#" Value="static member GoToElementState : System.Windows.FrameworkElement * string * bool -&gt; bool" Usage="System.Windows.VisualStateManager.GoToElementState (stateGroupsRoot, stateName, useTransitions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateGroupsRoot" Type="System.Windows.FrameworkElement" />
        <Parameter Name="stateName" Type="System.String" />
        <Parameter Name="useTransitions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stateGroupsRoot"><span data-ttu-id="923f5-144">包含 <see cref="T:System.Windows.VisualStateManager" /> 的根元素。</span><span class="sxs-lookup"><span data-stu-id="923f5-144">The root element that contains the <see cref="T:System.Windows.VisualStateManager" />.</span></span></param>
        <param name="stateName"><span data-ttu-id="923f5-145">要转换到的状态。</span><span class="sxs-lookup"><span data-stu-id="923f5-145">The state to transition to.</span></span></param>
        <param name="useTransitions"><span data-ttu-id="923f5-146">要使用 <see cref="T:System.Windows.VisualTransition" /> 对象进行状态切换，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="923f5-146"><see langword="true" /> to use a <see cref="T:System.Windows.VisualTransition" /> object to transition between states; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="923f5-147">使元素在两个状态间转换。</span><span class="sxs-lookup"><span data-stu-id="923f5-147">Transitions the element between two states.</span></span> <span data-ttu-id="923f5-148">使用此方法转换由应用程序（而非控件）定义的状态。</span><span class="sxs-lookup"><span data-stu-id="923f5-148">Use this method to transition states that are defined by an application, rather than defined by a control.</span></span></summary>
        <returns><span data-ttu-id="923f5-149">如果控件已成功过渡到新状态，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="923f5-149"><see langword="true" /> if the control successfully transitioned to the new state; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="923f5-150">调用 <xref:System.Windows.VisualStateManager.GoToElementState%2A> 方法，更改 <xref:System.Windows.Controls.ControlTemplate> 外部元素的状态（例如，如果在 <xref:System.Windows.DataTemplate> 或 <xref:System.Windows.Window>中使用 <xref:System.Windows.VisualStateManager>）。</span><span class="sxs-lookup"><span data-stu-id="923f5-150">Call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to change states on an element outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.DataTemplate> or <xref:System.Windows.Window>).</span></span> <span data-ttu-id="923f5-151">如果要更改使用其 <xref:System.Windows.Controls.ControlTemplate>中的 <xref:System.Windows.VisualStateManager> 的控件中的状态，请调用 <xref:System.Windows.VisualStateManager.GoToState%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="923f5-151">Call the <xref:System.Windows.VisualStateManager.GoToState%2A> method if you are changing states in a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="923f5-152">下面的示例创建一个应用程序，该应用程序提示用户推测1到100之间的一个数字。</span><span class="sxs-lookup"><span data-stu-id="923f5-152">The following example creates an application that prompts the user to guess a number between 1 and 100.</span></span>  <span data-ttu-id="923f5-153">当用户输入数字时，应用程序将指示推测的值是过高、过低还是正确。</span><span class="sxs-lookup"><span data-stu-id="923f5-153">When the user enters a number, the application indicates whether the guess is too high, too low, or correct.</span></span>  <span data-ttu-id="923f5-154">以下 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 创建应用程序的用户界面并定义四种状态： `TooLow`、`TooHigh`、`Correct`和 `Guessing`。</span><span class="sxs-lookup"><span data-stu-id="923f5-154">The following [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] creates the user interface for the application and defines 4 states: `TooLow`, `TooHigh`, `Correct`, and `Guessing`.</span></span> <span data-ttu-id="923f5-155">当应用程序启动时，它处于 `Guessing` 状态。</span><span class="sxs-lookup"><span data-stu-id="923f5-155">When the application begins, it is in the `Guessing` state.</span></span> <span data-ttu-id="923f5-156">.</span><span class="sxs-lookup"><span data-stu-id="923f5-156">.</span></span>  
  
 [!code-xaml[VSMGoToElementState#GoToElementStateXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmgotoelementstate/csharp/mainwindow.xaml#gotoelementstatexaml)]  
  
 <span data-ttu-id="923f5-157">下面的代码显示了应用程序的逻辑。</span><span class="sxs-lookup"><span data-stu-id="923f5-157">The following code shows the logic of the application.</span></span>  <span data-ttu-id="923f5-158">当用户输入数字并单击该按钮时，应用程序将调用 <xref:System.Windows.VisualStateManager.GoToElementState%2A> 转换为 `TooHigh`、`TooLow`或 `Correct` 以向用户提供有关推测的反馈。</span><span class="sxs-lookup"><span data-stu-id="923f5-158">When the user enters a number and clicks the button, the application calls <xref:System.Windows.VisualStateManager.GoToElementState%2A> to transition to `TooHigh`, `TooLow`, or `Correct` to provide feedback to the user about the guess.</span></span>  <span data-ttu-id="923f5-159">若要尝试此示例，请在应用程序启动时调用 `GenerateNumber` 方法。</span><span class="sxs-lookup"><span data-stu-id="923f5-159">To try this example, call the `GenerateNumber` method when the application begins.</span></span>  
  
 [!code-csharp[VSMGoToElementState#GoToElementStateCode](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmgotoelementstate/csharp/mainwindow.xaml.cs#gotoelementstatecode)]
 [!code-vb[VSMGoToElementState#GoToElementStateCode](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmgotoelementstate/visualbasic/mainwindow.xaml.vb#gotoelementstatecode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="923f5-160"><paramref name="stateGroupsRoot" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="923f5-160"><paramref name="stateGroupsRoot" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="923f5-161">- 或 -</span><span class="sxs-lookup"><span data-stu-id="923f5-161">-or-</span></span> 
 <span data-ttu-id="923f5-162"><paramref name="stateName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="923f5-162"><paramref name="stateName" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GoToState">
      <MemberSignature Language="C#" Value="public static bool GoToState (System.Windows.FrameworkElement control, string stateName, bool useTransitions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GoToState(class System.Windows.FrameworkElement control, string stateName, bool useTransitions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GoToState (control As FrameworkElement, stateName As String, useTransitions As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GoToState(System::Windows::FrameworkElement ^ control, System::String ^ stateName, bool useTransitions);" />
      <MemberSignature Language="F#" Value="static member GoToState : System.Windows.FrameworkElement * string * bool -&gt; bool" Usage="System.Windows.VisualStateManager.GoToState (control, stateName, useTransitions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.FrameworkElement" />
        <Parameter Name="stateName" Type="System.String" />
        <Parameter Name="useTransitions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="923f5-163">要进行状态过渡的控件。</span><span class="sxs-lookup"><span data-stu-id="923f5-163">The control to transition between states.</span></span></param>
        <param name="stateName"><span data-ttu-id="923f5-164">要转换到的状态。</span><span class="sxs-lookup"><span data-stu-id="923f5-164">The state to transition to.</span></span></param>
        <param name="useTransitions"><span data-ttu-id="923f5-165">要使用 <see cref="T:System.Windows.VisualTransition" /> 对象进行状态切换，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="923f5-165"><see langword="true" /> to use a <see cref="T:System.Windows.VisualTransition" /> object to transition between states; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="923f5-166">在控件的两种状态之间转换。</span><span class="sxs-lookup"><span data-stu-id="923f5-166">Transitions the control between two states.</span></span> <span data-ttu-id="923f5-167">使用此方法转换具有 <see cref="T:System.Windows.Controls.ControlTemplate" /> 的控件的状态。</span><span class="sxs-lookup"><span data-stu-id="923f5-167">Use this method to transition states on control that has a <see cref="T:System.Windows.Controls.ControlTemplate" />.</span></span></summary>
        <returns><span data-ttu-id="923f5-168">如果控件已成功过渡到新状态，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="923f5-168"><see langword="true" /> if the control successfully transitioned to the new state; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="923f5-169">如果要更改使用其 <xref:System.Windows.Controls.ControlTemplate>中的 <xref:System.Windows.VisualStateManager> 的控件中的状态，请调用 <xref:System.Windows.VisualStateManager.GoToState%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="923f5-169">Call the <xref:System.Windows.VisualStateManager.GoToState%2A> method if you are changing states in a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>.</span></span> <span data-ttu-id="923f5-170">调用 <xref:System.Windows.VisualStateManager.GoToElementState%2A> 方法可更改 <xref:System.Windows.Controls.ControlTemplate> 外部元素的状态（例如，如果在 <xref:System.Windows.Controls.UserControl> 中或在单个元素中使用 <xref:System.Windows.VisualStateManager>）。</span><span class="sxs-lookup"><span data-stu-id="923f5-170">Call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to change states on an element outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.Controls.UserControl> or in a single element).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="923f5-171">下面的示例演示使用 <xref:System.Windows.VisualStateManager.GoToState%2A> 方法在状态之间进行转换的控件。</span><span class="sxs-lookup"><span data-stu-id="923f5-171">The following example demonstrates a control that uses the <xref:System.Windows.VisualStateManager.GoToState%2A> method to transition between states.</span></span> <span data-ttu-id="923f5-172">有关完整示例，请参阅[创建具有可自定义外观的控件](/dotnet/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance)。</span><span class="sxs-lookup"><span data-stu-id="923f5-172">For the entire example, see [Creating a Control That Has a Customizable Appearance](/dotnet/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance).</span></span>  
  
 [!code-csharp[VSMCustomControl#UpdateStates](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/numericupdown.cs#updatestates)]
 [!code-vb[VSMCustomControl#UpdateStates](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/numericupdown.vb#updatestates)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="923f5-173"><paramref name="control" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="923f5-173"><paramref name="control" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="923f5-174">- 或 -</span><span class="sxs-lookup"><span data-stu-id="923f5-174">-or-</span></span> 
 <span data-ttu-id="923f5-175"><paramref name="stateName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="923f5-175"><paramref name="stateName" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GoToStateCore">
      <MemberSignature Language="C#" Value="protected virtual bool GoToStateCore (System.Windows.FrameworkElement control, System.Windows.FrameworkElement stateGroupsRoot, string stateName, System.Windows.VisualStateGroup group, System.Windows.VisualState state, bool useTransitions);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool GoToStateCore(class System.Windows.FrameworkElement control, class System.Windows.FrameworkElement stateGroupsRoot, string stateName, class System.Windows.VisualStateGroup group, class System.Windows.VisualState state, bool useTransitions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GoToStateCore (control As FrameworkElement, stateGroupsRoot As FrameworkElement, stateName As String, group As VisualStateGroup, state As VisualState, useTransitions As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool GoToStateCore(System::Windows::FrameworkElement ^ control, System::Windows::FrameworkElement ^ stateGroupsRoot, System::String ^ stateName, System::Windows::VisualStateGroup ^ group, System::Windows::VisualState ^ state, bool useTransitions);" />
      <MemberSignature Language="F#" Value="abstract member GoToStateCore : System.Windows.FrameworkElement * System.Windows.FrameworkElement * string * System.Windows.VisualStateGroup * System.Windows.VisualState * bool -&gt; bool&#xA;override this.GoToStateCore : System.Windows.FrameworkElement * System.Windows.FrameworkElement * string * System.Windows.VisualStateGroup * System.Windows.VisualState * bool -&gt; bool" Usage="visualStateManager.GoToStateCore (control, stateGroupsRoot, stateName, group, state, useTransitions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.FrameworkElement" />
        <Parameter Name="stateGroupsRoot" Type="System.Windows.FrameworkElement" />
        <Parameter Name="stateName" Type="System.String" />
        <Parameter Name="group" Type="System.Windows.VisualStateGroup" />
        <Parameter Name="state" Type="System.Windows.VisualState" />
        <Parameter Name="useTransitions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="923f5-176">要进行状态过渡的控件。</span><span class="sxs-lookup"><span data-stu-id="923f5-176">The control to transition between states.</span></span></param>
        <param name="stateGroupsRoot"><span data-ttu-id="923f5-177">包含 <see cref="T:System.Windows.VisualStateManager" /> 的根元素。</span><span class="sxs-lookup"><span data-stu-id="923f5-177">The root element that contains the <see cref="T:System.Windows.VisualStateManager" />.</span></span></param>
        <param name="stateName"><span data-ttu-id="923f5-178">要过渡到的状态的名称。</span><span class="sxs-lookup"><span data-stu-id="923f5-178">The name of the state to transition to.</span></span></param>
        <param name="group"><span data-ttu-id="923f5-179">状态所属的 <see cref="T:System.Windows.VisualStateGroup" />。</span><span class="sxs-lookup"><span data-stu-id="923f5-179">The <see cref="T:System.Windows.VisualStateGroup" /> that the state belongs to.</span></span></param>
        <param name="state"><span data-ttu-id="923f5-180">要过渡到的状态的表示形式。</span><span class="sxs-lookup"><span data-stu-id="923f5-180">The representation of the state to transition to.</span></span></param>
        <param name="useTransitions"><span data-ttu-id="923f5-181">要使用 <see cref="T:System.Windows.VisualTransition" /> 对象进行状态切换，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="923f5-181"><see langword="true" /> to use a <see cref="T:System.Windows.VisualTransition" /> object to transition between states; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="923f5-182">使控件在状态间过渡。</span><span class="sxs-lookup"><span data-stu-id="923f5-182">Transitions a control between states.</span></span></summary>
        <returns><span data-ttu-id="923f5-183">如果控件已成功过渡到新状态，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="923f5-183"><see langword="true" /> if the control successfully transitioned to the new state; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="923f5-184"><xref:System.Windows.VisualStateManager.GoToStateCore%2A> 方法执行正确启动和停止与转换相关联的情节提要的必要逻辑。</span><span class="sxs-lookup"><span data-stu-id="923f5-184">The <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method performs the logic necessary to appropriately start and stop the storyboards that are associated with a transition.</span></span> <span data-ttu-id="923f5-185">如果控件调用 <xref:System.Windows.VisualStateManager.GoToState%2A> 来更改其状态，则 <xref:System.Windows.VisualStateManager> 执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="923f5-185">When a control calls <xref:System.Windows.VisualStateManager.GoToState%2A> to change its state, the <xref:System.Windows.VisualStateManager> does the following:</span></span>  
  
-   <span data-ttu-id="923f5-186">首先，如果控件正在转换到的 <xref:System.Windows.VisualState> 具有 <xref:System.Windows.Media.Animation.Storyboard>，则情节提要将开始。</span><span class="sxs-lookup"><span data-stu-id="923f5-186">First, if the <xref:System.Windows.VisualState> that the control is transitioning to has a <xref:System.Windows.Media.Animation.Storyboard>, the storyboard begins.</span></span> <span data-ttu-id="923f5-187">然后，如果控件所来自的 <xref:System.Windows.VisualState> 具有 <xref:System.Windows.Media.Animation.Storyboard>，则情节提要将结束。</span><span class="sxs-lookup"><span data-stu-id="923f5-187">Then, if the <xref:System.Windows.VisualState> that the control is coming from has a <xref:System.Windows.Media.Animation.Storyboard>, the storyboard ends.</span></span>  
  
-   <span data-ttu-id="923f5-188">如果控件已经处于 `stateName` 状态，<xref:System.Windows.VisualStateManager.GoToState%2A> 不会执行任何操作并返回 `true`。</span><span class="sxs-lookup"><span data-stu-id="923f5-188">If the control is already in the `stateName` state, <xref:System.Windows.VisualStateManager.GoToState%2A> takes no action and returns `true`.</span></span>  
  
-   <span data-ttu-id="923f5-189">如果 `control`的 <xref:System.Windows.Controls.ControlTemplate> 中不存在 `stateName`，<xref:System.Windows.VisualStateManager.GoToState%2A> 将不执行任何操作并返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="923f5-189">If `stateName` does not exist in the <xref:System.Windows.Controls.ControlTemplate> of `control`, <xref:System.Windows.VisualStateManager.GoToState%2A> takes no action and returns `false`.</span></span>  
  
 <span data-ttu-id="923f5-190">您可以实现自己的 <xref:System.Windows.VisualStateManager> 以提供不同的逻辑，以便在不同状态间进行转换。</span><span class="sxs-lookup"><span data-stu-id="923f5-190">You can implement your own <xref:System.Windows.VisualStateManager> to provide different logic for transitioning between states.</span></span> <span data-ttu-id="923f5-191">例如，你可以更改前面所述的逻辑，也可以提供逻辑来转换自定义动画类型。</span><span class="sxs-lookup"><span data-stu-id="923f5-191">For example, you can change the logic described previously, or you can provide logic to transition between custom animation types.</span></span>  <span data-ttu-id="923f5-192">若要实现 <xref:System.Windows.VisualStateManager>，请创建从 <xref:System.Windows.VisualStateManager> 继承的类并重写 <xref:System.Windows.VisualStateManager.GoToStateCore%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="923f5-192">To implement a <xref:System.Windows.VisualStateManager>, create a class that inherits from <xref:System.Windows.VisualStateManager> and override the <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method.</span></span> <span data-ttu-id="923f5-193">若要使用自定义类，请将 <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A> 属性设置为自定义类型的对象。</span><span class="sxs-lookup"><span data-stu-id="923f5-193">To use the custom class, set the <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A> property to an object of your custom type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseCurrentStateChanged">
      <MemberSignature Language="C#" Value="protected void RaiseCurrentStateChanged (System.Windows.VisualStateGroup stateGroup, System.Windows.VisualState oldState, System.Windows.VisualState newState, System.Windows.FrameworkElement control, System.Windows.FrameworkElement stateGroupsRoot);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseCurrentStateChanged(class System.Windows.VisualStateGroup stateGroup, class System.Windows.VisualState oldState, class System.Windows.VisualState newState, class System.Windows.FrameworkElement control, class System.Windows.FrameworkElement stateGroupsRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseCurrentStateChanged (stateGroup As VisualStateGroup, oldState As VisualState, newState As VisualState, control As FrameworkElement, stateGroupsRoot As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseCurrentStateChanged(System::Windows::VisualStateGroup ^ stateGroup, System::Windows::VisualState ^ oldState, System::Windows::VisualState ^ newState, System::Windows::FrameworkElement ^ control, System::Windows::FrameworkElement ^ stateGroupsRoot);" />
      <MemberSignature Language="F#" Value="member this.RaiseCurrentStateChanged : System.Windows.VisualStateGroup * System.Windows.VisualState * System.Windows.VisualState * System.Windows.FrameworkElement * System.Windows.FrameworkElement -&gt; unit" Usage="visualStateManager.RaiseCurrentStateChanged (stateGroup, oldState, newState, control, stateGroupsRoot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateGroup" Type="System.Windows.VisualStateGroup" />
        <Parameter Name="oldState" Type="System.Windows.VisualState" />
        <Parameter Name="newState" Type="System.Windows.VisualState" />
        <Parameter Name="control" Type="System.Windows.FrameworkElement" />
        <Parameter Name="stateGroupsRoot" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="stateGroup"><span data-ttu-id="923f5-194">发生 <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> 事件的对象。</span><span class="sxs-lookup"><span data-stu-id="923f5-194">The object that the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> event occurred on.</span></span></param>
        <param name="oldState"><span data-ttu-id="923f5-195">控件要从其过渡的状态。</span><span class="sxs-lookup"><span data-stu-id="923f5-195">The state that the control is transitioning from.</span></span></param>
        <param name="newState"><span data-ttu-id="923f5-196">控件要过渡到的状态。</span><span class="sxs-lookup"><span data-stu-id="923f5-196">The state that the control is transitioning to.</span></span></param>
        <param name="control"><span data-ttu-id="923f5-197">正在进行状态过渡的控件。</span><span class="sxs-lookup"><span data-stu-id="923f5-197">The control that is transitioning states.</span></span></param>
        <param name="stateGroupsRoot"><span data-ttu-id="923f5-198">包含 <see cref="T:System.Windows.VisualStateManager" /> 的根元素。</span><span class="sxs-lookup"><span data-stu-id="923f5-198">The root element that contains the <see cref="T:System.Windows.VisualStateManager" />.</span></span></param>
        <summary><span data-ttu-id="923f5-199">在指定的 <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> 对象上引发 <see cref="T:System.Windows.VisualStateGroup" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="923f5-199">Raises the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> event on the specified <see cref="T:System.Windows.VisualStateGroup" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="923f5-200">在控件的 <xref:System.Windows.Controls.ControlTemplate> 上设置 <xref:System.Windows.VisualStateGroup> 时，`control` 参数将设置为拥有 <xref:System.Windows.Controls.ControlTemplate>的控件。</span><span class="sxs-lookup"><span data-stu-id="923f5-200">When the <xref:System.Windows.VisualStateGroup> is set on the <xref:System.Windows.Controls.ControlTemplate> of a control, the `control` parameter is set to the control that owns <xref:System.Windows.Controls.ControlTemplate>.</span></span>  <span data-ttu-id="923f5-201">在 <xref:System.Windows.FrameworkElement>上设置 <xref:System.Windows.VisualStateGroup> 时，`control` `null`，应使用 `stateGroupsRoot` 参数。</span><span class="sxs-lookup"><span data-stu-id="923f5-201">When the <xref:System.Windows.VisualStateGroup> is set on a <xref:System.Windows.FrameworkElement>, `control` is `null` and you should use the `stateGroupsRoot` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="923f5-202"><paramref name="stateGroupsRoot" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="923f5-202"><paramref name="stateGroupsRoot" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="923f5-203">- 或 -</span><span class="sxs-lookup"><span data-stu-id="923f5-203">-or-</span></span> 
 <span data-ttu-id="923f5-204"><paramref name="newState" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="923f5-204"><paramref name="newState" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="923f5-205">当在派生类中重写 <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> 时，请确保调用基类的 "<see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> 方法，以便注册的委托接收事件。</span><span class="sxs-lookup"><span data-stu-id="923f5-205">When overriding <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="RaiseCurrentStateChanging">
      <MemberSignature Language="C#" Value="protected void RaiseCurrentStateChanging (System.Windows.VisualStateGroup stateGroup, System.Windows.VisualState oldState, System.Windows.VisualState newState, System.Windows.FrameworkElement control, System.Windows.FrameworkElement stateGroupsRoot);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseCurrentStateChanging(class System.Windows.VisualStateGroup stateGroup, class System.Windows.VisualState oldState, class System.Windows.VisualState newState, class System.Windows.FrameworkElement control, class System.Windows.FrameworkElement stateGroupsRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseCurrentStateChanging (stateGroup As VisualStateGroup, oldState As VisualState, newState As VisualState, control As FrameworkElement, stateGroupsRoot As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseCurrentStateChanging(System::Windows::VisualStateGroup ^ stateGroup, System::Windows::VisualState ^ oldState, System::Windows::VisualState ^ newState, System::Windows::FrameworkElement ^ control, System::Windows::FrameworkElement ^ stateGroupsRoot);" />
      <MemberSignature Language="F#" Value="member this.RaiseCurrentStateChanging : System.Windows.VisualStateGroup * System.Windows.VisualState * System.Windows.VisualState * System.Windows.FrameworkElement * System.Windows.FrameworkElement -&gt; unit" Usage="visualStateManager.RaiseCurrentStateChanging (stateGroup, oldState, newState, control, stateGroupsRoot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateGroup" Type="System.Windows.VisualStateGroup" />
        <Parameter Name="oldState" Type="System.Windows.VisualState" />
        <Parameter Name="newState" Type="System.Windows.VisualState" />
        <Parameter Name="control" Type="System.Windows.FrameworkElement" />
        <Parameter Name="stateGroupsRoot" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="stateGroup"><span data-ttu-id="923f5-206">发生 <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> 事件的对象。</span><span class="sxs-lookup"><span data-stu-id="923f5-206">The object that the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> event occurred on.</span></span></param>
        <param name="oldState"><span data-ttu-id="923f5-207">控件要从其过渡的状态。</span><span class="sxs-lookup"><span data-stu-id="923f5-207">The state that the control is transitioning from.</span></span></param>
        <param name="newState"><span data-ttu-id="923f5-208">控件要过渡到的状态。</span><span class="sxs-lookup"><span data-stu-id="923f5-208">The state that the control is transitioning to.</span></span></param>
        <param name="control"><span data-ttu-id="923f5-209">正在进行状态过渡的控件。</span><span class="sxs-lookup"><span data-stu-id="923f5-209">The control that is transitioning states.</span></span></param>
        <param name="stateGroupsRoot"><span data-ttu-id="923f5-210">包含 <see cref="T:System.Windows.VisualStateManager" /> 的根元素。</span><span class="sxs-lookup"><span data-stu-id="923f5-210">The root element that contains the <see cref="T:System.Windows.VisualStateManager" />.</span></span></param>
        <summary><span data-ttu-id="923f5-211">在指定的 <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> 对象上引发 <see cref="T:System.Windows.VisualStateGroup" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="923f5-211">Raises the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> event on the specified <see cref="T:System.Windows.VisualStateGroup" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="923f5-212">在控件的 <xref:System.Windows.Controls.ControlTemplate> 上设置 <xref:System.Windows.VisualStateGroup> 时，`control` 参数将设置为拥有 <xref:System.Windows.Controls.ControlTemplate>的控件。</span><span class="sxs-lookup"><span data-stu-id="923f5-212">When the <xref:System.Windows.VisualStateGroup> is set on the <xref:System.Windows.Controls.ControlTemplate> of a control, the `control` parameter is set to the control that owns <xref:System.Windows.Controls.ControlTemplate>.</span></span>  <span data-ttu-id="923f5-213">在 <xref:System.Windows.FrameworkElement>上设置 <xref:System.Windows.VisualStateGroup> 时，`control` `null`，应使用 `stateGroupsRoot` 参数。</span><span class="sxs-lookup"><span data-stu-id="923f5-213">When the <xref:System.Windows.VisualStateGroup> is set on a <xref:System.Windows.FrameworkElement>, `control` is `null` and you should use the `stateGroupsRoot` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="923f5-214"><paramref name="stateGroupsRoot" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="923f5-214"><paramref name="stateGroupsRoot" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="923f5-215">- 或 -</span><span class="sxs-lookup"><span data-stu-id="923f5-215">-or-</span></span> 
 <span data-ttu-id="923f5-216"><paramref name="newState" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="923f5-216"><paramref name="newState" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="923f5-217">当在派生类中重写 <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> 时，请确保调用基类的 "<see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> 方法，以便注册的委托接收事件。</span><span class="sxs-lookup"><span data-stu-id="923f5-217">When overriding <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="SetCustomVisualStateManager">
      <MemberSignature Language="C#" Value="public static void SetCustomVisualStateManager (System.Windows.FrameworkElement obj, System.Windows.VisualStateManager value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCustomVisualStateManager(class System.Windows.FrameworkElement obj, class System.Windows.VisualStateManager value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCustomVisualStateManager (obj As FrameworkElement, value As VisualStateManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCustomVisualStateManager(System::Windows::FrameworkElement ^ obj, System::Windows::VisualStateManager ^ value);" />
      <MemberSignature Language="F#" Value="static member SetCustomVisualStateManager : System.Windows.FrameworkElement * System.Windows.VisualStateManager -&gt; unit" Usage="System.Windows.VisualStateManager.SetCustomVisualStateManager (obj, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Windows.FrameworkElement" />
        <Parameter Name="value" Type="System.Windows.VisualStateManager" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="923f5-218">要对其设置属性的对象。</span><span class="sxs-lookup"><span data-stu-id="923f5-218">The object to set the property on.</span></span></param>
        <param name="value"><span data-ttu-id="923f5-219">切换控件状态的可视状态管理器。</span><span class="sxs-lookup"><span data-stu-id="923f5-219">The visual state manager that transitions between the states of a control.</span></span></param>
        <summary><span data-ttu-id="923f5-220">设置 <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> 附加属性。</span><span class="sxs-lookup"><span data-stu-id="923f5-220">Sets the <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualStateGroups">
      <MemberSignature Language="C#" Value="see GetVisualStateGroups" />
      <MemberSignature Language="ILAsm" Value="see GetVisualStateGroups" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateManager.VisualStateGroups" />
      <MemberSignature Language="VB.NET" Value="see GetVisualStateGroups" />
      <MemberSignature Language="F#" Value="see GetVisualStateGroups" Usage="see GetVisualStateGroups" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="923f5-221">获取或设置 <see cref="T:System.Windows.VisualStateGroup" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="923f5-221">Gets or sets a collection of <see cref="T:System.Windows.VisualStateGroup" /> objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[
 
## Remarks  
 <span data-ttu-id="923f5-222">每个 <xref:System.Windows.VisualStateGroup> 包含 <xref:System.Windows.VisualState> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="923f5-222">Each <xref:System.Windows.VisualStateGroup> contains a collection of <xref:System.Windows.VisualState> objects.</span></span> <span data-ttu-id="923f5-223"><xref:System.Windows.VisualState> 包含 <xref:System.Windows.Media.Animation.Storyboard> 对象的集合，这些对象指定控件在处于某种状态时控件的外观如何变化。</span><span class="sxs-lookup"><span data-stu-id="923f5-223">A <xref:System.Windows.VisualState> contains a collection of <xref:System.Windows.Media.Animation.Storyboard> objects that specify how the control's appearance changes when the control is in a certain state.</span></span> <span data-ttu-id="923f5-224">例如，当按下时，<xref:System.Windows.Controls.Button> 的外观可能略有不同。</span><span class="sxs-lookup"><span data-stu-id="923f5-224">For example, a <xref:System.Windows.Controls.Button> might have a slightly different appearance when it is pressed than when it is not pressed.</span></span> <span data-ttu-id="923f5-225"><xref:System.Windows.Controls.Button> 所定义的两个状态对应于按下（`"Pressed"`）时和不（`"Normal"`）。</span><span class="sxs-lookup"><span data-stu-id="923f5-225">Two states that the <xref:System.Windows.Controls.Button> defines correspond to when it is pressed (`"Pressed"`) and when it is not (`"Normal"`).</span></span>  
  
 <span data-ttu-id="923f5-226">可以通过设置控件的 <xref:System.Windows.VisualStateManager.VisualStateGroups%2A> 附加属性，将 <xref:System.Windows.VisualState> 添加到控件。</span><span class="sxs-lookup"><span data-stu-id="923f5-226">You add <xref:System.Windows.VisualState> to a control by setting the <xref:System.Windows.VisualStateManager.VisualStateGroups%2A> attached property on the control.</span></span> <span data-ttu-id="923f5-227">在同一 <xref:System.Windows.VisualStateGroup>中，将互相排斥的状态放置在一起。</span><span class="sxs-lookup"><span data-stu-id="923f5-227">You put states that are mutually exclusive to each other in the same <xref:System.Windows.VisualStateGroup>.</span></span> <span data-ttu-id="923f5-228">例如，<xref:System.Windows.Controls.CheckBox> 有两个 <xref:System.Windows.VisualStateGroup> 对象。</span><span class="sxs-lookup"><span data-stu-id="923f5-228">For example, the <xref:System.Windows.Controls.CheckBox> has two <xref:System.Windows.VisualStateGroup> objects.</span></span> <span data-ttu-id="923f5-229">其中一个包含状态、`Normal`、`MouseOver`、`Pressed`和 `Disabled`。</span><span class="sxs-lookup"><span data-stu-id="923f5-229">One contains the states, `Normal`, `MouseOver`, `Pressed`, and `Disabled`.</span></span> <span data-ttu-id="923f5-230">另一个包含状态、`Checked`、`UnChecked`和 `Indeterminate`。</span><span class="sxs-lookup"><span data-stu-id="923f5-230">The other contains the states, `Checked`, `UnChecked`, and `Indeterminate`.</span></span> <span data-ttu-id="923f5-231"><xref:System.Windows.Controls.CheckBox> 可以同时处于 `MouseOver` 和 `UnChecked` 状态，但它不能同时处于 `MouseOver` 和 `Pressed` 状态。</span><span class="sxs-lookup"><span data-stu-id="923f5-231">The <xref:System.Windows.Controls.CheckBox> can be in states `MouseOver` and `UnChecked` at the same time, but it cannot be in the `MouseOver` and `Pressed` states at the same time.</span></span>  
  
 <span data-ttu-id="923f5-232">虽然您可以将 <xref:System.Windows.VisualState> 对象添加到任何元素，但它们是使其他对象重新定义 <xref:System.Windows.Controls.Control>的视觉行为的有用方法。</span><span class="sxs-lookup"><span data-stu-id="923f5-232">Although you can add <xref:System.Windows.VisualState> objects to any element, they are a particularly useful way to enable others to redefine the visual behavior of a <xref:System.Windows.Controls.Control>.</span></span> <span data-ttu-id="923f5-233">如果创建使用 <xref:System.Windows.Controls.ControlTemplate>的自定义控件，则可以通过在其类定义中添加 <xref:System.Windows.TemplateVisualStateAttribute> 来指定控件可以处于的状态。</span><span class="sxs-lookup"><span data-stu-id="923f5-233">If you create a custom control that uses a <xref:System.Windows.Controls.ControlTemplate>, you can specify which states that control can be in by adding a <xref:System.Windows.TemplateVisualStateAttribute> on its class definition.</span></span> <span data-ttu-id="923f5-234">然后，为控件创建新 <xref:System.Windows.Controls.ControlTemplate> 的任何人都可以将 <xref:System.Windows.VisualState> 对象添加到模板中。</span><span class="sxs-lookup"><span data-stu-id="923f5-234">Then anyone who creates a new <xref:System.Windows.Controls.ControlTemplate> for your control can add <xref:System.Windows.VisualState> objects to the template.</span></span> <span data-ttu-id="923f5-235">具有相同 <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> 的状态属于同一 <xref:System.Windows.VisualStateGroup>。</span><span class="sxs-lookup"><span data-stu-id="923f5-235">States with the same <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> belong in the same <xref:System.Windows.VisualStateGroup>.</span></span>  
  
 <span data-ttu-id="923f5-236">有关如何在 <xref:System.Windows.Controls.ControlTemplate>中使用 <xref:System.Windows.VisualStateGroup> 对象的详细信息，请参阅[通过创建 System.windows.controls.controltemplate> 自定义现有控件的外观](/dotnet/framework/wpf/controls/customizing-the-appearance-of-an-existing-control)。</span><span class="sxs-lookup"><span data-stu-id="923f5-236">For more information about how to use <xref:System.Windows.VisualStateGroup> objects in a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](/dotnet/framework/wpf/controls/customizing-the-appearance-of-an-existing-control).</span></span> <span data-ttu-id="923f5-237">有关如何创建使用 <xref:System.Windows.VisualStateManager>的控件的详细信息，请参阅[创建具有可自定义外观的控件](/dotnet/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance)。</span><span class="sxs-lookup"><span data-stu-id="923f5-237">For more information about how to create controls that use the <xref:System.Windows.VisualStateManager>, see [Creating a Control That Has a Customizable Appearance](/dotnet/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance).</span></span>  
     
## Examples  
 <span data-ttu-id="923f5-238">下面的示例为包含一个 <xref:System.Windows.Controls.Grid>的 <xref:System.Windows.Controls.Button> 创建一个简单的 <xref:System.Windows.Controls.ControlTemplate>。</span><span class="sxs-lookup"><span data-stu-id="923f5-238">The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>.</span></span> <span data-ttu-id="923f5-239">它还包含一个名为 `CommonStates`的 <xref:System.Windows.VisualStateGroup>，用于定义 `MouseOver` 和 `Normal` 状态。</span><span class="sxs-lookup"><span data-stu-id="923f5-239">It also contains a <xref:System.Windows.VisualStateGroup> named `CommonStates`, which defines the `MouseOver` and `Normal` states.</span></span> <span data-ttu-id="923f5-240"><xref:System.Windows.VisualStateGroup> 还具有一个 <xref:System.Windows.VisualTransition>，它指定在用户将鼠标指针移到 <xref:System.Windows.Controls.Button>上时，<xref:System.Windows.Controls.Grid> 的每半秒时间都将从绿色更改为红色。</span><span class="sxs-lookup"><span data-stu-id="923f5-240">The <xref:System.Windows.VisualStateGroup> also has a <xref:System.Windows.VisualTransition> that specifies that it takes one half second for the <xref:System.Windows.Controls.Grid> to change from green to red when the user moves the mouse pointer over the <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualStateGroupsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VisualStateGroupsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VisualStateGroupsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.VisualStateManager.VisualStateGroupsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VisualStateGroupsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VisualStateGroupsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VisualStateGroupsProperty : System.Windows.DependencyProperty" Usage="System.Windows.VisualStateManager.VisualStateGroupsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="923f5-241">标识 <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="923f5-241">Identifies the <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
