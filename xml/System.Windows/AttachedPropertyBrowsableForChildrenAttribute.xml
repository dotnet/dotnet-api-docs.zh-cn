<Type Name="AttachedPropertyBrowsableForChildrenAttribute" FullName="System.Windows.AttachedPropertyBrowsableForChildrenAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="37cc9a2d1cf53d89565278f852c908ddf1f9da5f" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83968556" /></Metadata><TypeSignature Language="C#" Value="public sealed class AttachedPropertyBrowsableForChildrenAttribute : System.Windows.AttachedPropertyBrowsableAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AttachedPropertyBrowsableForChildrenAttribute extends System.Windows.AttachedPropertyBrowsableAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AttachedPropertyBrowsableForChildrenAttribute&#xA;Inherits AttachedPropertyBrowsableAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AttachedPropertyBrowsableForChildrenAttribute sealed : System::Windows::AttachedPropertyBrowsableAttribute" />
  <TypeSignature Language="F#" Value="type AttachedPropertyBrowsableForChildrenAttribute = class&#xA;    inherit AttachedPropertyBrowsableAttribute" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.AttachedPropertyBrowsableAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1dcdf-101">指定附加属性具有扩展至逻辑树中子元素的可浏览范围。</span><span class="sxs-lookup"><span data-stu-id="1dcdf-101">Specifies that an attached property has a browsable scope that extends to child elements in the logical tree.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dcdf-102">本 [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] 的说明中使用的术语的含义 `browsable` 与为 <xref:System.ComponentModel.BrowsableAttribute>提供的说明类似，但附加属性的可浏览状态特别与 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]的属性信息相关，因为附加属性主要是 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 的概念。</span><span class="sxs-lookup"><span data-stu-id="1dcdf-102">The meaning of the term `browsable` as used in descriptions for this [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] is analogous to the descriptions given for <xref:System.ComponentModel.BrowsableAttribute>, but the browsable state for an attached property is particularly relevant to property information for [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], because an attached property is primarily a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concept.</span></span>  
  
 <span data-ttu-id="1dcdf-103">如果此 [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] 应用于附加属性的 get 访问器，则此 [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] 指定当附加属性所有者是其他元素的父元素时可浏览附加属性。</span><span class="sxs-lookup"><span data-stu-id="1dcdf-103">When this  [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] is applied to the get accessor for an attached property, this  [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] specifies that an attached property is browsable when the attached property owner is a parent element of other elements.</span></span>  
  
 <span data-ttu-id="1dcdf-104">当使用类型说明符信息的设计器解释时，设计器应基于应用了此 [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] 的父元素，将此属性作为可浏览属性添加到逻辑树中的所有子元素。</span><span class="sxs-lookup"><span data-stu-id="1dcdf-104">When interpreted by a designer that uses type descriptor information, the designer should add this property as a browsable property to all child elements in the logical tree, based on the parent element with this  [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] applied.</span></span>  
  
 <span data-ttu-id="1dcdf-105">通常，可浏览状态与功能相似。</span><span class="sxs-lookup"><span data-stu-id="1dcdf-105">Generally, the browsable state parallels functionality.</span></span> <span data-ttu-id="1dcdf-106">例如，<xref:System.Windows.Controls.Canvas.Left%2A?displayProperty=nameWithType> 是在 <xref:System.Windows.Controls.Canvas>的子元素的元素上指定可浏览的，因为 <xref:System.Windows.Controls.Canvas> 包含用于检查子元素上的任何设置值 <xref:System.Windows.Controls.Canvas.Left%2A?displayProperty=nameWithType> 的代码。</span><span class="sxs-lookup"><span data-stu-id="1dcdf-106">For example, <xref:System.Windows.Controls.Canvas.Left%2A?displayProperty=nameWithType> is designated browsable on elements that are child elements of a <xref:System.Windows.Controls.Canvas>, because <xref:System.Windows.Controls.Canvas> includes code for checking any set values of <xref:System.Windows.Controls.Canvas.Left%2A?displayProperty=nameWithType> on child elements.</span></span>  
  
 <span data-ttu-id="1dcdf-107">此 [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] 为父元素位置支持两种类型的树检测模式：浅模式和深层模式。</span><span class="sxs-lookup"><span data-stu-id="1dcdf-107">This  [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] supports two types of tree detection modes for parent element positions:  a shallow mode, and a deep mode.</span></span> <span data-ttu-id="1dcdf-108">浅层模式（应用 <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute> [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]的默认模式）要求直接父元素为属性的所有者类型，以便可以浏览附加属性。</span><span class="sxs-lookup"><span data-stu-id="1dcdf-108">The shallow mode, which is the default mode for an applied <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute> [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)], requires that the immediate parent element be the owner type of the property in order for the attached property to be browsable.</span></span> <span data-ttu-id="1dcdf-109">通过将具有 <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> 的属性应用于 `true`来声明 deep 模式。</span><span class="sxs-lookup"><span data-stu-id="1dcdf-109">The deep mode is declared by applying the attribute with <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> as `true`.</span></span> <span data-ttu-id="1dcdf-110">Deep 模式的限制性较低，因为它只要求所有者类型位于逻辑树的上级方向中的某个位置，因此附加属性可在所有子元素上浏览，而不只是直接子元素。</span><span class="sxs-lookup"><span data-stu-id="1dcdf-110">The deep mode is less restrictive because it only requires that the owner type be somewhere in the ancestor direction of the logical tree, and therefore the attached property is browsable on all child elements, not just immediate child elements.</span></span> <span data-ttu-id="1dcdf-111">Deep 模式适用于附加属性用法，其中不应将逻辑树中的干预元素报告为真正的父元素。</span><span class="sxs-lookup"><span data-stu-id="1dcdf-111">The deep mode is applied for attached property usages where intervening elements in the logical tree should not be reported as the true parent element.</span></span> <span data-ttu-id="1dcdf-112">隐式集合（例如，在 <xref:System.Windows.Controls.Panel>的 <xref:System.Windows.Controls.Panel.Children%2A> 中是隐式的 <xref:System.Windows.Controls.UIElementCollection>）不被视为父元素，目的是此 [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] 如何声明树检测模式。</span><span class="sxs-lookup"><span data-stu-id="1dcdf-112">Implicit collections (for example, the <xref:System.Windows.Controls.UIElementCollection> that is implicit in the <xref:System.Windows.Controls.Panel.Children%2A> of a <xref:System.Windows.Controls.Panel>) are not considered to be parent elements for purposes of how this  [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] declares the tree detection mode.</span></span>  
  
 <span data-ttu-id="1dcdf-113">此 [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] 应该只应用于附加属性定义的 get 访问器。</span><span class="sxs-lookup"><span data-stu-id="1dcdf-113">This [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] should only be applied on the get accessor of attached property definitions.</span></span> <span data-ttu-id="1dcdf-114">请勿将此 [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] 应用于 set 访问器。</span><span class="sxs-lookup"><span data-stu-id="1dcdf-114">Do not apply this [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] to the set accessor.</span></span> <span data-ttu-id="1dcdf-115">虽然直观地说，是对子元素上的 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 进行可浏览的设置操作，但它是控制真正行为的父元素上的 get 访问器的存在和特性。</span><span class="sxs-lookup"><span data-stu-id="1dcdf-115">Although intuitively it is the set operation that is being made browsable for [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] on child elements, it is the presence and characteristics of the get accessor on the parent element that controls the true behavior.</span></span>  
  
 <span data-ttu-id="1dcdf-116">附加属性在子元素上是可浏览的，而不是绝对保证父元素真正以某种方式处理附加属性值。</span><span class="sxs-lookup"><span data-stu-id="1dcdf-116">Whether an attached property is browsable on a child element is not an absolute guarantee that the attached property value is really processed by the parent element in some manner.</span></span> <span data-ttu-id="1dcdf-117">此外，<xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> 值并不是绝对保证处理范围是不会超出直接父元素，也不会超出直接父元素。</span><span class="sxs-lookup"><span data-stu-id="1dcdf-117">Also, the <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> value is not an absolute guarantee that the processing scope does or does not extend beyond the immediate parent element.</span></span> <span data-ttu-id="1dcdf-118">这一切都是特定于实现的。</span><span class="sxs-lookup"><span data-stu-id="1dcdf-118">All this is implementation specific.</span></span> <span data-ttu-id="1dcdf-119">但是，此 [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] 报告可浏览状态是用于报告附加属性的使用情况信息和功能信息的最佳可用机制。</span><span class="sxs-lookup"><span data-stu-id="1dcdf-119">However, this  [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] for reporting the browsable state is the best available mechanism for reporting the usage information and functional information for an attached property.</span></span> <span data-ttu-id="1dcdf-120">因此，通常可以假定附加属性的可浏览状态类似于应用程序代码中相关父元素处理或解释子元素上的附加属性值的行为。</span><span class="sxs-lookup"><span data-stu-id="1dcdf-120">Therefore, you can generally assume that the browsable state of an attached property is analogous to the behavior of how an attached property value on a child element is processed or interpreted by the relevant parent element in your application code.</span></span>  
  
 <span data-ttu-id="1dcdf-121">有关声明附加属性的常规信息，请参阅[附加属性概述](/dotnet/framework/wpf/advanced/attached-properties-overview)。</span><span class="sxs-lookup"><span data-stu-id="1dcdf-121">For general information on declaring attached properties, see [Attached Properties Overview](/dotnet/framework/wpf/advanced/attached-properties-overview).</span></span>  
  
<a name="xamlTextUsage_AttachedPropertyBrowsableForChildrenAttribute"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="1dcdf-122">XAML 文本用法</span><span class="sxs-lookup"><span data-stu-id="1dcdf-122">XAML Text Usage</span></span>  
 <span data-ttu-id="1dcdf-123">此类型的成员通常不在 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]中使用。</span><span class="sxs-lookup"><span data-stu-id="1dcdf-123">Members of this type are not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.Windows.Markup" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttachedPropertyBrowsableForChildrenAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AttachedPropertyBrowsableForChildrenAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1dcdf-124">初始化 <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1dcdf-124">Initializes a new instance of the <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dcdf-125"><xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> 的默认值是 `false`。</span><span class="sxs-lookup"><span data-stu-id="1dcdf-125">The default for <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> is `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="attachedPropertyBrowsableForChildrenAttribute.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="1dcdf-126">要与当前 <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> 进行比较的 <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="1dcdf-126">The <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> to compare to the current <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />.</span></span></param>
        <summary><span data-ttu-id="1dcdf-127">确定当前的 <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] 是否与指定的对象相等。</span><span class="sxs-lookup"><span data-stu-id="1dcdf-127">Determines whether the current <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="1dcdf-128">如果指定的 <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> 与当前 <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1dcdf-128"><see langword="true" /> if the specified <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> is equal to the current <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dcdf-129">此实现支持由此 [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]公开的一个可设置值的值相等性 <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A>。</span><span class="sxs-lookup"><span data-stu-id="1dcdf-129">This implementation supports value equality of the one possible settable value exposed by this [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)], <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="attachedPropertyBrowsableForChildrenAttribute.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1dcdf-130">返回此 <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="1dcdf-130">Returns the hash code for this <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)].</span></span></summary>
        <returns><span data-ttu-id="1dcdf-131">32 位无符号整数值。</span><span class="sxs-lookup"><span data-stu-id="1dcdf-131">An unsigned 32-bit integer value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dcdf-132">此实现支持两个可能的哈希值，这些值基于此 [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]所公开的一个可设置的值 <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A>。</span><span class="sxs-lookup"><span data-stu-id="1dcdf-132">This implementation supports two possible hash values based on the one possible settable value exposed by this [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)], <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeDescendants">
      <MemberSignature Language="C#" Value="public bool IncludeDescendants { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeDescendants" />
      <MemberSignature Language="DocId" Value="P:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeDescendants As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeDescendants { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeDescendants : bool with get, set" Usage="System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1dcdf-133">获取或设置一个值，该值声明是否在应用此 [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] 的附加属性上使用深层模式来检测父元素。</span><span class="sxs-lookup"><span data-stu-id="1dcdf-133">Gets or sets a value that declares whether to use the deep mode for detection of parent elements on the attached property where this  [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] is applied.</span></span></summary>
        <value><span data-ttu-id="1dcdf-134">如果对于拥有附加属性的父元素的逻辑树中的所有子元素来说，附加属性都可浏览，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="1dcdf-134"><see langword="true" /> if the attached property is browsable for all child elements in the logical tree of the parent element that owns the attached property.</span></span> <span data-ttu-id="1dcdf-135">如果仅对于拥有附加属性的父元素的直接子元素来说，附加属性才是可浏览的，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1dcdf-135"><see langword="false" /> if the attached property is only browsable for immediate child elements of a parent element that owns the attached property.</span></span> <span data-ttu-id="1dcdf-136">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1dcdf-136">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dcdf-137">应用 <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute> 定义的大多数附加属性 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]，其默认值 <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> 为 `false`。</span><span class="sxs-lookup"><span data-stu-id="1dcdf-137">Most of the attached properties defined by [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] that apply <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute> do so with the default of <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> as `false`.</span></span>  
  
<a name="xamlTextUsage_IncludeDescendants"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="1dcdf-138">XAML 文本用法</span><span class="sxs-lookup"><span data-stu-id="1dcdf-138">XAML Text Usage</span></span>  
 <span data-ttu-id="1dcdf-139">此类型的成员通常不在 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]中使用。</span><span class="sxs-lookup"><span data-stu-id="1dcdf-139">Members of this type are not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
