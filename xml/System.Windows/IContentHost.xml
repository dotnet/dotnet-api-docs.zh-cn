<Type Name="IContentHost" FullName="System.Windows.IContentHost">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cdf135c011757dd297a89743593125962dbc8d56" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89813943" /></Metadata><TypeSignature Language="C#" Value="public interface IContentHost" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IContentHost" />
  <TypeSignature Language="DocId" Value="T:System.Windows.IContentHost" />
  <TypeSignature Language="VB.NET" Value="Public Interface IContentHost" />
  <TypeSignature Language="C++ CLI" Value="public interface class IContentHost" />
  <TypeSignature Language="F#" Value="type IContentHost = interface" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>此接口由承载 <see cref="T:System.Windows.ContentElement" /> 的布局实现。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetRectangles">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Rect&gt; GetRectangles (System.Windows.ContentElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;valuetype System.Windows.Rect&gt; GetRectangles(class System.Windows.ContentElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IContentHost.GetRectangles(System.Windows.ContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRectangles (child As ContentElement) As ReadOnlyCollection(Of Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Rect&gt; ^ GetRectangles(System::Windows::ContentElement ^ child);" />
      <MemberSignature Language="F#" Value="abstract member GetRectangles : System.Windows.ContentElement -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Rect&gt;" Usage="iContentHost.GetRectangles child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Rect&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.ContentElement" />
      </Parameters>
      <Docs>
        <param name="child">为其返回边框的子元素。</param>
        <summary>为子元素返回边框的集合。</summary>
        <returns>子元素的边框的集合。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">如果子元素为 NULL**。</exception>
        <exception cref="T:System.ArgumentException">如果该元素不是直接子代（例如，元素必须为 <see cref="T:System.Windows.IContentHost" /> 或 <see cref="T:System.Windows.ContentElement" /> 的直接子代的 <see cref="T:System.Windows.IContentHost" /> 的子级）。</exception>
      </Docs>
    </Member>
    <Member MemberName="HostedElements">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Windows.IInputElement&gt; HostedElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerator`1&lt;class System.Windows.IInputElement&gt; HostedElements" />
      <MemberSignature Language="DocId" Value="P:System.Windows.IContentHost.HostedElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HostedElements As IEnumerator(Of IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerator&lt;System::Windows::IInputElement ^&gt; ^ HostedElements { System::Collections::Generic::IEnumerator&lt;System::Windows::IInputElement ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostedElements : System.Collections.Generic.IEnumerator&lt;System.Windows.IInputElement&gt;" Usage="System.Windows.IContentHost.HostedElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Windows.IInputElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个枚举，其中包含所有子代 <see cref="T:System.Windows.ContentElement" /> 派生类，以及所有 <see cref="T:System.Windows.UIElement" /> 派生类，这些派生类是 <see cref="T:System.Windows.IContentHost" /> 或它的其中一个子代 <see cref="T:System.Windows.ContentElement" /> 类的直接子代。</summary>
        <value>一个枚举，其中包含所有子代 <see cref="T:System.Windows.ContentElement" /> 派生类，以及所有 <see cref="T:System.Windows.UIElement" /> 派生类，这些派生类是 <see cref="T:System.Windows.IContentHost" /> 或它的其中一个子代 <see cref="T:System.Windows.ContentElement" /> 类的直接子代。 也就是说，<see cref="T:System.Windows.IContentHost" /> 为其创建可视化表示形式（<see cref="T:System.Windows.ContentElement" /> 派生类）的元素，或是其布局由 <see cref="T:System.Windows.IContentHost" />（第一层子代 <see cref="T:System.Windows.UIElement" /> 派生类）驱动的元素。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputHitTest">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement InputHitTest (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.IInputElement InputHitTest(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IContentHost.InputHitTest(System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function InputHitTest (point As Point) As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::IInputElement ^ InputHitTest(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="abstract member InputHitTest : System.Windows.Point -&gt; System.Windows.IInputElement" Usage="iContentHost.InputHitTest point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">相对于 ContentHost 的鼠标坐标。</param>
        <summary>对子元素执行命中测试。</summary>
        <returns><see cref="T:System.Windows.IInputElement" /> 的子代，或者，如果不存在此类元素，则为 NULL****。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChildDesiredSizeChanged">
      <MemberSignature Language="C#" Value="public void OnChildDesiredSizeChanged (System.Windows.UIElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnChildDesiredSizeChanged(class System.Windows.UIElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IContentHost.OnChildDesiredSizeChanged(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnChildDesiredSizeChanged (child As UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnChildDesiredSizeChanged(System::Windows::UIElement ^ child);" />
      <MemberSignature Language="F#" Value="abstract member OnChildDesiredSizeChanged : System.Windows.UIElement -&gt; unit" Usage="iContentHost.OnChildDesiredSizeChanged child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="child"><see cref="P:System.Windows.UIElement.DesiredSize" /> 已发生更改的子元素。</param>
        <summary>在 <see cref="T:System.Windows.UIElement" /> 承载的 <see cref="T:System.Windows.IContentHost" /> 派生类更改其 <see cref="P:System.Windows.UIElement.DesiredSize" /> 时调用。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">如果子元素为 NULL**。</exception>
        <exception cref="T:System.ArgumentException">如果子元素不是直接子代（例如，子元素必须为 <see cref="T:System.Windows.IContentHost" /> 或 <see cref="T:System.Windows.ContentElement" /> 的直接子代的 <see cref="T:System.Windows.IContentHost" /> 的子级）。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
