<Type Name="ValidateValueCallback" FullName="System.Windows.ValidateValueCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ed44c3ec8484c280adfd2e49fb0d6c875096683b" /><Meta Name="ms.sourcegitcommit" Value="9506e50ec7beb4fa30206b9840dc546b035a6600" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/23/2020" /><Meta Name="ms.locfileid" Value="83900882" /></Metadata><TypeSignature Language="C#" Value="public delegate bool ValidateValueCallback(object value);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ValidateValueCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.ValidateValueCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ValidateValueCallback(value As Object) As Boolean " />
  <TypeSignature Language="C++ CLI" Value="public delegate bool ValidateValueCallback(System::Object ^ value);" />
  <TypeSignature Language="F#" Value="type ValidateValueCallback = delegate of obj -&gt; bool" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="value" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Boolean</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="value">要验证的值。</param>
    <summary>表示用作验证依赖属性有效值的回调的方法。</summary>
    <returns>如果验证了值，则为 <see langword="true" />；如果提交的值无效，则为 <see langword="false" />。</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 基于此委托的回调由某些签名 <xref:System.Windows.DependencyProperty.Register%2A?displayProperty=nameWithType> 和相关方法（如 <xref:System.Windows.DependencyProperty.RegisterAttached%2A> 和只读等效项）使用。 `validateValueCallback`如果希望在每次设置属性值的有效性时，对属性值进行特定验证，则应使用采用参数的签名。 然后，你应该实现此回调以执行实际的建议值验证。 `true`如果提交给回叫的值有效，则回调应返回， `false` 否则返回。 `false`值将在尝试了无效属性集的属性系统的特定部分产生异常，因此应用程序应准备好处理这些异常。  
  
 验证回调存储在依赖项属性标识符上，而不是依赖项属性元数据。 验证回调无权访问在其上设置属性的的特定实例 <xref:System.Windows.DependencyObject> ，并且只能影响属性通常接受的值。 如果需要可基于特定实例更改属性值的回调，则应结合使用和回调，将其应用于 <xref:System.Windows.CoerceValueCallback> <xref:System.Windows.PropertyChangedCallback> 属性的属性元数据。 你还可以将这些回调应用于应影响属性值的相关属性。 有关详细信息，请参阅[依赖属性回调和验证](/dotnet/framework/wpf/advanced/dependency-property-callbacks-and-validation)。  
  
   
  
## Examples  
 下面的示例包括此回调的实现，用于验证自定义依赖项属性的值的范围。 在这种情况下，属性值需要一个枚举，而验证确保所提供的值的计算结果为该枚举的成员。  
  
 [!code-csharp[DPCustom#ValidateValueCallback](~/samples/snippets/csharp/VS_Snippets_Wpf/DPCustom/CSharp/default.xaml.cs#validatevaluecallback)]
 [!code-vb[DPCustom#ValidateValueCallback](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DPCustom/visualbasic/default.xaml.vb#validatevaluecallback)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyProperty" />
  </Docs>
</Type>
