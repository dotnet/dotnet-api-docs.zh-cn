<Type Name="NameScope" FullName="System.Windows.NameScope">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7f1dc769353cfc6ab11b88767471f39851cc7956" /><Meta Name="ms.sourcegitcommit" Value="943c8cdbe5b47c6c296a6f4b73038bbd43da0dd2" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/12/2021" /><Meta Name="ms.locfileid" Value="100313913" /></Metadata><TypeSignature Language="C#" Value="public class NameScope : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt;, System.Collections.Generic.IDictionary&lt;string,object&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt;, System.Windows.Markup.INameScopeDictionary" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NameScope extends System.Object implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;string, object&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt;, class System.Collections.IEnumerable, class System.Windows.Markup.INameScope, class System.Windows.Markup.INameScopeDictionary" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="DocId" Value="T:System.Windows.NameScope" />
  <TypeSignature Language="VB.NET" Value="Public Class NameScope&#xA;Implements ICollection(Of KeyValuePair(Of String, Object)), IDictionary(Of String, Object), IEnumerable(Of KeyValuePair(Of String, Object)), INameScopeDictionary" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class NameScope : System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;, System::Windows::Markup::INameScopeDictionary" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type NameScope = class&#xA;    interface ICollection&lt;KeyValuePair&lt;string, obj&gt;&gt;&#xA;    interface seq&lt;KeyValuePair&lt;string, obj&gt;&gt;&#xA;    interface IEnumerable&#xA;    interface IDictionary&lt;string, obj&gt;&#xA;    interface INameScope&#xA;    interface INameScopeDictionary" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="C#" Value="public class NameScope : System.Windows.Markup.INameScope" FrameworkAlternate="netframework-3.0;netframework-3.5" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NameScope extends System.Object implements class System.Windows.Markup.INameScope" FrameworkAlternate="netframework-3.0;netframework-3.5" />
  <TypeSignature Language="VB.NET" Value="Public Class NameScope&#xA;Implements INameScope" FrameworkAlternate="netframework-3.0;netframework-3.5" />
  <TypeSignature Language="C++ CLI" Value="public ref class NameScope : System::Windows::Markup::INameScope" FrameworkAlternate="netframework-3.0;netframework-3.5" />
  <TypeSignature Language="F#" Value="type NameScope = class&#xA;    interface INameScope" FrameworkAlternate="netframework-3.0;netframework-3.5" />
  <TypeSignature Language="F#" Value="type NameScope = class&#xA;    interface INameScopeDictionary&#xA;    interface INameScope&#xA;    interface IDictionary&lt;string, obj&gt;&#xA;    interface ICollection&lt;KeyValuePair&lt;string, obj&gt;&gt;&#xA;    interface seq&lt;KeyValuePair&lt;string, obj&gt;&gt;&#xA;    interface IEnumerable" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="PresentationFramework" FromVersion="5.0.0.0" To="WindowsBase" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="PresentationFramework" FromVersion="4.0.0.0" To="WindowsBase" ToVersion="4.0.0.0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <InterfaceName>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="netframework-4.8">
      <InterfaceName>System.Windows.Markup.INameScope</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <InterfaceName>System.Windows.Markup.INameScopeDictionary</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.TypeForwardedFrom("PresentationFramework, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TypeForwardedFrom("PresentationFramework, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c12ce-101">实现对 <see cref="T:System.Windows.Markup.INameScope" /> 方法的基本 WPF 支持，这些方法用于向特定 XAML 名称范围中存储名称-对象映射或检索此类映射。</span><span class="sxs-lookup"><span data-stu-id="c12ce-101">Implements base WPF support for the <see cref="T:System.Windows.Markup.INameScope" /> methods that store or retrieve name-object mappings into a particular XAML namescope.</span></span> <span data-ttu-id="c12ce-102">添加附加属性支持，以便更简单地在元素级别动态获取或设置 XAML 名称范围的名称。</span><span class="sxs-lookup"><span data-stu-id="c12ce-102">Adds attached property support to make it simpler to get or set XAML namescope names dynamically at the element level.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c12ce-103">此类为 XAML 的 WPF 处理实现内置的 XAML 名称范围支持。</span><span class="sxs-lookup"><span data-stu-id="c12ce-103">This class implements built-in XAML namescope support for WPF treatment of XAML.</span></span> <span data-ttu-id="c12ce-104"><xref:System.Windows.NameScope> 有助于根据分析 XAML （如实例化样式和模板时）创建初始 XAML 名称范围。</span><span class="sxs-lookup"><span data-stu-id="c12ce-104"><xref:System.Windows.NameScope> assists in creation of initial XAML namescopes based on parsing XAML, such as when instantiating styles and templates.</span></span> <span data-ttu-id="c12ce-105">它还支持由 WPF XAML 处理器实现的常规 XAML 加载之外发生的进程创建 XAML 名称范围。</span><span class="sxs-lookup"><span data-stu-id="c12ce-105">It also supports creation of XAML namescopes by processes that occur outside of normal XAML loading of elements by the WPF XAML processor implementation.</span></span>  
  
 <span data-ttu-id="c12ce-106"><xref:System.Windows.NameScope> 通常比涉及使用 XAML 名称范围的常见用户代码方案更专门提供基础结构。</span><span class="sxs-lookup"><span data-stu-id="c12ce-106"><xref:System.Windows.NameScope> is generally more devoted to supplying infrastructure than for common user code scenarios that involve working with a XAML namescope.</span></span> <span data-ttu-id="c12ce-107">在大多数情况下， <xref:System.Windows.FrameworkElement.FindName%2A> 在和上公开的方法 <xref:System.Windows.FrameworkElement> <xref:System.Windows.FrameworkContentElement> 更适合用于按 XAML 定义的名称搜索元素的方法。</span><span class="sxs-lookup"><span data-stu-id="c12ce-107">For most scenarios, the <xref:System.Windows.FrameworkElement.FindName%2A> methods exposed on <xref:System.Windows.FrameworkElement> and <xref:System.Windows.FrameworkContentElement> are more appropriate methods to call to search for elements by XAML-defined name.</span></span> <span data-ttu-id="c12ce-108"><xref:System.Windows.FrameworkElement.Name%2A>和公开的属性 <xref:System.Windows.FrameworkElement> <xref:System.Windows.FrameworkContentElement> 是更适合用于将初始名称设置为标记特性的属性。</span><span class="sxs-lookup"><span data-stu-id="c12ce-108">The <xref:System.Windows.FrameworkElement.Name%2A> properties exposed by <xref:System.Windows.FrameworkElement> and <xref:System.Windows.FrameworkContentElement> are more appropriate properties to use to set the initial name as markup attributes.</span></span>  
  
 <span data-ttu-id="c12ce-109">的各种方法 <xref:System.Windows.NameScope> 由基元素和其他类使用，这些类用于维护 XAML 名称范围以便支持 <xref:System.Windows.Markup.INameScope.RegisterName%2A> 和 <xref:System.Windows.Markup.INameScope.FindName%2A> 。</span><span class="sxs-lookup"><span data-stu-id="c12ce-109">The various methods of <xref:System.Windows.NameScope> are used by base elements and other classes that maintain XAML namescopes in order to support <xref:System.Windows.Markup.INameScope.RegisterName%2A> and <xref:System.Windows.Markup.INameScope.FindName%2A>.</span></span> <span data-ttu-id="c12ce-110">通常， <xref:System.Windows.NameScope> 仅当你要为 xaml 页面的根元素处理 xaml 名称范围时，将替换或扩充基元素行为，并将其作为模板的一部分 (，这种情况下会使用) 的其余部分中单独的 XAML 名称范围。</span><span class="sxs-lookup"><span data-stu-id="c12ce-110">You generally use the API in the <xref:System.Windows.NameScope> class only if you are replacing or augmenting the base element behavior for how they process XAML namescopes for root elements of a XAML page, and as part of templates (which use a separate XAML namescope from the rest of the page).</span></span>  
  
 <span data-ttu-id="c12ce-111">在中 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] ， <xref:System.Windows.NameScope> 提供了集合接口实现，以便可以访问由 XAML 名称范围保存的名称集合，包括通过对方法的调用添加到该集合 <xref:System.Windows.NameScope.Add%2A> 。</span><span class="sxs-lookup"><span data-stu-id="c12ce-111">In [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], <xref:System.Windows.NameScope> provides collection interface implementations such that you can access the collections of names that are held by a XAML namescope, including adding to it through calls to an <xref:System.Windows.NameScope.Add%2A> method.</span></span>  
  
 <span data-ttu-id="c12ce-112">有关 XAML 名称范围概念的详细信息，请参阅 [WPF XAML 名称范围](/dotnet/framework/wpf/advanced/wpf-xaml-namescopes)。</span><span class="sxs-lookup"><span data-stu-id="c12ce-112">For more information on XAML namescope concepts, see [WPF XAML Namescopes](/dotnet/framework/wpf/advanced/wpf-xaml-namescopes).</span></span>  
  
 <span data-ttu-id="c12ce-113">XAML 名称范围中的名称必须使用特定的语法来限制可用于 API 输入的字符串 <xref:System.Windows.NameScope> 。</span><span class="sxs-lookup"><span data-stu-id="c12ce-113">Names in a XAML namescope must use a particular grammar that restricts the strings you might use for inputs of <xref:System.Windows.NameScope> API.</span></span> <span data-ttu-id="c12ce-114">请参阅 [XamlName 语法](/dotnet/framework/xaml-services/xamlname-grammar)。</span><span class="sxs-lookup"><span data-stu-id="c12ce-114">See [XamlName Grammar](/dotnet/framework/xaml-services/xamlname-grammar).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.INameScope" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameScope();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c12ce-115">初始化 <see cref="T:System.Windows.NameScope" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c12ce-115">Initializes a new instance of the <see cref="T:System.Windows.NameScope" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c12ce-116">向集合中添加一项。</span><span class="sxs-lookup"><span data-stu-id="c12ce-116">Adds an item to the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Collections.Generic.KeyValuePair&lt;string,object&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As KeyValuePair(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt; item);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Collections.Generic.KeyValuePair&lt;string, obj&gt; -&gt; unit&#xA;override this.Add : System.Collections.Generic.KeyValuePair&lt;string, obj&gt; -&gt; unit" Usage="nameScope.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="c12ce-117">一个 <see cref="T:System.Collections.Generic.KeyValuePair`2" />（键为 <see cref="T:System.String" />，值为 <see cref="T:System.Object" />），表示要添加到 XAML 名称范围中的名称映射。</span><span class="sxs-lookup"><span data-stu-id="c12ce-117">A <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (key is <see cref="T:System.String" />, value is <see cref="T:System.Object" />) that represents the name mapping to add to the XAML namescope.</span></span></param>
        <summary><span data-ttu-id="c12ce-118">向集合中添加一项。</span><span class="sxs-lookup"><span data-stu-id="c12ce-118">Adds an item to the collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c12ce-119"><paramref name="item" /> 的任一个或两个组件都为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c12ce-119">Either or both components of <paramref name="item" /> are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * obj -&gt; unit&#xA;override this.Add : string * obj -&gt; unit" Usage="nameScope.Add (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Add(`0,`1)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="c12ce-120">字符串键，即作为要添加的 XAML 名称范围映射的名称。</span><span class="sxs-lookup"><span data-stu-id="c12ce-120">The string key, which is the name of the XAML namescope mapping to add.</span></span></param>
        <param name="value"><span data-ttu-id="c12ce-121">对象值，即要添加的 XAML 名称范围映射的对象引用。</span><span class="sxs-lookup"><span data-stu-id="c12ce-121">The object value, which is the object reference of the XAML namescope mapping to add.</span></span></param>
        <summary><span data-ttu-id="c12ce-122">向集合中添加一项。</span><span class="sxs-lookup"><span data-stu-id="c12ce-122">Adds an item to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c12ce-123">此方法基本上会进行包装， <xref:System.Windows.NameScope.Add%2A> 这样就不需要 <xref:System.Collections.Generic.KeyValuePair%602> 在使用中包含类型。</span><span class="sxs-lookup"><span data-stu-id="c12ce-123">This method basically wraps <xref:System.Windows.NameScope.Add%2A> so that it is not necessary to involve the <xref:System.Collections.Generic.KeyValuePair%602> type in your usage.</span></span>  
  
 <span data-ttu-id="c12ce-124">XAML 名称范围中的名称必须使用特定的语法来限制可用于 API 输入的字符串 <xref:System.Windows.NameScope> 。</span><span class="sxs-lookup"><span data-stu-id="c12ce-124">Names in a XAML namescope must use a particular grammar that restricts the strings you might use for inputs of <xref:System.Windows.NameScope> API.</span></span> <span data-ttu-id="c12ce-125">请参阅 [XamlName 语法](/dotnet/framework/xaml-services/xamlname-grammar)。</span><span class="sxs-lookup"><span data-stu-id="c12ce-125">See [XamlName Grammar](/dotnet/framework/xaml-services/xamlname-grammar).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c12ce-126"><paramref name="key" /> 或 <paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c12ce-126"><paramref name="key" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="nameScope.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c12ce-127">从集合中移除所有项。</span><span class="sxs-lookup"><span data-stu-id="c12ce-127">Removes all items from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Collections.Generic.KeyValuePair&lt;string,object&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As KeyValuePair(Of String, Object)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt; item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : System.Collections.Generic.KeyValuePair&lt;string, obj&gt; -&gt; bool&#xA;override this.Contains : System.Collections.Generic.KeyValuePair&lt;string, obj&gt; -&gt; bool" Usage="nameScope.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="c12ce-128">要在集合中查找的项，指定为 <see cref="T:System.Collections.Generic.KeyValuePair`2" />（键为 <see cref="T:System.String" />，值为 <see cref="T:System.Object" />）。</span><span class="sxs-lookup"><span data-stu-id="c12ce-128">The item to find in the collection, specified as a <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (key is <see cref="T:System.String" />, value is <see cref="T:System.Object" />).</span></span></param>
        <summary><span data-ttu-id="c12ce-129">确定集合是否包含指定的项。</span><span class="sxs-lookup"><span data-stu-id="c12ce-129">Determines whether the collection contains a specified item.</span></span></summary>
        <returns><span data-ttu-id="c12ce-130">如果指定的 <see cref="T:System.Collections.Generic.KeyValuePair`2" /> 标识此 <see cref="T:System.Windows.NameScope" /> 中的现有映射，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="c12ce-130"><see langword="true" /> if the specified <see cref="T:System.Collections.Generic.KeyValuePair`2" /> identifies an existing mapping in this <see cref="T:System.Windows.NameScope" /> .</span></span> <span data-ttu-id="c12ce-131">如果当前的 <see cref="T:System.Collections.Generic.KeyValuePair`2" /> 中不存在指定的 <see cref="T:System.Windows.NameScope" />，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c12ce-131"><see langword="false" /> if the specified <see cref="T:System.Collections.Generic.KeyValuePair`2" /> does not exist in the current <see cref="T:System.Windows.NameScope" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c12ce-132">通常，您只对名称是否已在 XAML 名称范围中定义，并且它映射到的对象引用值重要。</span><span class="sxs-lookup"><span data-stu-id="c12ce-132">Generally you are only interested in whether a name is already defined in the XAML namescope, and what object reference value it is mapped to is immaterial.</span></span> <span data-ttu-id="c12ce-133">对于这种情况，可以改为调用 <xref:System.Windows.NameScope.ContainsKey%2A> 。</span><span class="sxs-lookup"><span data-stu-id="c12ce-133">For this scenario, you can call <xref:System.Windows.NameScope.ContainsKey%2A> instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c12ce-134"><paramref name="key" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c12ce-134"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : string -&gt; bool&#xA;override this.ContainsKey : string -&gt; bool" Usage="nameScope.ContainsKey key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="c12ce-135">要查找的字符串键。</span><span class="sxs-lookup"><span data-stu-id="c12ce-135">The string key to find.</span></span></param>
        <summary><span data-ttu-id="c12ce-136">返回此 <see cref="T:System.Windows.NameScope" /> 中是否已存在所提供的名称。</span><span class="sxs-lookup"><span data-stu-id="c12ce-136">Returns whether a provided name already exists in this <see cref="T:System.Windows.NameScope" />.</span></span></summary>
        <returns><span data-ttu-id="c12ce-137">如果指定的 <paramref name="key" /> 标识此 <see cref="T:System.Windows.NameScope" /> 中现有映射的名称，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="c12ce-137"><see langword="true" /> if the specified <paramref name="key" /> identifies a name for an existing mapping in this <see cref="T:System.Windows.NameScope" />.</span></span> <span data-ttu-id="c12ce-138">如果当前的 <paramref name="key" /> 中不存在指定的 <see cref="T:System.Windows.NameScope" />，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c12ce-138"><see langword="false" /> if the specified <paramref name="key" /> does not exist in the current <see cref="T:System.Windows.NameScope" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c12ce-139">XAML 名称范围中的名称必须使用特定的语法来限制可用于 API 输入的字符串 <xref:System.Windows.NameScope> 。</span><span class="sxs-lookup"><span data-stu-id="c12ce-139">Names in a XAML namescope must use a particular grammar that restricts the strings you might use for inputs of <xref:System.Windows.NameScope> API.</span></span> <span data-ttu-id="c12ce-140">请参阅 [XamlName 语法](/dotnet/framework/xaml-services/xamlname-grammar)。</span><span class="sxs-lookup"><span data-stu-id="c12ce-140">See [XamlName Grammar](/dotnet/framework/xaml-services/xamlname-grammar).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c12ce-141"><paramref name="key" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c12ce-141"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Collections.Generic.KeyValuePair&lt;string,object&gt;[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As KeyValuePair(Of String, Object)(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : System.Collections.Generic.KeyValuePair&lt;string, obj&gt;[] * int -&gt; unit&#xA;override this.CopyTo : System.Collections.Generic.KeyValuePair&lt;string, obj&gt;[] * int -&gt; unit" Usage="nameScope.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;[]" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="arrayIndex" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="c12ce-142">一维数组，是从集合中复制的元素的目标，并且索引必须从零开始。</span><span class="sxs-lookup"><span data-stu-id="c12ce-142">The one-dimensional array that is the destination of the elements copied from the collection The array must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="c12ce-143"><paramref name="array" /> 中从零开始的索引，从此处开始复制。</span><span class="sxs-lookup"><span data-stu-id="c12ce-143">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="c12ce-144">从特定的数组索引开始，将集合的元素复制到数组中。</span><span class="sxs-lookup"><span data-stu-id="c12ce-144">Copies the elements of the collection to an array, starting at a particular array index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.NameScope.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.NameScope.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c12ce-145">返回此 <see cref="T:System.Windows.NameScope" /> 中映射名称的集合中的项数。</span><span class="sxs-lookup"><span data-stu-id="c12ce-145">Returns the number of items in the collection of mapped names in this <see cref="T:System.Windows.NameScope" />.</span></span></summary>
        <value><span data-ttu-id="c12ce-146">集合中项的数目。</span><span class="sxs-lookup"><span data-stu-id="c12ce-146">The number of items in the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindName">
      <MemberSignature Language="C#" Value="public object FindName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FindName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.FindName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindName (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ FindName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member FindName : string -&gt; obj&#xA;override this.FindName : string -&gt; obj" Usage="nameScope.FindName name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.INameScope.FindName(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c12ce-147">要检索其对象部分的现有映射的名称部分。</span><span class="sxs-lookup"><span data-stu-id="c12ce-147">Name portion of an existing mapping to retrieve the object portion for.</span></span></param>
        <summary><span data-ttu-id="c12ce-148">根据提供的名称字符串，返回由此 <see cref="T:System.Windows.NameScope" /> 保留的 XAML 名称范围中的相应对象。</span><span class="sxs-lookup"><span data-stu-id="c12ce-148">Returns the corresponding object in the XAML namescope maintained by this <see cref="T:System.Windows.NameScope" />, based on a provided name string.</span></span></summary>
        <returns><span data-ttu-id="c12ce-149">用 <paramref name="name" /> 映射的所请求对象。</span><span class="sxs-lookup"><span data-stu-id="c12ce-149">The requested object that is mapped with <paramref name="name" />.</span></span> <span data-ttu-id="c12ce-150">如果提供的 <paramref name="name" /> 为 <see langword="null" /> 或空字符串，或者未找到匹配的对象，则可返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c12ce-150">Can return <see langword="null" /> if <paramref name="name" /> was provided as <see langword="null" /> or empty string, or if no matching object was found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c12ce-151"> (多个基元素 <xref:System.Windows.FrameworkElement> ， <xref:System.Windows.FrameworkElement>) 也公开 `FindName` 具有相同功能的方法。</span><span class="sxs-lookup"><span data-stu-id="c12ce-151">Several base elements (<xref:System.Windows.FrameworkElement>, <xref:System.Windows.FrameworkElement>) also expose a `FindName` method with identical functionality.</span></span> <span data-ttu-id="c12ce-152">基元素版本在常规逻辑树中执行 XAML 范围搜索，并向根元素进行操作。</span><span class="sxs-lookup"><span data-stu-id="c12ce-152">The base element versions perform a XAML namescope search within the conventional logical tree, working towards the root element.</span></span> <span data-ttu-id="c12ce-153">确定 XAML 名称范围后，将查询该 XAML 名称范围以获取请求的名称。</span><span class="sxs-lookup"><span data-stu-id="c12ce-153">Once the XAML namescope is determined, that XAML namescope is queried for the requested name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.FindName(System.String)" />
        <altmember cref="M:System.Windows.FrameworkContentElement.FindName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetNameScope">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.INameScope GetNameScope (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.INameScope GetNameScope(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNameScope (dependencyObject As DependencyObject) As INameScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::INameScope ^ GetNameScope(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberSignature Language="F#" Value="static member GetNameScope : System.Windows.DependencyObject -&gt; System.Windows.Markup.INameScope" Usage="System.Windows.NameScope.GetNameScope dependencyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.INameScope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject"><span data-ttu-id="c12ce-154">要从中获取 XAML 名称范围的对象。</span><span class="sxs-lookup"><span data-stu-id="c12ce-154">The object to get the XAML namescope from.</span></span></param>
        <summary><span data-ttu-id="c12ce-155">为 <see cref="P:System.Windows.NameScope.NameScope" /> 附加属性提供附加属性 get 访问器。</span><span class="sxs-lookup"><span data-stu-id="c12ce-155">Provides the attached property get accessor for the <see cref="P:System.Windows.NameScope.NameScope" /> attached property.</span></span></summary>
        <returns><span data-ttu-id="c12ce-156">以 <see cref="T:System.Windows.Markup.INameScope" /> 实例表示的 XAML 名称范围。</span><span class="sxs-lookup"><span data-stu-id="c12ce-156">A XAML namescope, as an <see cref="T:System.Windows.Markup.INameScope" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c12ce-157">此方法的目的是实现 `get` 用于 <xref:System.Windows.NameScope.NameScope%2A> 在 XAML 使用中作为附加属性使用的访问器，并提供用于在代码中执行等效操作的访问器。</span><span class="sxs-lookup"><span data-stu-id="c12ce-157">The purpose of this method is both to implement the `get` accessor for using <xref:System.Windows.NameScope.NameScope%2A> as an attached property in XAML usage, and to provide the accessor for performing the equivalent operation in code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c12ce-158"><paramref name="dependencyObject" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c12ce-158"><paramref name="dependencyObject" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.INameScope" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.NameScope.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.NameScope.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c12ce-159">获取一个值，该值指示集合是否为只读。</span><span class="sxs-lookup"><span data-stu-id="c12ce-159">Gets a value indicating whether the collection is read-only.</span></span></summary>
        <value><span data-ttu-id="c12ce-160">始终返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c12ce-160">Always returns <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.NameScope.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ key); void set(System::String ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Windows.NameScope.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Item(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="c12ce-161">映射到 get 或 set 的 XAML 名称映射的字符串名称。</span><span class="sxs-lookup"><span data-stu-id="c12ce-161">The string name for the XAML name mapping to get or set.</span></span></param>
        <summary><span data-ttu-id="c12ce-162">获取或设置具有指定键的项。</span><span class="sxs-lookup"><span data-stu-id="c12ce-162">Gets or sets the item with the specified key.</span></span></summary>
        <value><span data-ttu-id="c12ce-163">以 <paramref name="key" /> 形式提供的 XAML 名称所映射的对象的值。</span><span class="sxs-lookup"><span data-stu-id="c12ce-163">The value of the object mapped by the XAML name provided as <paramref name="key" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c12ce-164"><paramref name="key" /> 提供为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c12ce-164"><paramref name="key" /> is provided as <see langword="null" />.</span></span>  
  
<span data-ttu-id="c12ce-165">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c12ce-165">-or-</span></span> 
 <span data-ttu-id="c12ce-166"><paramref name="value" /> 作为用于设置操作的 <see langword="null" /> 提供。</span><span class="sxs-lookup"><span data-stu-id="c12ce-166"><paramref name="value" /> is provided as <see langword="null" /> for a set operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;string&gt; Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;string&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.Windows.NameScope.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ Keys { System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Generic.ICollection&lt;string&gt;" Usage="System.Windows.NameScope.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c12ce-167">获取 <see cref="T:System.Windows.NameScope" /> 字典中键的集合。</span><span class="sxs-lookup"><span data-stu-id="c12ce-167">Gets a collection of the keys in the <see cref="T:System.Windows.NameScope" /> dictionary.</span></span></summary>
        <value><span data-ttu-id="c12ce-168"><see cref="T:System.Windows.NameScope" /> 字典中键的集合。</span><span class="sxs-lookup"><span data-stu-id="c12ce-168">A collection of the keys in the <see cref="T:System.Windows.NameScope" /> dictionary.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NameScope">
      <MemberSignature Language="C#" Value="see GetNameScope, and SetNameScope" />
      <MemberSignature Language="ILAsm" Value="see GetNameScope, and SetNameScope" />
      <MemberSignature Language="DocId" Value="P:System.Windows.NameScope.NameScope" />
      <MemberSignature Language="VB.NET" Value="see GetNameScope, and SetNameScope" />
      <MemberSignature Language="F#" Value="see GetNameScope, and SetNameScope" Usage="see GetNameScope, and SetNameScope" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c12ce-169">获取或设置动态附加的 <see cref="T:System.Windows.NameScope" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="c12ce-169">Gets or sets dynamically attached <see cref="T:System.Windows.NameScope" /> instances.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c12ce-170">此附加属性需要 XAML 中的附加属性用法，或 <xref:System.Windows.NameScope.GetNameScope%2A> <xref:System.Windows.NameScope.SetNameScope%2A> 在代码中使用和访问器。</span><span class="sxs-lookup"><span data-stu-id="c12ce-170">This attached property requires attached property usage in XAML, or use of the <xref:System.Windows.NameScope.GetNameScope%2A> and <xref:System.Windows.NameScope.SetNameScope%2A> accessors in code.</span></span> <span data-ttu-id="c12ce-171">在 XAML 中设置名称范围并不常见。</span><span class="sxs-lookup"><span data-stu-id="c12ce-171">Setting the namescope in XAML is not common.</span></span> <span data-ttu-id="c12ce-172">附加属性的用法主要是为了便于将 XAML 名称范围附加到不共享 XAML 名称范围实现的继承的对象。</span><span class="sxs-lookup"><span data-stu-id="c12ce-172">The attached property usage is primarily to facilitate attaching XAML namescopes to objects that do not share inheritance for XAML namescope implementations.</span></span> <span data-ttu-id="c12ce-173"><xref:System.Windows.DependencyObject> 和派生类在本机支持此继承。</span><span class="sxs-lookup"><span data-stu-id="c12ce-173"><xref:System.Windows.DependencyObject> and derived classes support this inheritance natively.</span></span>  
  
<a name="dependencyPropertyInfo_NameScope"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c12ce-174">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="c12ce-174">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c12ce-175">标识符字段</span><span class="sxs-lookup"><span data-stu-id="c12ce-175">Identifier field</span></span>|<xref:System.Windows.NameScope.NameScopeProperty>|  
|<span data-ttu-id="c12ce-176">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="c12ce-176">Metadata properties set to `true`</span></span>|<span data-ttu-id="c12ce-177">无</span><span class="sxs-lookup"><span data-stu-id="c12ce-177">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.INameScope" />
      </Docs>
    </Member>
    <Member MemberName="NameScopeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty NameScopeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty NameScopeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.NameScope.NameScopeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NameScopeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ NameScopeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable NameScopeProperty : System.Windows.DependencyProperty" Usage="System.Windows.NameScope.NameScopeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c12ce-178">标识 <see cref="P:System.Windows.NameScope.NameScope" /> 附加属性。</span><span class="sxs-lookup"><span data-stu-id="c12ce-178">Identifies the <see cref="P:System.Windows.NameScope.NameScope" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterName">
      <MemberSignature Language="C#" Value="public void RegisterName (string name, object scopedElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterName(string name, object scopedElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.RegisterName(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterName (name As String, scopedElement As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterName(System::String ^ name, System::Object ^ scopedElement);" />
      <MemberSignature Language="F#" Value="abstract member RegisterName : string * obj -&gt; unit&#xA;override this.RegisterName : string * obj -&gt; unit" Usage="nameScope.RegisterName (name, scopedElement)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="scopedElement" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c12ce-179">要用于映射给定对象的名称。</span><span class="sxs-lookup"><span data-stu-id="c12ce-179">The name to use for mapping the given object.</span></span></param>
        <param name="scopedElement"><span data-ttu-id="c12ce-180">要映射到所提供名称的对象。</span><span class="sxs-lookup"><span data-stu-id="c12ce-180">The object to be mapped to the provided name.</span></span></param>
        <summary><span data-ttu-id="c12ce-181">将新的名称-对象对注册到当前的 XAML 名称范围中。</span><span class="sxs-lookup"><span data-stu-id="c12ce-181">Registers a new name-object pair into the current XAML namescope.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c12ce-182">提供的 <paramref name="name" /> 或 <paramref name="scopedElement" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c12ce-182"><paramref name="name" /> or <paramref name="scopedElement" /> was provided as <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c12ce-183">提供的 <paramref name="name" /> 为空字符串</span><span class="sxs-lookup"><span data-stu-id="c12ce-183"><paramref name="name" /> was provided as empty string</span></span> 
<span data-ttu-id="c12ce-184">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c12ce-184">-or-</span></span> 
 <span data-ttu-id="c12ce-185">提供的 <paramref name="name" /> 包含对 XAML 名称无效的字符，因此被分析程序拒绝</span><span class="sxs-lookup"><span data-stu-id="c12ce-185"><paramref name="name" /> provided was rejected by the parser, because it contained characters that are invalid for a XAML name</span></span> 
<span data-ttu-id="c12ce-186">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c12ce-186">-or-</span></span> 
 <span data-ttu-id="c12ce-187">提供的 <paramref name="name" /> 导致注册重复的名称。</span><span class="sxs-lookup"><span data-stu-id="c12ce-187"><paramref name="name" /> provided would result in a duplicate name registration.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.INameScope" />
        <altmember cref="M:System.Windows.FrameworkElement.RegisterName(System.String,System.Object)" />
        <altmember cref="M:System.Windows.FrameworkContentElement.RegisterName(System.String,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c12ce-188">从集合中移除特定对象。</span><span class="sxs-lookup"><span data-stu-id="c12ce-188">Removes the specific object from the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Collections.Generic.KeyValuePair&lt;string,object&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As KeyValuePair(Of String, Object)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt; item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Collections.Generic.KeyValuePair&lt;string, obj&gt; -&gt; bool&#xA;override this.Remove : System.Collections.Generic.KeyValuePair&lt;string, obj&gt; -&gt; bool" Usage="nameScope.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="c12ce-189">要从集合中移除的对象，指定为 <see cref="T:System.Collections.Generic.KeyValuePair`2" />（键为 <see cref="T:System.String" />，值为 <see cref="T:System.Object" />）。</span><span class="sxs-lookup"><span data-stu-id="c12ce-189">The object to remove from the collection, specified as a <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (key is <see cref="T:System.String" />, value is <see cref="T:System.Object" />).</span></span></param>
        <summary><span data-ttu-id="c12ce-190">从集合中移除特定对象。</span><span class="sxs-lookup"><span data-stu-id="c12ce-190">Removes the specific object from the collection.</span></span></summary>
        <returns><span data-ttu-id="c12ce-191">如果从集合中成功移除了项，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c12ce-191"><see langword="true" /> if item was successfully removed from the collection, otherwise <see langword="false" />.</span></span> <span data-ttu-id="c12ce-192">如果在集合中没有找到该项，还会返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c12ce-192">Also returns <see langword="false" /> if the item was not found in the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c12ce-193">由于 <xref:System.Windows.NameScope> 是字典，因此没有第一次出现的概念; 任何指定 <xref:System.Collections.Generic.KeyValuePair%602> 的都是唯一的。</span><span class="sxs-lookup"><span data-stu-id="c12ce-193">Because <xref:System.Windows.NameScope> is a dictionary there is no concept of first occurrence; any given <xref:System.Collections.Generic.KeyValuePair%602> is guaranteed unique.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Remove : string -&gt; bool&#xA;override this.Remove : string -&gt; bool" Usage="nameScope.Remove key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="c12ce-194">字符串键，这是要移除的 XAML 名称范围映射的名称。</span><span class="sxs-lookup"><span data-stu-id="c12ce-194">The string key, which is the name of the XAML namescope mapping to remove.</span></span></param>
        <summary><span data-ttu-id="c12ce-195">从集合中移除指定名称的映射。</span><span class="sxs-lookup"><span data-stu-id="c12ce-195">Removes a mapping for a specified name from the collection.</span></span></summary>
        <returns><span data-ttu-id="c12ce-196">如果从集合中成功移除了项，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c12ce-196"><see langword="true" /> if item was successfully removed from the collection, otherwise <see langword="false" />.</span></span> <span data-ttu-id="c12ce-197">如果在集合中没有找到该项，还会返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c12ce-197">Also returns <see langword="false" /> if the item was not found in the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c12ce-198">此方法 <xref:System.Windows.NameScope.UnregisterName%2A> `false` 在中以其他方式引发异常的情况下进行包装 <xref:System.Windows.NameScope.UnregisterName%2A> 。</span><span class="sxs-lookup"><span data-stu-id="c12ce-198">This method basically wraps <xref:System.Windows.NameScope.UnregisterName%2A>, returning `false` in cases that otherwise would have raised exceptions in <xref:System.Windows.NameScope.UnregisterName%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNameScope">
      <MemberSignature Language="C#" Value="public static void SetNameScope (System.Windows.DependencyObject dependencyObject, System.Windows.Markup.INameScope value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetNameScope(class System.Windows.DependencyObject dependencyObject, class System.Windows.Markup.INameScope value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetNameScope (dependencyObject As DependencyObject, value As INameScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetNameScope(System::Windows::DependencyObject ^ dependencyObject, System::Windows::Markup::INameScope ^ value);" />
      <MemberSignature Language="F#" Value="static member SetNameScope : System.Windows.DependencyObject * System.Windows.Markup.INameScope -&gt; unit" Usage="System.Windows.NameScope.SetNameScope (dependencyObject, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.Markup.INameScope" />
      </Parameters>
      <Docs>
        <param name="dependencyObject"><span data-ttu-id="c12ce-199">要为其更改 XAML 名称范围的对象。</span><span class="sxs-lookup"><span data-stu-id="c12ce-199">Object to change XAML namescope for.</span></span></param>
        <param name="value"><span data-ttu-id="c12ce-200">使用接口转换的新 XAML 名称范围。</span><span class="sxs-lookup"><span data-stu-id="c12ce-200">The new XAML namescope, using an interface cast.</span></span></param>
        <summary><span data-ttu-id="c12ce-201">为 <see cref="P:System.Windows.NameScope.NameScope" /> 附加属性提供附加属性 set 访问器。</span><span class="sxs-lookup"><span data-stu-id="c12ce-201">Provides the attached property set accessor for the <see cref="P:System.Windows.NameScope.NameScope" /> attached property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c12ce-202">此方法的目的是 `set` 使用 <xref:System.Windows.NameScope.NameScope%2A> 作为 XAML 用法中的附加属性使用的访问器，并提供用于在代码中执行等效操作的访问器。</span><span class="sxs-lookup"><span data-stu-id="c12ce-202">The purpose of this method is both to act as the `set` accessor for using <xref:System.Windows.NameScope.NameScope%2A> as an attached property in XAML usage, and to provide the accessor for performing the equivalent operation in code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c12ce-203"><paramref name="dependencyObject" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c12ce-203"><paramref name="dependencyObject" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.INameScope" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; IEnumerable&lt;KeyValuePair&lt;string,object&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;System#String,System#Object&gt;&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of String, Object)) Implements IEnumerable(Of KeyValuePair(Of String, Object)).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt;&#xA;override this.System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt;" Usage="nameScope.System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c12ce-204">返回循环访问集合的枚举数。</span><span class="sxs-lookup"><span data-stu-id="c12ce-204">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="c12ce-205">循环访问集合的枚举器。</span><span class="sxs-lookup"><span data-stu-id="c12ce-205">An enumerator that iterates through a collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="nameScope.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c12ce-206">返回循环访问集合的枚举数。</span><span class="sxs-lookup"><span data-stu-id="c12ce-206">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="c12ce-207">循环访问集合的枚举器。</span><span class="sxs-lookup"><span data-stu-id="c12ce-207">An enumerator that iterates through a collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (string key, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(string key, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As String, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetValue(System::String ^ key, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="abstract member TryGetValue : string * obj -&gt; bool&#xA;override this.TryGetValue : string * obj -&gt; bool" Usage="nameScope.TryGetValue (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="value" Type="System.Object" RefType="out" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="c12ce-208">要获取的值的键。</span><span class="sxs-lookup"><span data-stu-id="c12ce-208">The key of the value to get.</span></span></param>
        <param name="value"><span data-ttu-id="c12ce-209">当此方法返回时，如果找到指定的键，则其中包含与该键关联的值；否则为 null 对象。</span><span class="sxs-lookup"><span data-stu-id="c12ce-209">When this method returns, contains the value associated with the specified key, if the key is found; otherwise, a null object.</span></span> <span data-ttu-id="c12ce-210">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="c12ce-210">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="c12ce-211">获取与指定键关联的值。</span><span class="sxs-lookup"><span data-stu-id="c12ce-211">Gets the value associated with the specified key.</span></span></summary>
        <returns><span data-ttu-id="c12ce-212">如果 <see cref="T:System.Windows.NameScope" /> 包含以 <paramref name="key" /> 形式提供的名称的映射，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="c12ce-212"><see langword="true" /> if the <see cref="T:System.Windows.NameScope" /> contains a mapping for the name provided as <paramref name="key" />.</span></span> <span data-ttu-id="c12ce-213">否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c12ce-213">Otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterName">
      <MemberSignature Language="C#" Value="public void UnregisterName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.UnregisterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnregisterName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member UnregisterName : string -&gt; unit&#xA;override this.UnregisterName : string -&gt; unit" Usage="nameScope.UnregisterName name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.INameScope.UnregisterName(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c12ce-214">要删除的映射的名称。</span><span class="sxs-lookup"><span data-stu-id="c12ce-214">The name of the mapping to remove.</span></span></param>
        <summary><span data-ttu-id="c12ce-215">从 XAML 名称范围中删除名称对象映射。</span><span class="sxs-lookup"><span data-stu-id="c12ce-215">Removes a name-object mapping from the XAML namescope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c12ce-216">在调用此方法之前，您可以使用 <xref:System.Windows.NameScope.FindName%2A> 来确定是否存在特定的名称-对象映射。</span><span class="sxs-lookup"><span data-stu-id="c12ce-216">Before calling this method, you can use <xref:System.Windows.NameScope.FindName%2A> to determine whether a specific name-object mapping exists.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c12ce-217"><paramref name="name" /> 是作为空字符串提供的。</span><span class="sxs-lookup"><span data-stu-id="c12ce-217"><paramref name="name" /> was provided as empty string.</span></span>  
  
<span data-ttu-id="c12ce-218">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c12ce-218">-or-</span></span> 
 <span data-ttu-id="c12ce-219">提供的 <paramref name="name" /> 尚未注册。</span><span class="sxs-lookup"><span data-stu-id="c12ce-219"><paramref name="name" /> provided had not been registered.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c12ce-220"><paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c12ce-220"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.INameScope" />
        <altmember cref="M:System.Windows.FrameworkElement.UnregisterName(System.String)" />
        <altmember cref="M:System.Windows.FrameworkContentElement.UnregisterName(System.String)" />
        <altmember cref="M:System.Windows.NameScope.RegisterName(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;object&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;object&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Windows.NameScope.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As ICollection(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::Object ^&gt; ^ Values { System::Collections::Generic::ICollection&lt;System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Generic.ICollection&lt;obj&gt;" Usage="System.Windows.NameScope.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c12ce-221">获取 <see cref="T:System.Windows.NameScope" /> 字典中值的集合。</span><span class="sxs-lookup"><span data-stu-id="c12ce-221">Gets a collection of the values in the <see cref="T:System.Windows.NameScope" /> dictionary.</span></span></summary>
        <value><span data-ttu-id="c12ce-222"><see cref="T:System.Windows.NameScope" /> 字典中值的集合。</span><span class="sxs-lookup"><span data-stu-id="c12ce-222">A collection of the values in the <see cref="T:System.Windows.NameScope" /> dictionary.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
