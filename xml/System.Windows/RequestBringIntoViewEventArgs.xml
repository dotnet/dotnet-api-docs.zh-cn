<Type Name="RequestBringIntoViewEventArgs" FullName="System.Windows.RequestBringIntoViewEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eb3da99316bed4783a032df948747b9689054af7" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89723260" /></Metadata><TypeSignature Language="C#" Value="public class RequestBringIntoViewEventArgs : System.Windows.RoutedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RequestBringIntoViewEventArgs extends System.Windows.RoutedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RequestBringIntoViewEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class RequestBringIntoViewEventArgs&#xA;Inherits RoutedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class RequestBringIntoViewEventArgs : System::Windows::RoutedEventArgs" />
  <TypeSignature Language="F#" Value="type RequestBringIntoViewEventArgs = class&#xA;    inherit RoutedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.RoutedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5c1c5-101">为 <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> 路由事件提供数据。</span><span class="sxs-lookup"><span data-stu-id="5c1c5-101">Provides data for the <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> routed event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c1c5-102"><xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType>当你从该元素调用时，该事件由元素引发 <xref:System.Windows.FrameworkElement.BringIntoView%2A> 。</span><span class="sxs-lookup"><span data-stu-id="5c1c5-102">The <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> event is raised by elements when you call <xref:System.Windows.FrameworkElement.BringIntoView%2A> from that element.</span></span> <span data-ttu-id="5c1c5-103">通常，此路由事件不由源处理。</span><span class="sxs-lookup"><span data-stu-id="5c1c5-103">Generally, this routed event is not handled by the source.</span></span> <span data-ttu-id="5c1c5-104">不实现可滚动区域的中间类或剪切内容不应处理事件的类似概念。</span><span class="sxs-lookup"><span data-stu-id="5c1c5-104">Intermediate classes that do not implement scrollable regions or similar concepts that clip content should not handle the event.</span></span>  <span data-ttu-id="5c1c5-105">应该允许事件冒泡到实现可滚动区域或指定的父元素 <xref:System.Windows.UIElement.ClipToBounds%2A> `false` 。</span><span class="sxs-lookup"><span data-stu-id="5c1c5-105">The event should be permitted to bubble to parent elements that implement a scrollable region or otherwise specify <xref:System.Windows.UIElement.ClipToBounds%2A> `false`.</span></span> <span data-ttu-id="5c1c5-106">此类父元素通常为事件提供类处理 <xref:System.Windows.FrameworkElement.RequestBringIntoView> ，即只要给定元素请求在剪辑区域内可查看，就会发生必要的呈现逻辑。</span><span class="sxs-lookup"><span data-stu-id="5c1c5-106">Such parent elements typically provide class handling for the <xref:System.Windows.FrameworkElement.RequestBringIntoView> event, which is where the necessary rendering logic occurs whenever a given element requests that it be made viewable within the clipping region.</span></span>  
  
 <span data-ttu-id="5c1c5-107">内容元素可能会导致事件由其内容宿主 (通过 <xref:System.Windows.FrameworkContentElement.BringIntoView%2A> <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> 从内容主机) 调用和引发来引发。</span><span class="sxs-lookup"><span data-stu-id="5c1c5-107">Content elements can cause the event to be raised by their content hosts (through calling <xref:System.Windows.FrameworkContentElement.BringIntoView%2A> and raising <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> from the content host).</span></span> <span data-ttu-id="5c1c5-108">同样，可以通过 helper 方法请求使逻辑树元素进入视图 <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="5c1c5-108">Similarly, you can request logical tree elements to be brought into view with the helper method <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="5c1c5-109"><xref:System.Windows.Controls.ListBox>实现一个相关但不同的方法 <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A> 。</span><span class="sxs-lookup"><span data-stu-id="5c1c5-109">A <xref:System.Windows.Controls.ListBox> implements a related but different method <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.ScrollViewer" />
    <altmember cref="T:System.Windows.Controls.Primitives.ScrollBar" />
  </Docs>
  <Members>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberSignature Language="F#" Value="override this.InvokeEventHandler : Delegate * obj -&gt; unit" Usage="requestBringIntoViewEventArgs.InvokeEventHandler (genericHandler, genericTarget)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler"><span data-ttu-id="5c1c5-110">以特定于类型的方式调用的一般处理程序。</span><span class="sxs-lookup"><span data-stu-id="5c1c5-110">The generic handler to call in a type-specific way.</span></span></param>
        <param name="genericTarget"><span data-ttu-id="5c1c5-111">要对其调用处理程序的目标。</span><span class="sxs-lookup"><span data-stu-id="5c1c5-111">The target to call the handler on.</span></span></param>
        <summary><span data-ttu-id="5c1c5-112">以特定于类型的方式调用事件处理程序，这样做可以提高事件系统效率。</span><span class="sxs-lookup"><span data-stu-id="5c1c5-112">Invokes event handlers in a type-specific way, which can increase event system efficiency.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c1c5-113">此实现将泛型处理程序强制转换为 <xref:System.Windows.RequestBringIntoViewEventHandler> ，然后调用它。</span><span class="sxs-lookup"><span data-stu-id="5c1c5-113">This implementation casts the generic handler as a <xref:System.Windows.RequestBringIntoViewEventHandler> and then invokes it.</span></span> <span data-ttu-id="5c1c5-114">有关此实现模式及其原因的详细信息，请参阅 <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> 和 [路由事件概述](/dotnet/framework/wpf/advanced/routed-events-overview)。</span><span class="sxs-lookup"><span data-stu-id="5c1c5-114">For details on this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](/dotnet/framework/wpf/advanced/routed-events-overview).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.RoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="TargetObject">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject TargetObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject TargetObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RequestBringIntoViewEventArgs.TargetObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetObject As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ TargetObject { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetObject : System.Windows.DependencyObject" Usage="System.Windows.RequestBringIntoViewEventArgs.TargetObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c1c5-115">获取为响应事件应使之可见的对象。</span><span class="sxs-lookup"><span data-stu-id="5c1c5-115">Gets the object that should be made visible in response to the event.</span></span></summary>
        <value><span data-ttu-id="5c1c5-116">调用 <see cref="M:System.Windows.FrameworkElement.BringIntoView" /> 的对象。</span><span class="sxs-lookup"><span data-stu-id="5c1c5-116">The object that called <see cref="M:System.Windows.FrameworkElement.BringIntoView" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c1c5-117">此对象通常是返回的相同对象 <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="5c1c5-117">This object is typically the same object as returned by <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.RoutedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="TargetRect">
      <MemberSignature Language="C#" Value="public System.Windows.Rect TargetRect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect TargetRect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RequestBringIntoViewEventArgs.TargetRect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetRect As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Rect TargetRect { System::Windows::Rect get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetRect : System.Windows.Rect" Usage="System.Windows.RequestBringIntoViewEventArgs.TargetRect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c1c5-118">获取对象坐标空间（应使该坐标空间可见）内的矩形区域。</span><span class="sxs-lookup"><span data-stu-id="5c1c5-118">Gets the rectangular region in the object's coordinate space which should be made visible.</span></span></summary>
        <value><span data-ttu-id="5c1c5-119">请求的矩形空间。</span><span class="sxs-lookup"><span data-stu-id="5c1c5-119">The requested rectangular space.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c1c5-120">如果 <xref:System.Windows.FrameworkElement.BringIntoView%2A> 为引发事件而调用的签名未指定目标矩形，则此属性可能是 <xref:System.Windows.Rect.Empty%2A> 结构的值 <xref:System.Windows.Rect> 。</span><span class="sxs-lookup"><span data-stu-id="5c1c5-120">If the signature of <xref:System.Windows.FrameworkElement.BringIntoView%2A> that was invoked to raise the event didn't specify a target rectangle, this property may be the <xref:System.Windows.Rect.Empty%2A> value of the <xref:System.Windows.Rect> structure.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" />
      </Docs>
    </Member>
  </Members>
</Type>
