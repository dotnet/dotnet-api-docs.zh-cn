<Type Name="UIPropertyMetadata" FullName="System.Windows.UIPropertyMetadata">
  <Metadata><Meta Name="ms.openlocfilehash" Value="130ed06d7f15dc5a91e799d14c91498eb4b2ff3b" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86714582" /></Metadata><TypeSignature Language="C#" Value="public class UIPropertyMetadata : System.Windows.PropertyMetadata" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UIPropertyMetadata extends System.Windows.PropertyMetadata" />
  <TypeSignature Language="DocId" Value="T:System.Windows.UIPropertyMetadata" />
  <TypeSignature Language="VB.NET" Value="Public Class UIPropertyMetadata&#xA;Inherits PropertyMetadata" />
  <TypeSignature Language="C++ CLI" Value="public ref class UIPropertyMetadata : System::Windows::PropertyMetadata" />
  <TypeSignature Language="F#" Value="type UIPropertyMetadata = class&#xA;    inherit PropertyMetadata" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.PropertyMetadata</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="44da1-101">为在核心级别具有呈现/用户界面影响的非框架属性提供属性元数据。</span><span class="sxs-lookup"><span data-stu-id="44da1-101">Provides property metadata for non-framework properties that do have rendering/user interface impact at the core level.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44da1-102"><xref:System.Windows.FrameworkPropertyMetadata> 从此类派生的 () 是更常见的元数据类，用于还具有呈现/用户界面影响的框架级属性。</span><span class="sxs-lookup"><span data-stu-id="44da1-102"><xref:System.Windows.FrameworkPropertyMetadata> (derived from this class) is the more common metadata class used for framework-level properties that also have rendering/user interface impact.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.FrameworkPropertyMetadata" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="44da1-103">初始化 <see cref="T:System.Windows.UIPropertyMetadata" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="44da1-103">Initializes a new instance of the <see cref="T:System.Windows.UIPropertyMetadata" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIPropertyMetadata ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIPropertyMetadata.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UIPropertyMetadata();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="44da1-104">初始化 <see cref="T:System.Windows.UIPropertyMetadata" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="44da1-104">Initializes a new instance of the <see cref="T:System.Windows.UIPropertyMetadata" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIPropertyMetadata (object defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIPropertyMetadata.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (defaultValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UIPropertyMetadata(System::Object ^ defaultValue);" />
      <MemberSignature Language="F#" Value="new System.Windows.UIPropertyMetadata : obj -&gt; System.Windows.UIPropertyMetadata" Usage="new System.Windows.UIPropertyMetadata defaultValue" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="defaultValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="defaultValue"><span data-ttu-id="44da1-105">依赖项对象的默认值，通常作为某种特定类型的值提供。</span><span class="sxs-lookup"><span data-stu-id="44da1-105">The default value of the dependency property, usually provided as a value of some specific type.</span></span></param>
        <summary><span data-ttu-id="44da1-106">用属性的指定默认值初始化 <see cref="T:System.Windows.UIPropertyMetadata" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="44da1-106">Initializes a new instance of the <see cref="T:System.Windows.UIPropertyMetadata" /> class, with the specified default value for the property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIPropertyMetadata (System.Windows.PropertyChangedCallback propertyChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.PropertyChangedCallback propertyChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyChangedCallback As PropertyChangedCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UIPropertyMetadata(System::Windows::PropertyChangedCallback ^ propertyChangedCallback);" />
      <MemberSignature Language="F#" Value="new System.Windows.UIPropertyMetadata : System.Windows.PropertyChangedCallback -&gt; System.Windows.UIPropertyMetadata" Usage="new System.Windows.UIPropertyMetadata propertyChangedCallback" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="propertyChangedCallback" Type="System.Windows.PropertyChangedCallback" />
      </Parameters>
      <Docs>
        <param name="propertyChangedCallback"><span data-ttu-id="44da1-107">对处理程序实现的引用，每当属性的有效值更改时，属性系统都将调用该处理程序实现。</span><span class="sxs-lookup"><span data-stu-id="44da1-107">Reference to a handler implementation that is to be called by the property system whenever the effective value of the property changes.</span></span></param>
        <summary><span data-ttu-id="44da1-108">用指定的 PropertyChanged 回调初始化 <see cref="T:System.Windows.UIPropertyMetadata" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="44da1-108">Initializes a new instance of the <see cref="T:System.Windows.UIPropertyMetadata" /> class, with the specified PropertyChanged callback.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIPropertyMetadata (object defaultValue, System.Windows.PropertyChangedCallback propertyChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object defaultValue, class System.Windows.PropertyChangedCallback propertyChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (defaultValue As Object, propertyChangedCallback As PropertyChangedCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UIPropertyMetadata(System::Object ^ defaultValue, System::Windows::PropertyChangedCallback ^ propertyChangedCallback);" />
      <MemberSignature Language="F#" Value="new System.Windows.UIPropertyMetadata : obj * System.Windows.PropertyChangedCallback -&gt; System.Windows.UIPropertyMetadata" Usage="new System.Windows.UIPropertyMetadata (defaultValue, propertyChangedCallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="defaultValue" Type="System.Object" />
        <Parameter Name="propertyChangedCallback" Type="System.Windows.PropertyChangedCallback" />
      </Parameters>
      <Docs>
        <param name="defaultValue"><span data-ttu-id="44da1-109">依赖项对象的默认值，通常作为某种特定类型的值提供。</span><span class="sxs-lookup"><span data-stu-id="44da1-109">The default value of the dependency property, usually provided as a value of some specific type.</span></span></param>
        <param name="propertyChangedCallback"><span data-ttu-id="44da1-110">对处理程序实现的引用，每当属性的有效值更改时，属性系统都将调用该处理程序实现。</span><span class="sxs-lookup"><span data-stu-id="44da1-110">Reference to a handler implementation that is to be called by the property system whenever the effective value of the property changes.</span></span></param>
        <summary><span data-ttu-id="44da1-111">用指定的 PropertyChanged 回调初始化 <see cref="T:System.Windows.UIPropertyMetadata" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="44da1-111">Initializes a new instance of the <see cref="T:System.Windows.UIPropertyMetadata" /> class, with the specified PropertyChanged callback.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIPropertyMetadata (object defaultValue, System.Windows.PropertyChangedCallback propertyChangedCallback, System.Windows.CoerceValueCallback coerceValueCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object defaultValue, class System.Windows.PropertyChangedCallback propertyChangedCallback, class System.Windows.CoerceValueCallback coerceValueCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (defaultValue As Object, propertyChangedCallback As PropertyChangedCallback, coerceValueCallback As CoerceValueCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UIPropertyMetadata(System::Object ^ defaultValue, System::Windows::PropertyChangedCallback ^ propertyChangedCallback, System::Windows::CoerceValueCallback ^ coerceValueCallback);" />
      <MemberSignature Language="F#" Value="new System.Windows.UIPropertyMetadata : obj * System.Windows.PropertyChangedCallback * System.Windows.CoerceValueCallback -&gt; System.Windows.UIPropertyMetadata" Usage="new System.Windows.UIPropertyMetadata (defaultValue, propertyChangedCallback, coerceValueCallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="defaultValue" Type="System.Object" />
        <Parameter Name="propertyChangedCallback" Type="System.Windows.PropertyChangedCallback" />
        <Parameter Name="coerceValueCallback" Type="System.Windows.CoerceValueCallback" />
      </Parameters>
      <Docs>
        <param name="defaultValue"><span data-ttu-id="44da1-112">依赖项对象的默认值，通常作为某种特定类型的值提供。</span><span class="sxs-lookup"><span data-stu-id="44da1-112">The default value of the dependency property, usually provided as a value of some specific type.</span></span></param>
        <param name="propertyChangedCallback"><span data-ttu-id="44da1-113">对处理程序实现的引用，每当属性的有效值更改时，属性系统都将调用该处理程序实现。</span><span class="sxs-lookup"><span data-stu-id="44da1-113">Reference to a handler implementation that is to be called by the property system whenever the effective value of the property changes.</span></span></param>
        <param name="coerceValueCallback"><span data-ttu-id="44da1-114">对处理程序实现的引用，每当属性系统对该属性调用 <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> 时都将调用此处理程序实现。</span><span class="sxs-lookup"><span data-stu-id="44da1-114">Reference to a handler implementation that is to be called whenever the property system calls <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> against this property.</span></span></param>
        <summary><span data-ttu-id="44da1-115">用指定的默认值和回调初始化 <see cref="T:System.Windows.UIPropertyMetadata" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="44da1-115">Initializes a new instance of the <see cref="T:System.Windows.UIPropertyMetadata" /> class, with the specified default value and callbacks.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIPropertyMetadata (object defaultValue, System.Windows.PropertyChangedCallback propertyChangedCallback, System.Windows.CoerceValueCallback coerceValueCallback, bool isAnimationProhibited);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object defaultValue, class System.Windows.PropertyChangedCallback propertyChangedCallback, class System.Windows.CoerceValueCallback coerceValueCallback, bool isAnimationProhibited) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (defaultValue As Object, propertyChangedCallback As PropertyChangedCallback, coerceValueCallback As CoerceValueCallback, isAnimationProhibited As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UIPropertyMetadata(System::Object ^ defaultValue, System::Windows::PropertyChangedCallback ^ propertyChangedCallback, System::Windows::CoerceValueCallback ^ coerceValueCallback, bool isAnimationProhibited);" />
      <MemberSignature Language="F#" Value="new System.Windows.UIPropertyMetadata : obj * System.Windows.PropertyChangedCallback * System.Windows.CoerceValueCallback * bool -&gt; System.Windows.UIPropertyMetadata" Usage="new System.Windows.UIPropertyMetadata (defaultValue, propertyChangedCallback, coerceValueCallback, isAnimationProhibited)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="defaultValue" Type="System.Object" />
        <Parameter Name="propertyChangedCallback" Type="System.Windows.PropertyChangedCallback" />
        <Parameter Name="coerceValueCallback" Type="System.Windows.CoerceValueCallback" />
        <Parameter Name="isAnimationProhibited" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="defaultValue"><span data-ttu-id="44da1-116">依赖项对象的默认值，通常作为某种特定类型的值提供。</span><span class="sxs-lookup"><span data-stu-id="44da1-116">The default value of the dependency property, usually provided as a value of some specific type.</span></span></param>
        <param name="propertyChangedCallback"><span data-ttu-id="44da1-117">对处理程序实现的引用，每当属性的有效值更改时，属性系统都将调用该处理程序实现。</span><span class="sxs-lookup"><span data-stu-id="44da1-117">Reference to a handler implementation that is to be called by the property system whenever the effective value of the property changes.</span></span></param>
        <param name="coerceValueCallback"><span data-ttu-id="44da1-118">对处理程序实现的引用，每当属性系统对该属性调用 <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> 时都将调用此处理程序实现。</span><span class="sxs-lookup"><span data-stu-id="44da1-118">Reference to a handler implementation that is to be called whenever the property system calls <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> against this property.</span></span></param>
        <param name="isAnimationProhibited"><span data-ttu-id="44da1-119">设置为 <see langword="true" /> 以防止属性系统对该元数据应用到的属性进行动画处理。</span><span class="sxs-lookup"><span data-stu-id="44da1-119">Set to <see langword="true" /> to prevent the property system from animating the property that this metadata is applied to.</span></span> <span data-ttu-id="44da1-120">如果尝试对此类属性进行动画处理，它们将引发运行时异常。</span><span class="sxs-lookup"><span data-stu-id="44da1-120">Such properties will raise run time exceptions if animations of them are attempted.</span></span> <span data-ttu-id="44da1-121">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="44da1-121">The default is <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="44da1-122">用指定的默认值和回调以及用于在属性上禁用动画的布尔值初始化 <see cref="T:System.Windows.UIPropertyMetadata" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="44da1-122">Initializes a new instance of the <see cref="T:System.Windows.UIPropertyMetadata" /> class, with the specified default value and callbacks, and a Boolean used to disable animations on the property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAnimationProhibited">
      <MemberSignature Language="C#" Value="public bool IsAnimationProhibited { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAnimationProhibited" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIPropertyMetadata.IsAnimationProhibited" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAnimationProhibited As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAnimationProhibited { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsAnimationProhibited : bool with get, set" Usage="System.Windows.UIPropertyMetadata.IsAnimationProhibited" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44da1-123">获取或设置一个值，声明是否应在应用了包含元数据实例的依赖项对象上禁用动画。</span><span class="sxs-lookup"><span data-stu-id="44da1-123">Gets or sets a value declaring whether animations should be disabled on the dependency property where the containing metadata instance is applied.</span></span></summary>
        <value><span data-ttu-id="44da1-124"><see langword="true" /> 指示不允许动画；<see langword="false" /> 指示允许动画。</span><span class="sxs-lookup"><span data-stu-id="44da1-124"><see langword="true" /> indicates that animations are disallowed; <see langword="false" /> indicates that animations are allowed.</span></span> <span data-ttu-id="44da1-125">默认值为 <see langword="false" />（允许动画）。</span><span class="sxs-lookup"><span data-stu-id="44da1-125">The default is <see langword="false" /> (animations allowed).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44da1-126">通常，可以对框架实现 Api 中可用的默认依赖属性 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 进行动画处理。</span><span class="sxs-lookup"><span data-stu-id="44da1-126">In general, the default dependency properties available in the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] framework implementation APIs can be animated.</span></span> <span data-ttu-id="44da1-127">您可以 `true` 在自己的自定义依赖项属性的元数据中将此属性设置为，以在其上禁用动画。</span><span class="sxs-lookup"><span data-stu-id="44da1-127">You might set this property to `true` in the metadata of your own custom dependency property to disable animations on it.</span></span>  
  
 <span data-ttu-id="44da1-128">如果具有此值的属性 `true` 尝试用作动画目标，则会引发运行时异常。</span><span class="sxs-lookup"><span data-stu-id="44da1-128">If a property with this value `true` attempts to be used as an animation target, a runtime exception will be raised.</span></span>  
  
 <span data-ttu-id="44da1-129">的任何派生类的属性 <xref:System.Windows.PropertyMetadata> 通常在对象模型中定义为可读写。</span><span class="sxs-lookup"><span data-stu-id="44da1-129">Properties on any derived classes of <xref:System.Windows.PropertyMetadata> are normally defined in the object model as read-write.</span></span> <span data-ttu-id="44da1-130">这样就可以在实例初始化后进行调整。</span><span class="sxs-lookup"><span data-stu-id="44da1-130">This is so they can be adjusted after initialization of the instance.</span></span> <span data-ttu-id="44da1-131">但是，在调用、或的过程中使用元数据后 <xref:System.Windows.DependencyProperty.Register%2A> ， <xref:System.Windows.DependencyProperty.AddOwner%2A> <xref:System.Windows.DependencyProperty.OverrideMetadata%2A> 属性系统将会密封元数据实例，传达元数据的细节的任何属性现在被视为不可变。</span><span class="sxs-lookup"><span data-stu-id="44da1-131">However, once the metadata is consumed as part of a call to <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, or <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, the property system will seal that metadata instance and any properties that convey the specifics of the metadata are now considered immutable.</span></span> <span data-ttu-id="44da1-132">如果尝试设置 <xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A> 一次 <xref:System.Windows.PropertyMetadata.IsSealed%2A> ， `true` 此元数据实例将引发异常。</span><span class="sxs-lookup"><span data-stu-id="44da1-132">Attempting to set <xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A> once <xref:System.Windows.PropertyMetadata.IsSealed%2A> is `true` on this metadata instance will raise an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
