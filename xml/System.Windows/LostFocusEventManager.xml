<Type Name="LostFocusEventManager" FullName="System.Windows.LostFocusEventManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a9cfef41e4a6f7d950ddefbd1df3802912a37456" /><Meta Name="ms.sourcegitcommit" Value="9506e50ec7beb4fa30206b9840dc546b035a6600" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/23/2020" /><Meta Name="ms.locfileid" Value="86978140" /></Metadata><TypeSignature Language="C#" Value="public class LostFocusEventManager : System.Windows.WeakEventManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LostFocusEventManager extends System.Windows.WeakEventManager" />
  <TypeSignature Language="DocId" Value="T:System.Windows.LostFocusEventManager" />
  <TypeSignature Language="VB.NET" Value="Public Class LostFocusEventManager&#xA;Inherits WeakEventManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class LostFocusEventManager : System::Windows::WeakEventManager" />
  <TypeSignature Language="F#" Value="type LostFocusEventManager = class&#xA;    inherit WeakEventManager" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.WeakEventManager</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="42247-101">提供 <see cref="T:System.Windows.WeakEventManager" /> 实现，以便使用“弱事件侦听器”模式连接 <see cref="E:System.Windows.UIElement.LostFocus" /> 或 <see cref="E:System.Windows.ContentElement.LostFocus" /> 事件的侦听器。</span><span class="sxs-lookup"><span data-stu-id="42247-101">Provides a <see cref="T:System.Windows.WeakEventManager" /> implementation so that you can use the "weak event listener" pattern to attach listeners for the <see cref="E:System.Windows.UIElement.LostFocus" /> or <see cref="E:System.Windows.ContentElement.LostFocus" /> events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42247-102">为了成为此模式中的侦听器，侦听器对象必须实现 <xref:System.Windows.IWeakEventListener> 。</span><span class="sxs-lookup"><span data-stu-id="42247-102">In order to be listeners in this pattern, your listener objects must implement <xref:System.Windows.IWeakEventListener>.</span></span> <span data-ttu-id="42247-103">不需要 <xref:System.Windows.IWeakEventListener> 在作为事件源的类上实现。</span><span class="sxs-lookup"><span data-stu-id="42247-103">You do not need to implement <xref:System.Windows.IWeakEventListener> on the class that is the source of the events.</span></span>  
  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="42247-104">数据绑定使用此 <xref:System.Windows.WeakEventManager> 操作，这样，更新绑定的内部类就可以 <xref:System.Windows.UIElement.LostFocus?displayProperty=nameWithType> 在作为 <xref:System.Windows.ContentElement.LostFocus?displayProperty=nameWithType> 绑定目标的对象上附加或事件的侦听器。</span><span class="sxs-lookup"><span data-stu-id="42247-104">data binding uses this <xref:System.Windows.WeakEventManager> so that internal classes that update bindings can attach listeners for a <xref:System.Windows.UIElement.LostFocus?displayProperty=nameWithType> or <xref:System.Windows.ContentElement.LostFocus?displayProperty=nameWithType> event on an object that is the target of a binding.</span></span> <span data-ttu-id="42247-105">这支持 <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus> 数据绑定模式的通知，而无需创建对数据绑定目标的强引用。</span><span class="sxs-lookup"><span data-stu-id="42247-105">This supports notification for the <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus> mode of data binding, without creating strong references to data binding targets.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.WeakEventManager" />
    <altmember cref="T:System.Windows.IWeakEventListener" />
  </Docs>
  <Members>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public static void AddHandler (System.Windows.DependencyObject source, EventHandler&lt;System.Windows.RoutedEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddHandler(class System.Windows.DependencyObject source, class System.EventHandler`1&lt;class System.Windows.RoutedEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LostFocusEventManager.AddHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddHandler (source As DependencyObject, handler As EventHandler(Of RoutedEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddHandler(System::Windows::DependencyObject ^ source, EventHandler&lt;System::Windows::RoutedEventArgs ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddHandler : System.Windows.DependencyObject * EventHandler&lt;System.Windows.RoutedEventArgs&gt; -&gt; unit" Usage="System.Windows.LostFocusEventManager.AddHandler (source, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.RoutedEventArgs&gt;" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="42247-106">引发 <see cref="E:System.Windows.UIElement.LostFocus" /> 或  <see cref="E:System.Windows.ContentElement.LostFocus" /> 事件的源对象。</span><span class="sxs-lookup"><span data-stu-id="42247-106">The source object that the raises the <see cref="E:System.Windows.UIElement.LostFocus" /> or <see cref="E:System.Windows.ContentElement.LostFocus" /> event.</span></span></param>
        <param name="handler"><span data-ttu-id="42247-107">创建处理 <see cref="E:System.Windows.UIElement.LostFocus" /> 或 <see cref="E:System.Windows.ContentElement.LostFocus" /> 事件的委托。</span><span class="sxs-lookup"><span data-stu-id="42247-107">The delegate that handles the <see cref="E:System.Windows.UIElement.LostFocus" /> or <see cref="E:System.Windows.ContentElement.LostFocus" /> event.</span></span></param>
        <summary><span data-ttu-id="42247-108">添加指定的事件处理程序，当指定的源引发 <see cref="E:System.Windows.UIElement.LostFocus" /> 或 <see cref="E:System.Windows.ContentElement.LostFocus" /> 事件时进行调用。</span><span class="sxs-lookup"><span data-stu-id="42247-108">Adds the specified event handler, which is called when specified source raises the <see cref="E:System.Windows.UIElement.LostFocus" /> or <see cref="E:System.Windows.ContentElement.LostFocus" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42247-109">使用此方法可以指定要用于订阅或事件的事件处理程序 <xref:System.Windows.UIElement.LostFocus?displayProperty=nameWithType> <xref:System.Windows.ContentElement.LostFocus?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="42247-109">Use this method to specify the event handler you want to use to subscribe to the <xref:System.Windows.UIElement.LostFocus?displayProperty=nameWithType> or <xref:System.Windows.ContentElement.LostFocus?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="42247-110">在使用此方法时，您的侦听器对象不需要实现 <xref:System.Windows.IWeakEventListener> 接口。</span><span class="sxs-lookup"><span data-stu-id="42247-110">When you use this method, your listener object does not need to implement the <xref:System.Windows.IWeakEventListener> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="42247-111"><paramref name="handler" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="42247-111"><paramref name="handler" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddListener">
      <MemberSignature Language="C#" Value="public static void AddListener (System.Windows.DependencyObject source, System.Windows.IWeakEventListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddListener(class System.Windows.DependencyObject source, class System.Windows.IWeakEventListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LostFocusEventManager.AddListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddListener (source As DependencyObject, listener As IWeakEventListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddListener(System::Windows::DependencyObject ^ source, System::Windows::IWeakEventListener ^ listener);" />
      <MemberSignature Language="F#" Value="static member AddListener : System.Windows.DependencyObject * System.Windows.IWeakEventListener -&gt; unit" Usage="System.Windows.LostFocusEventManager.AddListener (source, listener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.DependencyObject" />
        <Parameter Name="listener" Type="System.Windows.IWeakEventListener" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="42247-112">带事件的对象。</span><span class="sxs-lookup"><span data-stu-id="42247-112">The object with the event.</span></span></param>
        <param name="listener"><span data-ttu-id="42247-113">要作为侦听器添加的对象。</span><span class="sxs-lookup"><span data-stu-id="42247-113">The object to add as a listener.</span></span></param>
        <summary><span data-ttu-id="42247-114">将提供的侦听器添加到提供的源上的侦听器列表中。</span><span class="sxs-lookup"><span data-stu-id="42247-114">Adds the provided listener to the list of listeners on the provided source.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.WeakEventManager" />
        <altmember cref="T:System.Windows.IWeakEventListener" />
      </Docs>
    </Member>
    <Member MemberName="NewListenerList">
      <MemberSignature Language="C#" Value="protected override System.Windows.WeakEventManager.ListenerList NewListenerList ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.WeakEventManager/ListenerList NewListenerList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LostFocusEventManager.NewListenerList" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function NewListenerList () As WeakEventManager.ListenerList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::WeakEventManager::ListenerList ^ NewListenerList();" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="F#" Value="abstract member NewListenerList : unit -&gt; System.Windows.WeakEventManager.ListenerList&#xA;override this.NewListenerList : unit -&gt; System.Windows.WeakEventManager.ListenerList" Usage="lostFocusEventManager.NewListenerList " FrameworkAlternate="net-5.0" />
      <MemberSignature Language="F#" Value="override this.NewListenerList : unit -&gt; System.Windows.WeakEventManager.ListenerList" Usage="lostFocusEventManager.NewListenerList " FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WeakEventManager+ListenerList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="42247-115">返回包含 <see cref="E:System.Windows.UIElement.LostFocus" /> or <see cref="E:System.Windows.ContentElement.LostFocus" /> 事件侦听器的新对象。</span><span class="sxs-lookup"><span data-stu-id="42247-115">Returns a new object to contain listeners to the <see cref="E:System.Windows.UIElement.LostFocus" /> or <see cref="E:System.Windows.ContentElement.LostFocus" /> event.</span></span></summary>
        <returns><span data-ttu-id="42247-116">包含 <see cref="E:System.Windows.UIElement.LostFocus" /> 或 <see cref="E:System.Windows.ContentElement.LostFocus" /> 事件侦听器的新对象。</span><span class="sxs-lookup"><span data-stu-id="42247-116">A new object to contain listeners to the <see cref="E:System.Windows.UIElement.LostFocus" /> or <see cref="E:System.Windows.ContentElement.LostFocus" /> event.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveHandler (System.Windows.DependencyObject source, EventHandler&lt;System.Windows.RoutedEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveHandler(class System.Windows.DependencyObject source, class System.EventHandler`1&lt;class System.Windows.RoutedEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LostFocusEventManager.RemoveHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveHandler (source As DependencyObject, handler As EventHandler(Of RoutedEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveHandler(System::Windows::DependencyObject ^ source, EventHandler&lt;System::Windows::RoutedEventArgs ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveHandler : System.Windows.DependencyObject * EventHandler&lt;System.Windows.RoutedEventArgs&gt; -&gt; unit" Usage="System.Windows.LostFocusEventManager.RemoveHandler (source, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.RoutedEventArgs&gt;" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="42247-117">引发 <see cref="E:System.Windows.UIElement.LostFocus" /> 或  <see cref="E:System.Windows.ContentElement.LostFocus" /> 事件的源对象。</span><span class="sxs-lookup"><span data-stu-id="42247-117">The source object that the raises the <see cref="E:System.Windows.UIElement.LostFocus" /> or <see cref="E:System.Windows.ContentElement.LostFocus" /> event.</span></span></param>
        <param name="handler"><span data-ttu-id="42247-118">创建处理 <see cref="E:System.Windows.UIElement.LostFocus" /> 或 <see cref="E:System.Windows.ContentElement.LostFocus" /> 事件的委托。</span><span class="sxs-lookup"><span data-stu-id="42247-118">The delegate that handles the <see cref="E:System.Windows.UIElement.LostFocus" /> or <see cref="E:System.Windows.ContentElement.LostFocus" /> event.</span></span></param>
        <summary><span data-ttu-id="42247-119">从指定源中移除指定的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="42247-119">Removes the specified event handler from the specified source.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="42247-120"><paramref name="handler" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="42247-120"><paramref name="handler" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveListener">
      <MemberSignature Language="C#" Value="public static void RemoveListener (System.Windows.DependencyObject source, System.Windows.IWeakEventListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveListener(class System.Windows.DependencyObject source, class System.Windows.IWeakEventListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LostFocusEventManager.RemoveListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveListener (source As DependencyObject, listener As IWeakEventListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveListener(System::Windows::DependencyObject ^ source, System::Windows::IWeakEventListener ^ listener);" />
      <MemberSignature Language="F#" Value="static member RemoveListener : System.Windows.DependencyObject * System.Windows.IWeakEventListener -&gt; unit" Usage="System.Windows.LostFocusEventManager.RemoveListener (source, listener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.DependencyObject" />
        <Parameter Name="listener" Type="System.Windows.IWeakEventListener" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="42247-121">要从中移除侦听器的对象。</span><span class="sxs-lookup"><span data-stu-id="42247-121">The object to remove the listener from.</span></span></param>
        <param name="listener"><span data-ttu-id="42247-122">要移除的侦听器。</span><span class="sxs-lookup"><span data-stu-id="42247-122">The listener to remove.</span></span></param>
        <summary><span data-ttu-id="42247-123">将指定的侦听器从提供的源上的侦听器列表中移除。</span><span class="sxs-lookup"><span data-stu-id="42247-123">Removes the specified listener from the list of listeners on the provided source.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.WeakEventManager" />
        <altmember cref="T:System.Windows.IWeakEventListener" />
      </Docs>
    </Member>
    <Member MemberName="StartListening">
      <MemberSignature Language="C#" Value="protected override void StartListening (object source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void StartListening(object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LostFocusEventManager.StartListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub StartListening (source As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void StartListening(System::Object ^ source);" />
      <MemberSignature Language="F#" Value="abstract member StartListening : obj -&gt; unit&#xA;override this.StartListening : obj -&gt; unit" Usage="lostFocusEventManager.StartListening source" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="F#" Value="override this.StartListening : obj -&gt; unit" Usage="lostFocusEventManager.StartListening source" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="42247-124">要在其上开始侦听相关 <see cref="E:System.Windows.UIElement.LostFocus" /> 事件的对象。</span><span class="sxs-lookup"><span data-stu-id="42247-124">The object on which to start listening for the pertinent <see cref="E:System.Windows.UIElement.LostFocus" /> event.</span></span></param>
        <summary><span data-ttu-id="42247-125">开始侦听给定源上的 <see cref="E:System.Windows.UIElement.LostFocus" /> 事件，将内部类处理程序连接到该源。</span><span class="sxs-lookup"><span data-stu-id="42247-125">Begins listening for the <see cref="E:System.Windows.UIElement.LostFocus" /> event on the given source, attaching an internal class handler to that source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42247-126">将为所提供的源检查类型以查看它是否为 <xref:System.Windows.UIElement> 或 <xref:System.Windows.ContentElement> ，然后将相应事件的类处理程序添加到该源。</span><span class="sxs-lookup"><span data-stu-id="42247-126">The provided source is checked for type to see if it is <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement> , and then adds the class handler for the appropriate event to that source.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostFocus" />
        <altmember cref="E:System.Windows.ContentElement.LostFocus" />
        <altmember cref="T:System.Windows.WeakEventManager" />
        <altmember cref="T:System.Windows.IWeakEventListener" />
      </Docs>
    </Member>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="protected override void StopListening (object source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void StopListening(object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LostFocusEventManager.StopListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub StopListening (source As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void StopListening(System::Object ^ source);" />
      <MemberSignature Language="F#" Value="abstract member StopListening : obj -&gt; unit&#xA;override this.StopListening : obj -&gt; unit" Usage="lostFocusEventManager.StopListening source" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="F#" Value="override this.StopListening : obj -&gt; unit" Usage="lostFocusEventManager.StopListening source" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="42247-127">要在其上停止侦听 <see cref="E:System.Windows.UIElement.LostFocus" /> 的源对象。</span><span class="sxs-lookup"><span data-stu-id="42247-127">The source object on which to stop listening for <see cref="E:System.Windows.UIElement.LostFocus" />.</span></span></param>
        <summary><span data-ttu-id="42247-128">停止侦听给定源上的 <see cref="E:System.Windows.UIElement.LostFocus" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="42247-128">Stops listening for the <see cref="E:System.Windows.UIElement.LostFocus" /> event on the given source.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.WeakEventManager" />
        <altmember cref="T:System.Windows.IWeakEventListener" />
      </Docs>
    </Member>
  </Members>
</Type>
