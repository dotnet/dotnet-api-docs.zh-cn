<Type Name="FrameworkCompatibilityPreferences" FullName="System.Windows.FrameworkCompatibilityPreferences">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d8fbc5bed07ce5e98f4ea9e865e5c892c76d5f1d" /><Meta Name="ms.sourcegitcommit" Value="f828282420515ef705e09bbdb6c22116df98b5e3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="83413799" /></Metadata><TypeSignature Language="C#" Value="public static class FrameworkCompatibilityPreferences" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FrameworkCompatibilityPreferences extends System.Object" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5" />
  <TypeSignature Language="DocId" Value="T:System.Windows.FrameworkCompatibilityPreferences" />
  <TypeSignature Language="VB.NET" Value="Public Class FrameworkCompatibilityPreferences" />
  <TypeSignature Language="C++ CLI" Value="public ref class FrameworkCompatibilityPreferences abstract sealed" />
  <TypeSignature Language="F#" Value="type FrameworkCompatibilityPreferences = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed FrameworkCompatibilityPreferences extends System.Object" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>包含指定应用程序相对于位于 PresentationFramework 程序集中的 WPF 功能的行为方式的属性。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AreInactiveSelectionHighlightBrushKeysSupported">
      <MemberSignature Language="C#" Value="public static bool AreInactiveSelectionHighlightBrushKeysSupported { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AreInactiveSelectionHighlightBrushKeysSupported" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property AreInactiveSelectionHighlightBrushKeysSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AreInactiveSelectionHighlightBrushKeysSupported { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AreInactiveSelectionHighlightBrushKeysSupported : bool with get, set" Usage="System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置指示应用程序是否应对非活动所选项目的颜色使用 <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightBrush" /> 和 <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush" /> 属性。</summary>
        <value>如果应用程序应将 <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightBrush" /> 和 <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush" /> 属性用于非活动选择项的颜色，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性的默认值取决于您的应用程序针对哪个版本的 WPF。  如果你的应用面向 WPF 4.0 或更低版本，则默认值为 `false` 。  如果你的应用面向 WPF 4.5，则默认值为 `true` 。  如果使用此属性来更改 WPF 的行为，则必须在应用程序生存期的早期更改该属性的值，例如在从应用程序继承的类的构造函数中。  在读取值后，不能再次更改。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepTextBoxDisplaySynchronizedWithTextProperty">
      <MemberSignature Language="C#" Value="public static bool KeepTextBoxDisplaySynchronizedWithTextProperty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool KeepTextBoxDisplaySynchronizedWithTextProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property KeepTextBoxDisplaySynchronizedWithTextProperty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool KeepTextBoxDisplaySynchronizedWithTextProperty { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepTextBoxDisplaySynchronizedWithTextProperty : bool with get, set" Usage="System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，此值指示数据绑定 <see cref="T:System.Windows.Controls.TextBox" /> 是否应显示与源的 <see cref="P:System.Windows.Controls.TextBox.Text" /> 属性值一致的字符串。</summary>
        <value><see langword="true" />如果数据绑定 <see cref="T:System.Windows.Controls.TextBox" /> 应显示一个字符串，该字符串与源的属性的值相同， <see cref="P:System.Windows.Controls.TextBox.Text" /> 则为; 否则为 <see langword="false" /> 。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性的默认值取决于您的应用程序针对哪个版本的 WPF。  如果你的应用面向 WPF 4.0 或更低版本，则默认值为 `false` 。  如果你的应用面向 WPF 4.5，则默认值为 `true` 。  如果使用此属性来更改 WPF 的行为，则必须在应用程序生存期的早期更改该属性的值，例如在从应用程序继承的类的构造函数中。  在读取值后，不能再次更改。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldThrowOnCopyOrCutFailure">
      <MemberSignature Language="C#" Value="public static bool ShouldThrowOnCopyOrCutFailure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool ShouldThrowOnCopyOrCutFailure" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ShouldThrowOnCopyOrCutFailure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool ShouldThrowOnCopyOrCutFailure { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShouldThrowOnCopyOrCutFailure : bool with get, set" Usage="System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，指示 <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> 实例中失败的复制或剪切操作是否会导致 <see cref="T:System.Runtime.InteropServices.ExternalException" />。</summary>
        <value>如果 <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> 实例中失败的复制或剪切操作会导致 <see cref="T:System.Runtime.InteropServices.ExternalException" />，则为 <see langword="true" />；否则为 <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果剪贴板操作失败，例如，如果使用**HRESULT 0x800401D0 （CLIPBRD_E_CANT_OPEN）** 错误，则 <xref:System.Runtime.InteropServices.ExternalException> 会引发相应的（这是一种 ExternalException 类型）。  
  
 由于 Win32 `OpenClipboard` API 全局运行，因此编写良好的应用程序应在 `CloseClipboard` 完成其剪贴板操作后立即调用相应的 API。 否则，在同一会话中运行的其他应用程序将无法访问剪贴板函数。  
  
 在 WPF 中，这种拒绝对剪贴板的访问通常会悄悄地忽略。 但是，应用程序可以选择 `ExternalException` 通过将 <xref:System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure%2A> 标志设置为来接收失败 `true` 。 但是，选择接收异常还要求应用程序 <xref:System.Windows.Input.ApplicationCommands.Cut%2A> 通过处理和 <xref:System.Windows.Input.ApplicationCommands.Copy%2A> RoutedUICommands <xref:System.Windows.Input.CommandBinding> ，然后将该绑定应用于应用程序中的所有 system.windows.controls.primitives.textboxbase.textchanged> 控件（ <xref:System.Windows.Controls.TextBox> 和 <xref:System.Windows.Controls.RichTextBox> ）。 应用程序应确保它处理由 System.windows.input.commandbinding> 的执行的处理程序中的复制和剪切操作产生的 ExternalExceptions。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
