<Type Name="FileLogTraceListener" FullName="Microsoft.VisualBasic.Logging.FileLogTraceListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2d5458a6fb7477719b93b43b9e6a3838f59d8e29" /><Meta Name="ms.sourcegitcommit" Value="13a6cb6fba7e05947f15d8d6cc802703ae9c21d5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/18/2020" /><Meta Name="ms.locfileid" Value="90796859" /></Metadata><TypeSignature Language="C#" Value="public class FileLogTraceListener : System.Diagnostics.TraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileLogTraceListener extends System.Diagnostics.TraceListener" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class FileLogTraceListener&#xA;Inherits TraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileLogTraceListener : System::Diagnostics::TraceListener" />
  <TypeSignature Language="F#" Value="type FileLogTraceListener = class&#xA;    inherit TraceListener" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="65f68-101">提供一个简单的侦听器，用于将日志记录输出指引至文件。</span><span class="sxs-lookup"><span data-stu-id="65f68-101">Provides a simple listener that directs logging output to file.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65f68-102">此 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 类提供了自动维护功能，可根据需要每天或按应用程序存档日志文件。</span><span class="sxs-lookup"><span data-stu-id="65f68-102">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class provides automated maintenance capabilities to archive log files as needed, on a daily or per-application basis.</span></span> <span data-ttu-id="65f68-103">此自动存档功能有助于降低开发人员和管理员的维护责任。</span><span class="sxs-lookup"><span data-stu-id="65f68-103">This automatic archival functionality helps reduce the maintenance responsibilities of developers and administrators.</span></span>  
  
 <span data-ttu-id="65f68-104"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>可将的实例添加到 <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType> 或 <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> 集合，以将日志记录的输出重定向到文本文件。</span><span class="sxs-lookup"><span data-stu-id="65f68-104">An instance of <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> can be added to the <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType> or <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collections to redirect output from logging to a text file.</span></span> <span data-ttu-id="65f68-105">此类的实例还可以添加到 `My.Application.Log` `My.Log` Visual Basic 应用程序中的 Web 应用程序) 或 (。</span><span class="sxs-lookup"><span data-stu-id="65f68-105">Instances of this class can also be added to `My.Application.Log` or `My.Log` (for Web applications) in Visual Basic applications.</span></span> <span data-ttu-id="65f68-106">有关详细信息，请参阅 [演练：更改 My. Log 写入信息的位置](/dotnet/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information)`.`</span><span class="sxs-lookup"><span data-stu-id="65f68-106">For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](/dotnet/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information)`.`</span></span>  
  
 <span data-ttu-id="65f68-107">此类的主要功能是：</span><span class="sxs-lookup"><span data-stu-id="65f68-107">The main features of this class are:</span></span>  
  
1.  <span data-ttu-id="65f68-108">*存档功能*。</span><span class="sxs-lookup"><span data-stu-id="65f68-108">*Archival functionality*.</span></span> <span data-ttu-id="65f68-109">此类生成的日志文件根据基名称和日期命名，以及一个数字来区分日志文件与日志的后续版本。</span><span class="sxs-lookup"><span data-stu-id="65f68-109">The log files generated by this class are named according to the base name and the date, along with a number to distinguish the log file from successive versions of the log.</span></span> <span data-ttu-id="65f68-110">根据需要创建新的日志文件。</span><span class="sxs-lookup"><span data-stu-id="65f68-110">New log files are created on an as-needed basis.</span></span>  
  
     <span data-ttu-id="65f68-111">文件名的显式形式为 `baseName` [- `dateStamp` ] [- `version` ] .log，其中：</span><span class="sxs-lookup"><span data-stu-id="65f68-111">The explicit form of the file name is `baseName`[-`dateStamp`][-`version`].log, where:</span></span>  
  
    -   <span data-ttu-id="65f68-112">`baseName`部分是由属性指定的基本日志名称 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-112">The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
    -   <span data-ttu-id="65f68-113">`dateStamp`部分的格式为 "yyyy-mm-dd"，当为或时，将显示它 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-113">The `dateStamp` part has the format "YYYY-MM-DD", and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span></span>  
  
    -   <span data-ttu-id="65f68-114">如果需要多个具有相同和的日志文件 `baseName` `dateStamp` ，则会在文件名中 `version` 添加该部分 `Integer` 。</span><span class="sxs-lookup"><span data-stu-id="65f68-114">If more than one log file is needed with the same `baseName` and `dateStamp`, the `version` part, a positive `Integer`, is added to the file name.</span></span>  
  
2.  <span data-ttu-id="65f68-115">*多个类实例*。</span><span class="sxs-lookup"><span data-stu-id="65f68-115">*Multiple class instances*.</span></span> <span data-ttu-id="65f68-116">如果类的实例 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 写入正在使用的文件：</span><span class="sxs-lookup"><span data-stu-id="65f68-116">If an instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class writes to a file that is in use:</span></span>  
  
    -   <span data-ttu-id="65f68-117">如果文件正由同一进程中的类的另一个实例使用，则该类共享该文件 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-117">The class shares the file if it is being used by another instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class in the same process.</span></span>  
  
    -   <span data-ttu-id="65f68-118">类将使用下一个可用的名称创建新的日志文件（如果该文件正由另一个进程使用）。</span><span class="sxs-lookup"><span data-stu-id="65f68-118">The class creates a new log file using the next available name if the file is being used by another process.</span></span>  
  
3.  <span data-ttu-id="65f68-119">*线程安全性*。</span><span class="sxs-lookup"><span data-stu-id="65f68-119">*Thread safety*.</span></span> <span data-ttu-id="65f68-120"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>类是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="65f68-120">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class is thread safe.</span></span> <span data-ttu-id="65f68-121">这使你可以从多个线程安全地将消息写入日志，而无需使用锁定。</span><span class="sxs-lookup"><span data-stu-id="65f68-121">This allows you to safely write messages to the log from multiple threads without using locks.</span></span>  
  
 <span data-ttu-id="65f68-122">**日志文件位置**</span><span class="sxs-lookup"><span data-stu-id="65f68-122">**Log-File Location**</span></span>  
  
-   <span data-ttu-id="65f68-123"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>属性采用 <xref:Microsoft.VisualBasic.Logging.LogFileLocation> 枚举来指定要将日志文件写入其中的一个典型目录。</span><span class="sxs-lookup"><span data-stu-id="65f68-123">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property takes a <xref:Microsoft.VisualBasic.Logging.LogFileLocation> enumeration to specify one of the typical directories to write the log file to.</span></span>  
  
-   <span data-ttu-id="65f68-124">若要将日志写入到其他位置，请将 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> 属性设置为该位置。</span><span class="sxs-lookup"><span data-stu-id="65f68-124">To write the log to another location, set the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property to that location.</span></span>  
  
 <span data-ttu-id="65f68-125">**日志文件名**</span><span class="sxs-lookup"><span data-stu-id="65f68-125">**Log-File Name**</span></span>  
  
-   <span data-ttu-id="65f68-126">日志文件的基名称由 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> 属性指定。</span><span class="sxs-lookup"><span data-stu-id="65f68-126">The base name for the log file is specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
-   <span data-ttu-id="65f68-127">可以从属性读取当前日志文件的名称 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-127">The current log file name can be read from the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property.</span></span> <span data-ttu-id="65f68-128">它派生自多个其他属性以及文件系统中日志的当前状态。</span><span class="sxs-lookup"><span data-stu-id="65f68-128">It is derived from several other properties and the current state of the logs in the file system.</span></span>  
  
 <span data-ttu-id="65f68-129">**日志维护**</span><span class="sxs-lookup"><span data-stu-id="65f68-129">**Log Maintenance**</span></span>  
  
-   <span data-ttu-id="65f68-130">创建新日志文件的最小频率由 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> 属性确定。</span><span class="sxs-lookup"><span data-stu-id="65f68-130">The minimum frequency for creating new log files is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property.</span></span> <span data-ttu-id="65f68-131">如果值为 <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> 或 <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly> ，则每日或每周至少创建一次新的日志文件，并且名称中包含日期戳 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-131">When the value is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>, a new log file is created at least once every day or week, and a date stamp is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.</span></span>  
  
-   <span data-ttu-id="65f68-132">日志文件的最大大小 (（以字节为单位）) 由 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> 属性确定。</span><span class="sxs-lookup"><span data-stu-id="65f68-132">The maximum size (in bytes) of the log file is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> property.</span></span> <span data-ttu-id="65f68-133">如果日志文件大小超过此大小，则会丢弃写入到日志中的其他消息，并根据 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> 属性引发异常。</span><span class="sxs-lookup"><span data-stu-id="65f68-133">If the log file size exceeds this size, additional messages written to the log are discarded and, depending on the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property, an exception is thrown.</span></span>  
  
-   <span data-ttu-id="65f68-134"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>属性确定) 必须可用 (的可用空间量（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="65f68-134">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> property determines how much free space (in bytes) must be available.</span></span> <span data-ttu-id="65f68-135">这有助于确保 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 类不会使用所有可用的磁盘空间。</span><span class="sxs-lookup"><span data-stu-id="65f68-135">This helps ensure that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class will not consume all available disk space.</span></span> <span data-ttu-id="65f68-136"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>当 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> 可用空间小于可用字节时，使用属性指定日志写入的行为。</span><span class="sxs-lookup"><span data-stu-id="65f68-136">Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property to specify the behavior of log writes when there are less than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> bytes free.</span></span>  
  
 <span data-ttu-id="65f68-137">**日志文件输出设置**</span><span class="sxs-lookup"><span data-stu-id="65f68-137">**Log-File Output Settings**</span></span>  
  
-   <span data-ttu-id="65f68-138"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A>属性指定是否应在每次写入日志文件后自动刷新基础流。</span><span class="sxs-lookup"><span data-stu-id="65f68-138">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> property specifies whether the underlying stream should be flushed automatically after each write to the log file.</span></span>  
  
-   <span data-ttu-id="65f68-139"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A>属性指定是将消息追加到当前日志文件（如果允许），还是将其写入新的日志文件。</span><span class="sxs-lookup"><span data-stu-id="65f68-139">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> property specifies whether to append messages to the current log file, if allowed, or write them to a new log file.</span></span>  
  
-   <span data-ttu-id="65f68-140"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>属性指定用于在日志消息中分隔字段的字符串。</span><span class="sxs-lookup"><span data-stu-id="65f68-140">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies the string to use for delimiting the fields within a log message.</span></span>  
  
-   <span data-ttu-id="65f68-141"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A>属性指定在创建新日志文件时使用的编码。</span><span class="sxs-lookup"><span data-stu-id="65f68-141">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> property specifies the encoding to use when creating a new log file.</span></span>  
  
 <span data-ttu-id="65f68-142">**日志文件输出**</span><span class="sxs-lookup"><span data-stu-id="65f68-142">**Log-File Output**</span></span>  
  
-   <span data-ttu-id="65f68-143"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>和 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> 方法将消息写入日志文件。</span><span class="sxs-lookup"><span data-stu-id="65f68-143">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> and <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods write messages to the log file.</span></span> <span data-ttu-id="65f68-144">这些方法将检查 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> 属性以及具有相同基名称的任何现有日志，以确定是否应创建新日志。</span><span class="sxs-lookup"><span data-stu-id="65f68-144">These methods check the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property, along with any existing logs with the same base name to determine if a new log should be created.</span></span>  
  
-   <span data-ttu-id="65f68-145"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A>方法将当前在输出缓冲区中的所有消息刷新到日志文件。</span><span class="sxs-lookup"><span data-stu-id="65f68-145">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method flushes any messages currently in the output buffer to the log file.</span></span>  
  
-   <span data-ttu-id="65f68-146"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>方法会关闭日志文件，以使其可供其他进程使用。</span><span class="sxs-lookup"><span data-stu-id="65f68-146">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method closes the log file so that it can be used by other processes.</span></span>  
  
 <span data-ttu-id="65f68-147">**启用输出**</span><span class="sxs-lookup"><span data-stu-id="65f68-147">**Enabling Output**</span></span>  
  
 <span data-ttu-id="65f68-148">您必须启用跟踪或调试才能使用跟踪侦听器。</span><span class="sxs-lookup"><span data-stu-id="65f68-148">You must enable tracing or debugging to use a trace listener.</span></span> <span data-ttu-id="65f68-149">以下语法是编译器特定的。</span><span class="sxs-lookup"><span data-stu-id="65f68-149">The following syntax is compiler specific.</span></span> <span data-ttu-id="65f68-150">如果使用 c # 或 Visual Basic 以外的编译器，请参阅编译器的文档。</span><span class="sxs-lookup"><span data-stu-id="65f68-150">If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="65f68-151">若要在 c # 中启用调试，请在 `/d:DEBUG` 编译代码时将标志添加到编译器命令行，或者将添加 `#define DEBUG` 到文件的顶部。</span><span class="sxs-lookup"><span data-stu-id="65f68-151">To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="65f68-152">在 Visual Basic 中，将 `/d:DEBUG=True` 标志添加到编译器命令行。</span><span class="sxs-lookup"><span data-stu-id="65f68-152">In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="65f68-153">若要在 c # 中启用跟踪，请在 `/d:TRACE` 编译代码时将标志添加到编译器命令行，或将添加 `#define TRACE` 到文件的顶部。</span><span class="sxs-lookup"><span data-stu-id="65f68-153">To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="65f68-154">在 Visual Basic 中，将 `/d:TRACE=True` 标志添加到编译器命令行。</span><span class="sxs-lookup"><span data-stu-id="65f68-154">In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="65f68-155">若要设置侦听器的级别，请编辑应用程序的配置文件。</span><span class="sxs-lookup"><span data-stu-id="65f68-155">To set the level of your listener, edit the configuration file for your application.</span></span> <span data-ttu-id="65f68-156">在此文件中，您可以添加一个侦听器，设置其类型并设置其参数，删除侦听器，或者清除之前由应用程序设置的所有侦听器。</span><span class="sxs-lookup"><span data-stu-id="65f68-156">Within this file, you can add a listener, set its type and set its parameters, remove a listener, or clear all the listeners previously set by the application.</span></span> <span data-ttu-id="65f68-157">配置文件的格式应与下面的示例类似。</span><span class="sxs-lookup"><span data-stu-id="65f68-157">The configuration file should be formatted like the following example.</span></span>  
  
 <span data-ttu-id="65f68-158">若要运行此示例，必须提供完全限定的程序集名称。</span><span class="sxs-lookup"><span data-stu-id="65f68-158">For this example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="65f68-159">有关如何获取完全限定的程序集名称的信息，请参阅 [程序集名称](/dotnet/standard/assembly/names)。</span><span class="sxs-lookup"><span data-stu-id="65f68-159">For information about how to obtain the fully qualified assembly name, see [Assembly Names](/dotnet/standard/assembly/names).</span></span>  
  
```xml  
<configuration>  
    <system.diagnostics>  
        <sharedListeners>  
            <add name="FileLog"  
                type="Microsoft.VisualBasic.Logging.FileLogTraceListener,   
                      Microsoft.VisualBasic, Version=8.0.0.0,   
                      Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a,   
                      processorArchitecture=MSIL"   
                initializeData="FileLogWriter"/>  
        </sharedListeners>  
    </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
    <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information"><span data-ttu-id="65f68-160">演练：更改 My.Application.Log 写入信息的位置</span><span class="sxs-lookup"><span data-stu-id="65f68-160">Walkthrough: Changing Where My.Application.Log Writes Information</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="65f68-161">初始化 <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> 类的新实例并设置名称。</span><span class="sxs-lookup"><span data-stu-id="65f68-161">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class and sets the name.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileLogTraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileLogTraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65f68-162">使用默认名称初始化 <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="65f68-162">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class with the default name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65f68-163">此方法将类的实例名称设置 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 为 microsoft.visualbasic.logging.filelogtracelistener。</span><span class="sxs-lookup"><span data-stu-id="65f68-163">This method sets the instance name of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class to FileLogTraceListener.</span></span>  
  
 <span data-ttu-id="65f68-164">您可以通过属性访问实例名称 <xref:System.Diagnostics.TraceListener.Name%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-164">You can access the instance name through the <xref:System.Diagnostics.TraceListener.Name%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="65f68-165">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="65f68-165">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileLogTraceListener (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileLogTraceListener(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.Logging.FileLogTraceListener : string -&gt; Microsoft.VisualBasic.Logging.FileLogTraceListener" Usage="new Microsoft.VisualBasic.Logging.FileLogTraceListener name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="65f68-166"><see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="65f68-166"><see langword="String" />.</span></span> <span data-ttu-id="65f68-167">实例对象的名称。</span><span class="sxs-lookup"><span data-stu-id="65f68-167">The name of the instance object.</span></span></param>
        <summary><span data-ttu-id="65f68-168">用提供的名称初始化 <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="65f68-168">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class with the supplied name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65f68-169">此方法将类的实例名称设置 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 为 `name` 。</span><span class="sxs-lookup"><span data-stu-id="65f68-169">This method sets the instance name of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class to `name`.</span></span>  
  
 <span data-ttu-id="65f68-170">您可以通过属性访问实例名称 <xref:System.Diagnostics.TraceListener.Name%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-170">You can access the instance name through the <xref:System.Diagnostics.TraceListener.Name%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="65f68-171">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="65f68-171">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public bool Append { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Append" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append" />
      <MemberSignature Language="VB.NET" Value="Public Property Append As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Append { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Append : bool with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Append" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[set: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65f68-172">确定是将输出追加到当前文件还是将输出写入新文件或现有文件。</span><span class="sxs-lookup"><span data-stu-id="65f68-172">Determines whether to append the output to the current file or write it to a new or existing file.</span></span></summary>
        <value><span data-ttu-id="65f68-173"><see langword="Boolean" />，<see langword="True" /> 指示将输出追加到当前文件，<see langword="False" /> 指示将输出写入新文件。</span><span class="sxs-lookup"><span data-stu-id="65f68-173"><see langword="Boolean" />, with <see langword="True" /> indicating that the output is appended to the current file, and <see langword="False" /> indicating that output is written to a new file.</span></span> <span data-ttu-id="65f68-174">此属性的默认设置为 <see langword="True" />。</span><span class="sxs-lookup"><span data-stu-id="65f68-174">The default setting for this property is <see langword="True" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
   
## Remarks  

<span data-ttu-id="65f68-175">当 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> 属性为时 `True` ，将在模式下打开日志文件 <xref:System.IO.FileMode.Append> 以保留现有日志。</span><span class="sxs-lookup"><span data-stu-id="65f68-175">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> property is `True`, the log file is opened in <xref:System.IO.FileMode.Append> mode, to keep existing logs.</span></span> <span data-ttu-id="65f68-176">当前写入位置从文件末尾开始，以便将所有新日志追加到文件末尾。</span><span class="sxs-lookup"><span data-stu-id="65f68-176">The current writing position starts at the end of the file, so that any new logs are appended to the end of the file.</span></span>

<span data-ttu-id="65f68-177">当 `Append` 属性为时 `False` ，将在模式下打开日志文件，在该文件中 <xref:System.IO.FileMode.Truncate> 打开日志文件时，所有日志数据都将被删除。</span><span class="sxs-lookup"><span data-stu-id="65f68-177">When the `Append` property is `False`, the log file is opened in <xref:System.IO.FileMode.Truncate> mode, where all log data is deleted when the log file is opened.</span></span> <span data-ttu-id="65f68-178">在 `FileLogTraceListener` `Append` 将 "设置为" `False` 或打开文件并写入第一个日志之前，将删除日志文件的现有内容。</span><span class="sxs-lookup"><span data-stu-id="65f68-178">The `FileLogTraceListener` deletes existing contents of the log file once after the `Append` propery is set to `False` or the file is opened and before it writes the first log.</span></span> <span data-ttu-id="65f68-179">然后，将 `FileLogTraceListener` 附加跟踪数据追加到文件末尾。</span><span class="sxs-lookup"><span data-stu-id="65f68-179">After that, `FileLogTraceListener` appends additional trace data to the end of the file.</span></span> <span data-ttu-id="65f68-180">如果在 `FileLogTraceListener` Append 设置为 False 的情况下关闭该实例，则会在写入其他日志之前删除日志文件数据。</span><span class="sxs-lookup"><span data-stu-id="65f68-180">If the `FileLogTraceListener` instance is closed and then reopened while Append is set to False, it erases the log file data before writing additional logs.</span></span> <span data-ttu-id="65f68-181">这可能导致丢失数据，尤其是在 `Append` 配置文件中将属性的值设置为时 `False` 。</span><span class="sxs-lookup"><span data-stu-id="65f68-181">This can lead to missing data, particularly if you set the value of the `Append` property to `False` in a configuration file.</span></span>

<span data-ttu-id="65f68-182">在以下情况下，会重写此行为：</span><span class="sxs-lookup"><span data-stu-id="65f68-182">This behavior is overridden in the following scenarios:</span></span>

- <span data-ttu-id="65f68-183">输出文件被另一个进程锁定。</span><span class="sxs-lookup"><span data-stu-id="65f68-183">The output file is locked by another process.</span></span> <span data-ttu-id="65f68-184">将创建新的日志文件，其中包含包含在名称中的版本号 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-184">A new log file is created with a version number that is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.</span></span>  
  
- <span data-ttu-id="65f68-185">当前文件的大小大于属性允许的大小 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-185">The current file size is greater than what the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> property allows.</span></span>  <span data-ttu-id="65f68-186">其他消息将被丢弃。</span><span class="sxs-lookup"><span data-stu-id="65f68-186">Additional messages are discarded.</span></span> <span data-ttu-id="65f68-187">根据 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> 属性，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="65f68-187">Depending on the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property, an exception is thrown.</span></span>
  
- <span data-ttu-id="65f68-188">根据属性指定的日志创建计划，现有文件名已过期 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-188">The existing file name is out of date according to the log-creation schedule specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property.</span></span> <span data-ttu-id="65f68-189">创建新的日志文件。</span><span class="sxs-lookup"><span data-stu-id="65f68-189">A new log file is created.</span></span> <span data-ttu-id="65f68-190">日期戳将合并到名称中 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-190">The date stamp is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.</span></span>  

 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoFlush : bool with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[set: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65f68-191">指示写入日志文件流时是否刷新缓冲区。</span><span class="sxs-lookup"><span data-stu-id="65f68-191">Indicates whether or not the writing to the log file stream flushes the buffer.</span></span></summary>
        <value><span data-ttu-id="65f68-192"><see langword="Boolean" />，<see langword="True" /> 指示每次写入之后都刷新日志文件流；否则将缓存日志条目，这样写入会更有效率。</span><span class="sxs-lookup"><span data-stu-id="65f68-192"><see langword="Boolean" />, with <see langword="True" /> indicating that the stream is flushed after every write; otherwise the log entries are buffered and written more efficiently.</span></span> <span data-ttu-id="65f68-193">此属性的默认设置为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="65f68-193">The default setting for this property is <see langword="False" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65f68-194">`False`属性的设置 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> 可为大多数应用程序提供最佳性能，因为一次将多个消息写入日志文件会更有效。</span><span class="sxs-lookup"><span data-stu-id="65f68-194">The `False` setting for the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> property provides the best performance for most applications, because it is more efficient to write multiple messages to the log file at one time.</span></span> <span data-ttu-id="65f68-195">您可以使用 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> 方法来刷新日志文件的输出缓冲区中当前的所有消息。</span><span class="sxs-lookup"><span data-stu-id="65f68-195">You can use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method to flush any messages currently in the log file's output buffer.</span></span> <span data-ttu-id="65f68-196">你还可以使用 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> 方法，该方法在关闭日志文件之前隐式刷新流。</span><span class="sxs-lookup"><span data-stu-id="65f68-196">You can also use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method, which implicitly flushes the stream before closing the log file.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
      </Docs>
    </Member>
    <Member MemberName="BaseFileName">
      <MemberSignature Language="C#" Value="public string BaseFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseFileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseFileName : string with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65f68-197">获取或设置日志文件的基名称，该名称用于创建日志文件的完整名称。</span><span class="sxs-lookup"><span data-stu-id="65f68-197">Gets or sets the base name for the log files, which is used to create the full log-file name.</span></span></summary>
        <value><span data-ttu-id="65f68-198"><see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="65f68-198"><see langword="String" />.</span></span> <span data-ttu-id="65f68-199">日志文件的基名称。</span><span class="sxs-lookup"><span data-stu-id="65f68-199">The base name for the log files.</span></span> <span data-ttu-id="65f68-200">默认为应用程序的产品名称。</span><span class="sxs-lookup"><span data-stu-id="65f68-200">The default is the application's product name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65f68-201"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>属性确定类写入的日志文件的基名称 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-201">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property determines the base name for the log files that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class writes to.</span></span>  
  
 <span data-ttu-id="65f68-202"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>属性提供当前日志文件的完整名称。</span><span class="sxs-lookup"><span data-stu-id="65f68-202">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property gives the current full log-file name.</span></span> <span data-ttu-id="65f68-203">它是根据日志路径、基名称、日期和数字生成的，以将其与不同的日志版本区分开来。</span><span class="sxs-lookup"><span data-stu-id="65f68-203">It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log.</span></span> <span data-ttu-id="65f68-204">根据需要创建新的日志文件。</span><span class="sxs-lookup"><span data-stu-id="65f68-204">New log files are created on an as-needed basis.</span></span>  
  
 <span data-ttu-id="65f68-205">完整日志文件名称的显式形式为 `path` \\ `baseName` [- `dateStamp` ] [- `iteration` ] .log，其中</span><span class="sxs-lookup"><span data-stu-id="65f68-205">The explicit form of the full log file name is `path`\\`baseName`[-`dateStamp`][-`iteration`].log, where</span></span>  
  
-   <span data-ttu-id="65f68-206">`path`部分由属性确定， <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> 如果该属性值设置为，则由属性确定 <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom> <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-206">The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.</span></span>  
  
-   <span data-ttu-id="65f68-207">`baseName`部分是由属性指定的基本日志名称 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-207">The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
-   <span data-ttu-id="65f68-208">`dateStamp`部件的格式为 "yyyy-mm-dd"，当 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> 设置为或时，将显示它 <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-208">The `dateStamp` part has the format "YYYY-MM-DD", and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is set to <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span></span>  
  
-   <span data-ttu-id="65f68-209">如果需要多个具有相同和的日志文件 `baseName` `dateStamp` ，则会在文件名中 `iteration` 添加该部分 `Integer` 。</span><span class="sxs-lookup"><span data-stu-id="65f68-209">If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
        <altmember cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" FrameworkAlternate="net-5.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="fileLogTraceListener.Close " />
      <MemberSignature Language="ILAsm" Value=".method public virtual instance void Close() cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65f68-210">关闭当前日志文件的基础流，并释放与当前流关联的所有资源。</span><span class="sxs-lookup"><span data-stu-id="65f68-210">Closes the underlying stream for the current log file and releases any resources associated with the current stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65f68-211">不需要 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> 显式调用方法，因为 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 类管理基础流。</span><span class="sxs-lookup"><span data-stu-id="65f68-211">You do not need to call the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method explicitly, because the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class manages the underlying steam.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomLocation">
      <MemberSignature Language="C#" Value="public string CustomLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CustomLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CustomLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomLocation : string with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65f68-212">当 <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /> 属性设置为 <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" /> 时获取或设置日志文件目录。</span><span class="sxs-lookup"><span data-stu-id="65f68-212">Gets or sets the log file directory when the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /> property is set to <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />.</span></span></summary>
        <value><span data-ttu-id="65f68-213"><see langword="String" />，日志文件目录的名称。</span><span class="sxs-lookup"><span data-stu-id="65f68-213"><see langword="String" />, which is the name of the log-file directory.</span></span> <span data-ttu-id="65f68-214">此属性的默认设置是用户的应用程序数据目录。</span><span class="sxs-lookup"><span data-stu-id="65f68-214">The default setting for this property is the user's directory for application data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65f68-215"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>设置属性时，它还将 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> 属性设置为 <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-215">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property is set, it also sets the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>.</span></span>  
  
 <span data-ttu-id="65f68-216"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>如果无法解析该目录，则该属性将引发异常。</span><span class="sxs-lookup"><span data-stu-id="65f68-216">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property will throw an exception if the directory cannot be resolved.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      </Docs>
    </Member>
    <Member MemberName="Delimiter">
      <MemberSignature Language="C#" Value="public string Delimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Delimiter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property Delimiter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Delimiter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Delimiter : string with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65f68-217">获取或设置用于在日志消息中分隔字段的分隔符。</span><span class="sxs-lookup"><span data-stu-id="65f68-217">Gets or sets the delimiter used to delimit fields within a log message.</span></span></summary>
        <value><span data-ttu-id="65f68-218"><see langword="String" />，用作日志消息中字段的分隔符。</span><span class="sxs-lookup"><span data-stu-id="65f68-218"><see langword="String" />, which is the delimiter used for fields within a log message.</span></span> <span data-ttu-id="65f68-219">此属性的默认设置为制表符字符。</span><span class="sxs-lookup"><span data-stu-id="65f68-219">The default setting for this property is the TAB character.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65f68-220"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>属性允许您更改默认分隔符。</span><span class="sxs-lookup"><span data-stu-id="65f68-220">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property allows you to change the default delimiter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiskSpaceExhaustedBehavior">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property DiskSpaceExhaustedBehavior As DiskSpaceExhaustedOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior { Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption get(); void set(Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption value); };" />
      <MemberSignature Language="F#" Value="member this.DiskSpaceExhaustedBehavior : Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[set: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65f68-221">确定在写入日志文件时，如果可用磁盘空间小于 <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> 属性所指定的磁盘空间时应采取的操作。</span><span class="sxs-lookup"><span data-stu-id="65f68-221">Determines what to do when writing to the log file and there is less free disk space available than specified by the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> property.</span></span></summary>
        <value><span data-ttu-id="65f68-222"><see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />.</span><span class="sxs-lookup"><span data-stu-id="65f68-222"><see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />.</span></span> <span data-ttu-id="65f68-223">确定在尝试写入日志文件时，如果可用磁盘空间小于 <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> 属性所指定的磁盘空间，或日志文件大小大于 <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" /> 属性所允许的大小，应采取的操作。</span><span class="sxs-lookup"><span data-stu-id="65f68-223">Determines what to do when attempting to write to the log file and there is less free disk space available than specified by the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> property, or if the log file size is greater than what the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" /> property allows.</span></span> <span data-ttu-id="65f68-224">默认值是 <see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" />。</span><span class="sxs-lookup"><span data-stu-id="65f68-224">The default value is <see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65f68-225">当 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> 属性设置为时 <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages> ，如果没有足够的保留磁盘空间，则会悄悄地丢弃日志消息。</span><span class="sxs-lookup"><span data-stu-id="65f68-225">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property is set to <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages>, the log messages are silently discarded if there is not enough reserved disk space.</span></span> <span data-ttu-id="65f68-226">这是默认行为，它会阻止简单应用程序在磁盘太满时失败。</span><span class="sxs-lookup"><span data-stu-id="65f68-226">This is the default behavior, and it prevents simple applications from failing if the disk gets too full.</span></span>  
  
 <span data-ttu-id="65f68-227">更可靠的应用程序可以将 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> 属性设置为 <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException> ，并在 `Try...Catch` 写入日志的所有代码周围添加块。</span><span class="sxs-lookup"><span data-stu-id="65f68-227">More robust applications can set the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property to <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException>, and add `Try...Catch` blocks around all code that writes to the log.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" FrameworkAlternate="net-5.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="fileLogTraceListener.Dispose disposing" />
      <MemberSignature Language="ILAsm" Value=".method familyvirtual instance void Dispose(bool disposing) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="65f68-228">若为 <see langword="True" />，释放托管资源和非托管资源；若为 <see langword="False" />，则只释放非托管资源。</span><span class="sxs-lookup"><span data-stu-id="65f68-228"><see langword="True" /> releases both managed and unmanaged resources; <see langword="False" /> releases only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="65f68-229">关闭基础流，并可以选择释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="65f68-229">Closes the underlying stream and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65f68-230">当 `disposing` 参数为 `True` 时，此方法释放该 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 引用的、由任何托管对象持有的全部资源。</span><span class="sxs-lookup"><span data-stu-id="65f68-230">When the `disposing` parameter is `True`, this method releases all resources held by any managed objects that this <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> references.</span></span> <span data-ttu-id="65f68-231">此方法将调用每个被引用对象的 `Dispose` 方法。</span><span class="sxs-lookup"><span data-stu-id="65f68-231">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="65f68-232">
            <see langword="Dispose" /> 可以由其他对象多次调用。</span><span class="sxs-lookup"><span data-stu-id="65f68-232">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="65f68-233">重写 <see langword="Dispose" /> 时，请注意不要引用在以前调用 <see langword="Dispose" /> 时已释放的对象。</span><span class="sxs-lookup"><span data-stu-id="65f68-233">When overriding <see langword="Dispose" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span>  
  
<span data-ttu-id="65f68-234">此方法调用 <see langword="Dispose" /> 基类的方法 <see langword="Dispose" /> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-234">This method calls the <see langword="Dispose" /> method of the base class, <see langword="Dispose" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65f68-235">获取或设置创建新日志文件时使用的编码。</span><span class="sxs-lookup"><span data-stu-id="65f68-235">Gets or sets the encoding to use when creating a new log file.</span></span></summary>
        <value><span data-ttu-id="65f68-236"><see cref="T:System.Text.Encoding" />，创建新日志文件时使用的编码。</span><span class="sxs-lookup"><span data-stu-id="65f68-236"><see cref="T:System.Text.Encoding" />, which is the encoding to use when creating a new log file.</span></span> <span data-ttu-id="65f68-237">此属性的默认值为 <see cref="T:System.Text.UTF8Encoding" />。</span><span class="sxs-lookup"><span data-stu-id="65f68-237">The default value of this property is <see cref="T:System.Text.UTF8Encoding" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65f68-238">将文本追加到现有日志文件时，将使用该文件的编码，而不是由属性指定的编码 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-238">When appending text to an existing log file, the encoding for that file is used instead of the encoding specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="T:System.Text.UTF8Encoding" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" FrameworkAlternate="net-5.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="fileLogTraceListener.Flush " />
      <MemberSignature Language="ILAsm" Value=".method public virtual instance void Flush() cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65f68-239">刷新写入当前日志文件的基础流。</span><span class="sxs-lookup"><span data-stu-id="65f68-239">Flushes the underlying stream that writes to the current log file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65f68-240">使用 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> 方法将所有缓冲数据写入当前日志文件。</span><span class="sxs-lookup"><span data-stu-id="65f68-240">Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method to write all buffered data to the current log file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullLogFileName">
      <MemberSignature Language="C#" Value="public string FullLogFileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullLogFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullLogFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullLogFileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullLogFileName : string" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65f68-241">获取当前日志文件的完整名称。</span><span class="sxs-lookup"><span data-stu-id="65f68-241">Gets the current full log-file name.</span></span></summary>
        <value><span data-ttu-id="65f68-242"><see langword="String" />，当前日志文件的完整名称。</span><span class="sxs-lookup"><span data-stu-id="65f68-242"><see langword="String" />, which is the current full log-file name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65f68-243"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>属性提供当前日志文件的完整名称。</span><span class="sxs-lookup"><span data-stu-id="65f68-243">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property gives the current full log-file name.</span></span> <span data-ttu-id="65f68-244">它是根据日志路径、基名称、日期和数字生成的，以将其与不同的日志版本区分开来。</span><span class="sxs-lookup"><span data-stu-id="65f68-244">It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log.</span></span> <span data-ttu-id="65f68-245">根据需要创建新的日志文件。</span><span class="sxs-lookup"><span data-stu-id="65f68-245">New log files are created on an as-needed basis.</span></span>  
  
 <span data-ttu-id="65f68-246">完整日志文件名称的显式形式为 `path` \\ `baseName` [- `dateStamp` ] [- `iteration` ] .log，其中：</span><span class="sxs-lookup"><span data-stu-id="65f68-246">The explicit form of the full log-file name is `path`\\`baseName`[-`dateStamp`][-`iteration`].log, where:</span></span>  
  
-   <span data-ttu-id="65f68-247">`path`部分由属性确定， <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> 如果该属性值设置为，则由属性确定 <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom> <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-247">The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.</span></span>  
  
-   <span data-ttu-id="65f68-248">`baseName`部分是由属性指定的基本日志名称 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-248">The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
-   <span data-ttu-id="65f68-249">`dateStamp`部分的格式为 yyyy-mm-dd，当为或时，将显示此部分 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-249">The `dateStamp` part has the format YYYY-MM-DD, and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span></span>  
  
-   <span data-ttu-id="65f68-250">如果需要多个具有相同和的日志文件 `baseName` `dateStamp` ，则会在文件名中 `iteration` 添加该部分 `Integer` 。</span><span class="sxs-lookup"><span data-stu-id="65f68-250">If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
        <altmember cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected override string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string[] GetSupportedAttributes() cil managed" FrameworkAlternate="net-5.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberSignature Language="F#" Value="override this.GetSupportedAttributes : unit -&gt; string[]" Usage="fileLogTraceListener.GetSupportedAttributes " />
      <MemberSignature Language="ILAsm" Value=".method familyvirtual instance string[] GetSupportedAttributes() cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65f68-251">获取跟踪侦听器支持的自定义 XML 配置特性。</span><span class="sxs-lookup"><span data-stu-id="65f68-251">Gets the custom XML configuration attributes supported by the trace listener.</span></span></summary>
        <returns><span data-ttu-id="65f68-252"><see langword="String" /> 数组，包含此侦听器识别的 XML 配置特性。</span><span class="sxs-lookup"><span data-stu-id="65f68-252"><see langword="String" /> array containing the XML configuration attributes recognized by this listener.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65f68-253"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>可在 XML 配置文件中使用的自定义特性，以控制类的实例的行为 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-253">The custom attributes for the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> can be used in the XML configuration file for controlling the behavior of an instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class.</span></span> <span data-ttu-id="65f68-254">使用任何其他特性会导致配置异常。</span><span class="sxs-lookup"><span data-stu-id="65f68-254">Using any other attribute causes a configuration exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.TraceSource.GetSupportedAttributes" />
      </Docs>
    </Member>
    <Member MemberName="IncludeHostName">
      <MemberSignature Language="C#" Value="public bool IncludeHostName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeHostName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeHostName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeHostName { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeHostName : bool with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[set: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65f68-255">指示输出中是否应包括日志记录计算机的主机名。</span><span class="sxs-lookup"><span data-stu-id="65f68-255">Indicates whether or not the host name of the logging machine should be included in the output.</span></span></summary>
        <value><span data-ttu-id="65f68-256"><see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="65f68-256"><see langword="Boolean" />.</span></span> <span data-ttu-id="65f68-257">如果应包括主机标识符，则为 <see langword="True" />；否则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="65f68-257">Use <see langword="True" /> if the host identifier should be included; otherwise use <see langword="False" />.</span></span> <span data-ttu-id="65f68-258">默认值是 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="65f68-258">The default value is <see langword="False" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65f68-259">使用属性配置 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> 和方法的行为 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-259">Use the property to configure the behavior of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> and <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.LogFileLocation Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.LogFileLocation Location" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As LogFileLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::LogFileLocation Location { Microsoft::VisualBasic::Logging::LogFileLocation get(); void set(Microsoft::VisualBasic::Logging::LogFileLocation value); };" />
      <MemberSignature Language="F#" Value="member this.Location : Microsoft.VisualBasic.Logging.LogFileLocation with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.LogFileLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65f68-260">获取或设置日志文件的位置。</span><span class="sxs-lookup"><span data-stu-id="65f68-260">Gets or sets location for the log files.</span></span></summary>
        <value><span data-ttu-id="65f68-261"><see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />，日志文件的位置。</span><span class="sxs-lookup"><span data-stu-id="65f68-261"><see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />, which is the location for the log file.</span></span> <span data-ttu-id="65f68-262">默认值是 <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" />。</span><span class="sxs-lookup"><span data-stu-id="65f68-262">The default value is <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65f68-263">使用 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> 属性将日志路径设置为预定义的路径之一，由 <xref:Microsoft.VisualBasic.Logging.LogFileLocation> 枚举值确定。</span><span class="sxs-lookup"><span data-stu-id="65f68-263">Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property to set the log path to one of the predefined paths, determined by the <xref:Microsoft.VisualBasic.Logging.LogFileLocation> enumeration values.</span></span>  
  
|<span data-ttu-id="65f68-264">**位置值**</span><span class="sxs-lookup"><span data-stu-id="65f68-264">**Location value**</span></span>|<span data-ttu-id="65f68-265">**路径**</span><span class="sxs-lookup"><span data-stu-id="65f68-265">**Path**</span></span>|  
|------------------------|--------------|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.CommonApplicationDirectory>|<span data-ttu-id="65f68-266">所有用户共享的应用程序数据的路径，格式为：</span><span class="sxs-lookup"><span data-stu-id="65f68-266">The path for the application data that is shared among all users, with the format:</span></span><br /><br /> `BasePath`\\`CompanyName`\\`ProductName`\\`ProductVersion`<br /><br /> <span data-ttu-id="65f68-267">的典型值 `BasePath` 为：</span><span class="sxs-lookup"><span data-stu-id="65f68-267">A typical value for `BasePath` is:</span></span><br /><br /> <span data-ttu-id="65f68-268">C:\documents and 和 Settings\All Users\Application 数据</span><span class="sxs-lookup"><span data-stu-id="65f68-268">C:\Documents and Settings\All Users\Application Data</span></span><br /><br /> <span data-ttu-id="65f68-269">、和的值来自 `CompanyName` `ProductName` `ProductVersion` 程序集。</span><span class="sxs-lookup"><span data-stu-id="65f68-269">The values of `CompanyName`, `ProductName`, and `ProductVersion` come from the assembly.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.ExecutableDirectory>|<span data-ttu-id="65f68-270">启动了应用程序的可执行文件的路径。</span><span class="sxs-lookup"><span data-stu-id="65f68-270">The path for the executable file that started the application.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory>|<span data-ttu-id="65f68-271">用户的应用程序数据的路径，格式为：</span><span class="sxs-lookup"><span data-stu-id="65f68-271">The path for the application data of a user, with the format:</span></span><br /><br /> `BasePath`\\`CompanyName`\\`ProductName`\\`ProductVersion`<br /><br /> <span data-ttu-id="65f68-272">的典型值 `BasePath` 为：</span><span class="sxs-lookup"><span data-stu-id="65f68-272">A typical value for `BasePath` is:</span></span><br /><br /> <span data-ttu-id="65f68-273">C:\Documents and Settings\\`username`\Application Data</span><span class="sxs-lookup"><span data-stu-id="65f68-273">C:\Documents and Settings\\`username`\Application Data</span></span><br /><br /> <span data-ttu-id="65f68-274">、和的值将 `CompanyName` `ProductName` `ProductVersion` 构成程序集。</span><span class="sxs-lookup"><span data-stu-id="65f68-274">The values of `CompanyName`, `ProductName`, and `ProductVersion` come form the assembly.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.TempDirectory>|<span data-ttu-id="65f68-275">当前系统的临时文件夹的路径。</span><span class="sxs-lookup"><span data-stu-id="65f68-275">The path of the current system's temporary folder.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>|<span data-ttu-id="65f68-276">如果由指定的字符串 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> 不为空，则将其用作路径; 否则，请使用用户的应用程序数据的路径。</span><span class="sxs-lookup"><span data-stu-id="65f68-276">If the string specified by <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> is not empty, then use it as the path; otherwise use the path for the application data of a user.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />
      </Docs>
    </Member>
    <Member MemberName="LogFileCreationSchedule">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption LogFileCreationSchedule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption LogFileCreationSchedule" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      <MemberSignature Language="VB.NET" Value="Public Property LogFileCreationSchedule As LogFileCreationScheduleOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption LogFileCreationSchedule { Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption get(); void set(Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption value); };" />
      <MemberSignature Language="F#" Value="member this.LogFileCreationSchedule : Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65f68-277">确定要包括在日志文件名称中的日期。</span><span class="sxs-lookup"><span data-stu-id="65f68-277">Determines which date to include in the names of the log files.</span></span></summary>
        <value><span data-ttu-id="65f68-278"><see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />.</span><span class="sxs-lookup"><span data-stu-id="65f68-278"><see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />.</span></span> <span data-ttu-id="65f68-279">此项指示要包括在日志文件名称中的日期。</span><span class="sxs-lookup"><span data-stu-id="65f68-279">This indicates which date to include in the log-file names.</span></span> <span data-ttu-id="65f68-280">默认值是 <see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" />。</span><span class="sxs-lookup"><span data-stu-id="65f68-280">The default value is <see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65f68-281">将其中一个 <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> 枚举值分配给 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> 属性，以指定要包含在日志文件名称中的日期。</span><span class="sxs-lookup"><span data-stu-id="65f68-281">Assign one of the <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> enumeration values to the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property to specify which date to include in the names of the log files.</span></span>  
  
 <span data-ttu-id="65f68-282">日期的格式为 YYYY-MM-DD。</span><span class="sxs-lookup"><span data-stu-id="65f68-282">The format of the date is YYYY-MM-DD.</span></span> <span data-ttu-id="65f68-283">有关日志文件名格式的详细信息，请参阅 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-283">For more information on the format of the log file name, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
|<span data-ttu-id="65f68-284">**LogFileCreationSchedule 值**</span><span class="sxs-lookup"><span data-stu-id="65f68-284">**LogFileCreationSchedule value**</span></span>|<span data-ttu-id="65f68-285">**日志文件名称中的日期**</span><span class="sxs-lookup"><span data-stu-id="65f68-285">**Date in the log file name**</span></span>|  
|---------------------------------------|-----------------------------------|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily>|<span data-ttu-id="65f68-286">将当前日期包括在日志文件名称中。</span><span class="sxs-lookup"><span data-stu-id="65f68-286">Include the current date in the log file name.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None>|<span data-ttu-id="65f68-287">不要将日期包括在日志文件名称中。</span><span class="sxs-lookup"><span data-stu-id="65f68-287">Do not include the date in the log file name.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>|<span data-ttu-id="65f68-288">将当前周的第一天包括在日志文件名称中。</span><span class="sxs-lookup"><span data-stu-id="65f68-288">Include the first day of the current week in the log file name.</span></span><br /><br /> <span data-ttu-id="65f68-289">周从星期六开始。</span><span class="sxs-lookup"><span data-stu-id="65f68-289">The week starts on Saturday.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      </Docs>
    </Member>
    <Member MemberName="MaxFileSize">
      <MemberSignature Language="C#" Value="public long MaxFileSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxFileSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxFileSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxFileSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxFileSize : int64 with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[set: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65f68-290">获取或设置所允许的日志文件的最大大小，以字节为单位。</span><span class="sxs-lookup"><span data-stu-id="65f68-290">Gets or sets the maximum allowed size of the log file, in bytes.</span></span></summary>
        <value><span data-ttu-id="65f68-291"><see langword="Long" />.</span><span class="sxs-lookup"><span data-stu-id="65f68-291"><see langword="Long" />.</span></span> <span data-ttu-id="65f68-292">这是允许的日志文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="65f68-292">This is the maximum allowed log-file size, in bytes.</span></span> <span data-ttu-id="65f68-293">默认值为5000000。</span><span class="sxs-lookup"><span data-stu-id="65f68-293">The default value is 5000000.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65f68-294">使用此属性可确保日志文件不会增长得太大。</span><span class="sxs-lookup"><span data-stu-id="65f68-294">Use this property to make sure that the log files do not grow too large.</span></span>  
  
 <span data-ttu-id="65f68-295">如果日志文件大小 (以字节为单位) 大于此属性的值，则当 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 类尝试将消息写入日志时，消息将被丢弃，失败或引发异常的原因取决于属性的值 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-295">If the log file size (in bytes) is greater than the value of this property, then when the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class attempts to write a message to the log, the message is discarded and the failure is either silent or an exception is thrown depending on the value of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property.</span></span> <span data-ttu-id="65f68-296">否则，如果可用磁盘空间量 (以字节为单位) 小于，则会将消息写入日志 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-296">Otherwise, the message is written to the log, if the amount of free disk space (in bytes) is less than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="65f68-297">当此属性被设置为一个小于 1000 的值时。</span><span class="sxs-lookup"><span data-stu-id="65f68-297">When this property is set to a value less than 1000.</span></span></exception>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      </Docs>
    </Member>
    <Member MemberName="ReserveDiskSpace">
      <MemberSignature Language="C#" Value="public long ReserveDiskSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ReserveDiskSpace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
      <MemberSignature Language="VB.NET" Value="Public Property ReserveDiskSpace As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ReserveDiskSpace { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.ReserveDiskSpace : int64 with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[set: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65f68-298">获取或设置在将消息写入日志文件之前需要满足的可用磁盘空间量（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="65f68-298">Gets or sets the amount of free disk space, in bytes, necessary before messages can be written to the log file.</span></span></summary>
        <value><span data-ttu-id="65f68-299"><see langword="Long" />.</span><span class="sxs-lookup"><span data-stu-id="65f68-299"><see langword="Long" />.</span></span> <span data-ttu-id="65f68-300">这是所需的可用磁盘空间量。</span><span class="sxs-lookup"><span data-stu-id="65f68-300">This is the amount of free disk space necessary.</span></span> <span data-ttu-id="65f68-301">默认值为10000000。</span><span class="sxs-lookup"><span data-stu-id="65f68-301">The default value is 10000000.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65f68-302">使用此属性可确保日志文件不会完全填满磁盘空间。</span><span class="sxs-lookup"><span data-stu-id="65f68-302">Use this property to make sure that the log files do not completely fill the disk.</span></span>  
  
 <span data-ttu-id="65f68-303">如果可用磁盘空间量 (以字节为单位，) 小于此属性的值，则当 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 类尝试将消息写入日志时，消息将被丢弃，失败或引发异常的原因取决于属性的值 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-303">If the amount of free disk space (in bytes) is less than the value of this property, then when the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class attempts to write a message to the log, the message is discarded and the failure is either silent or an exception is thrown depending on the value of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property.</span></span> <span data-ttu-id="65f68-304">否则，如果日志文件大小 (以字节为单位) 大于，则会将消息写入日志 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-304">Otherwise, the message is written to the log, if the log file size (in bytes) is greater than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="65f68-305">当此属性被设置为小于 0 的值时。</span><span class="sxs-lookup"><span data-stu-id="65f68-305">When this property is set to a value less than 0.</span></span></exception>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="65f68-306">向输出文件写入跟踪数据。</span><span class="sxs-lookup"><span data-stu-id="65f68-306">Writes trace data to the output file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65f68-307"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> 方法不应由应用程序代码调用。</span><span class="sxs-lookup"><span data-stu-id="65f68-307"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods are not intended to be called by application code.</span></span> <span data-ttu-id="65f68-308">这些方法由 <xref:System.Diagnostics.Debug> 、和类的成员调用 <xref:System.Diagnostics.Trace> 以将 <xref:System.Diagnostics.TraceSource> 跟踪数据写入输出。</span><span class="sxs-lookup"><span data-stu-id="65f68-308">These methods are called by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" FrameworkAlternate="net-5.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="fileLogTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberSignature Language="ILAsm" Value=".method public virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="65f68-309">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="65f68-309">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="65f68-310">调用此方法的跟踪源的名称。</span><span class="sxs-lookup"><span data-stu-id="65f68-310">A name of the trace source that invoked this method.</span></span></param>
        <param name="eventType"><span data-ttu-id="65f68-311"><see cref="T:System.Diagnostics.TraceEventType" /> 枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="65f68-311">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span></span></param>
        <param name="id"><span data-ttu-id="65f68-312">事件的数值标识符。</span><span class="sxs-lookup"><span data-stu-id="65f68-312">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="65f68-313">要发出的跟踪数据。</span><span class="sxs-lookup"><span data-stu-id="65f68-313">The trace data to emit.</span></span></param>
        <summary><span data-ttu-id="65f68-314">向输出文件或流中写入跟踪信息、数据对象和事件信息。</span><span class="sxs-lookup"><span data-stu-id="65f68-314">Writes trace information, a data object, and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65f68-315">此方法：</span><span class="sxs-lookup"><span data-stu-id="65f68-315">This method:</span></span>  
  
1.  <span data-ttu-id="65f68-316">设置输出的数据和上下文信息的格式。</span><span class="sxs-lookup"><span data-stu-id="65f68-316">Formats the data and context information for output.</span></span>  
  
2.  <span data-ttu-id="65f68-317">如有必要，创建新的日志文件。</span><span class="sxs-lookup"><span data-stu-id="65f68-317">Creates a new log file, if necessary.</span></span>  
  
3.  <span data-ttu-id="65f68-318">将信息写入日志文件。</span><span class="sxs-lookup"><span data-stu-id="65f68-318">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="65f68-319">有关创建新日志文件的详细信息，请参阅 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-319">For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="65f68-320">下表按显示的顺序列出了输出字段。</span><span class="sxs-lookup"><span data-stu-id="65f68-320">The following table lists the output fields in the order they appear.</span></span> <span data-ttu-id="65f68-321">这些字段由属性指定的字符串进行分隔 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> ，后跟行结束符。</span><span class="sxs-lookup"><span data-stu-id="65f68-321">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.</span></span>  
  
|<span data-ttu-id="65f68-322">字段</span><span class="sxs-lookup"><span data-stu-id="65f68-322">**Field**</span></span>|<span data-ttu-id="65f68-323">**输出条件**</span><span class="sxs-lookup"><span data-stu-id="65f68-323">**Output condition**</span></span>|<span data-ttu-id="65f68-324">**描述**</span><span class="sxs-lookup"><span data-stu-id="65f68-324">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="65f68-325">始终</span><span class="sxs-lookup"><span data-stu-id="65f68-325">Always</span></span>|<span data-ttu-id="65f68-326">`name` 的值。</span><span class="sxs-lookup"><span data-stu-id="65f68-326">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="65f68-327">始终</span><span class="sxs-lookup"><span data-stu-id="65f68-327">Always</span></span>|<span data-ttu-id="65f68-328">的枚举值名称 `eventType` 。</span><span class="sxs-lookup"><span data-stu-id="65f68-328">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="65f68-329">始终</span><span class="sxs-lookup"><span data-stu-id="65f68-329">Always</span></span>|<span data-ttu-id="65f68-330">`id` 的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="65f68-330">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="65f68-331">始终</span><span class="sxs-lookup"><span data-stu-id="65f68-331">Always</span></span>|<span data-ttu-id="65f68-332">`data` 的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="65f68-332">The string representation of `data`.</span></span>|  
|`callStack`|<span data-ttu-id="65f68-333">如果在 <xref:System.Diagnostics.TraceOptions.Callstack> 属性中设置了标志，则为 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-333">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="65f68-334">的 <xref:System.Diagnostics.TraceEventCache.Callstack%2A> 属性 `eventCache` 。</span><span class="sxs-lookup"><span data-stu-id="65f68-334">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="65f68-335">如果在 <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> 属性中设置了标志，则为 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-335">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="65f68-336">的 <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> 属性 `eventCache` 。</span><span class="sxs-lookup"><span data-stu-id="65f68-336">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="65f68-337">如果在 <xref:System.Diagnostics.TraceOptions.DateTime> 属性中设置了标志，则为 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-337">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="65f68-338">的属性的字符串表示形式 <xref:System.Diagnostics.TraceEventCache.DateTime%2A> `eventCache` 。</span><span class="sxs-lookup"><span data-stu-id="65f68-338">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="65f68-339">固定区域性用于字符串转换。</span><span class="sxs-lookup"><span data-stu-id="65f68-339">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="65f68-340">如果在 <xref:System.Diagnostics.TraceOptions.ProcessId> 属性中设置了标志，则为 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-340">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="65f68-341">的属性的字符串表示形式 <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> `eventCache` 。</span><span class="sxs-lookup"><span data-stu-id="65f68-341">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="65f68-342">固定区域性用于字符串转换。</span><span class="sxs-lookup"><span data-stu-id="65f68-342">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="65f68-343">如果在 <xref:System.Diagnostics.TraceOptions.ThreadId> 属性中设置了标志，则为 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-343">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="65f68-344">的 <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> 属性 `eventCache` 。</span><span class="sxs-lookup"><span data-stu-id="65f68-344">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="65f68-345">如果在 <xref:System.Diagnostics.TraceOptions.Timestamp> 属性中设置了标志，则为 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-345">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="65f68-346">的属性的字符串表示形式 <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> `eventCache` 。</span><span class="sxs-lookup"><span data-stu-id="65f68-346">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="65f68-347">固定区域性用于字符串转换。</span><span class="sxs-lookup"><span data-stu-id="65f68-347">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="65f68-348">当 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> 属性为时 `True` 。</span><span class="sxs-lookup"><span data-stu-id="65f68-348">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="65f68-349">计算机的名称。</span><span class="sxs-lookup"><span data-stu-id="65f68-349">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" FrameworkAlternate="net-5.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="fileLogTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberSignature Language="ILAsm" Value=".method public virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="net-5.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="65f68-350">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="65f68-350">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="65f68-351">调用此方法的跟踪源的名称。</span><span class="sxs-lookup"><span data-stu-id="65f68-351">The name of the trace source that invoked this method.</span></span></param>
        <param name="eventType"><span data-ttu-id="65f68-352"><see cref="T:System.Diagnostics.TraceEventType" /> 枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="65f68-352">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span></span></param>
        <param name="id"><span data-ttu-id="65f68-353">事件的数值标识符。</span><span class="sxs-lookup"><span data-stu-id="65f68-353">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="65f68-354">要作为数据发出的对象数组。</span><span class="sxs-lookup"><span data-stu-id="65f68-354">An array of objects to emit as data.</span></span></param>
        <summary><span data-ttu-id="65f68-355">将跟踪信息、数据对象数组和事件信息写入输出文件或流中。</span><span class="sxs-lookup"><span data-stu-id="65f68-355">Writes trace information, an array of data objects, and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65f68-356">此方法：</span><span class="sxs-lookup"><span data-stu-id="65f68-356">This method:</span></span>  
  
1.  <span data-ttu-id="65f68-357">设置输出的数据和上下文信息的格式，</span><span class="sxs-lookup"><span data-stu-id="65f68-357">Formats the data and context information for output,</span></span>  
  
2.  <span data-ttu-id="65f68-358">创建新的日志文件（如有必要）</span><span class="sxs-lookup"><span data-stu-id="65f68-358">Creates a new log file, if necessary,</span></span>  
  
3.  <span data-ttu-id="65f68-359">将信息写入日志文件。</span><span class="sxs-lookup"><span data-stu-id="65f68-359">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="65f68-360">有关创建新日志文件的详细信息，请参阅 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-360">For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="65f68-361">此表按显示的顺序列出输出字段。</span><span class="sxs-lookup"><span data-stu-id="65f68-361">This table lists the output fields in the order they appear.</span></span> <span data-ttu-id="65f68-362">这些字段由属性指定的字符串进行分隔 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> ，后跟行结束符。</span><span class="sxs-lookup"><span data-stu-id="65f68-362">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.</span></span>  
  
|<span data-ttu-id="65f68-363">字段</span><span class="sxs-lookup"><span data-stu-id="65f68-363">**Field**</span></span>|<span data-ttu-id="65f68-364">**输出条件**</span><span class="sxs-lookup"><span data-stu-id="65f68-364">**Output condition**</span></span>|<span data-ttu-id="65f68-365">**描述**</span><span class="sxs-lookup"><span data-stu-id="65f68-365">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="65f68-366">始终</span><span class="sxs-lookup"><span data-stu-id="65f68-366">Always</span></span>|<span data-ttu-id="65f68-367">`name` 的值。</span><span class="sxs-lookup"><span data-stu-id="65f68-367">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="65f68-368">始终</span><span class="sxs-lookup"><span data-stu-id="65f68-368">Always</span></span>|<span data-ttu-id="65f68-369">的枚举值名称 `eventType` 。</span><span class="sxs-lookup"><span data-stu-id="65f68-369">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="65f68-370">始终</span><span class="sxs-lookup"><span data-stu-id="65f68-370">Always</span></span>|<span data-ttu-id="65f68-371">`id` 的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="65f68-371">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="65f68-372">始终</span><span class="sxs-lookup"><span data-stu-id="65f68-372">Always</span></span>|<span data-ttu-id="65f68-373">由中每个元素的字符串表示形式组成的字符串 `data` ，每个元素由分隔 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-373">The string consisting of the string representation of each element in `data`, each separated by <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>.</span></span>|  
|`callStack`|<span data-ttu-id="65f68-374">如果在 <xref:System.Diagnostics.TraceOptions.Callstack> 属性中设置了标志，则为 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-374">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="65f68-375">的 <xref:System.Diagnostics.TraceEventCache.Callstack%2A> 属性 `eventCache` 。</span><span class="sxs-lookup"><span data-stu-id="65f68-375">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="65f68-376">如果在 <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> 属性中设置了标志，则为 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-376">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="65f68-377">的 <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> 属性 `eventCache` 。</span><span class="sxs-lookup"><span data-stu-id="65f68-377">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="65f68-378">如果在 <xref:System.Diagnostics.TraceOptions.DateTime> 属性中设置了标志，则为 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-378">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="65f68-379">的属性的字符串表示形式 <xref:System.Diagnostics.TraceEventCache.DateTime%2A> `eventCache` 。</span><span class="sxs-lookup"><span data-stu-id="65f68-379">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="65f68-380">固定区域性用于字符串转换。</span><span class="sxs-lookup"><span data-stu-id="65f68-380">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="65f68-381">如果在 <xref:System.Diagnostics.TraceOptions.ProcessId> 属性中设置了标志，则为 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-381">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="65f68-382">的属性的字符串表示形式 <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> `eventCache` 。</span><span class="sxs-lookup"><span data-stu-id="65f68-382">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="65f68-383">固定区域性用于字符串转换。</span><span class="sxs-lookup"><span data-stu-id="65f68-383">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="65f68-384">如果在 <xref:System.Diagnostics.TraceOptions.ThreadId> 属性中设置了标志，则为 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-384">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="65f68-385">的 <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> 属性 `eventCache` 。</span><span class="sxs-lookup"><span data-stu-id="65f68-385">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="65f68-386">如果在 <xref:System.Diagnostics.TraceOptions.Timestamp> 属性中设置了标志，则为 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-386">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="65f68-387">的属性的字符串表示形式 <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> `eventCache` 。</span><span class="sxs-lookup"><span data-stu-id="65f68-387">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="65f68-388">固定区域性用于字符串转换。</span><span class="sxs-lookup"><span data-stu-id="65f68-388">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="65f68-389">当 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> 属性为时 `True` 。</span><span class="sxs-lookup"><span data-stu-id="65f68-389">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="65f68-390">计算机的名称。</span><span class="sxs-lookup"><span data-stu-id="65f68-390">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="65f68-391">向输出文件或流中写入跟踪信息和事件信息。</span><span class="sxs-lookup"><span data-stu-id="65f68-391">Writes trace and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65f68-392"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> 方法不应由应用程序代码调用。</span><span class="sxs-lookup"><span data-stu-id="65f68-392"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods are not intended to be called by application code.</span></span> <span data-ttu-id="65f68-393">这些方法由 <xref:System.Diagnostics.Debug> 、和类的成员调用 <xref:System.Diagnostics.Trace> 以将 <xref:System.Diagnostics.TraceSource> 跟踪数据写入输出。</span><span class="sxs-lookup"><span data-stu-id="65f68-393">These methods are called by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" FrameworkAlternate="net-5.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="fileLogTraceListener.TraceEvent (eventCache, source, eventType, id, message)" />
      <MemberSignature Language="ILAsm" Value=".method public virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="65f68-394">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="65f68-394">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="65f68-395">调用此方法的跟踪源的名称。</span><span class="sxs-lookup"><span data-stu-id="65f68-395">A name of the trace source that invoked this method.</span></span></param>
        <param name="eventType"><span data-ttu-id="65f68-396"><see cref="T:System.Diagnostics.TraceEventType" /> 枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="65f68-396">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span></span></param>
        <param name="id"><span data-ttu-id="65f68-397">事件的数值标识符。</span><span class="sxs-lookup"><span data-stu-id="65f68-397">A numeric identifier for the event.</span></span></param>
        <param name="message"><span data-ttu-id="65f68-398">要写入的消息。</span><span class="sxs-lookup"><span data-stu-id="65f68-398">A message to write.</span></span></param>
        <summary><span data-ttu-id="65f68-399">将跟踪信息、消息和事件信息写入输出文件或流中。</span><span class="sxs-lookup"><span data-stu-id="65f68-399">Writes trace information, a message and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65f68-400">此方法：</span><span class="sxs-lookup"><span data-stu-id="65f68-400">This method:</span></span>  
  
1.  <span data-ttu-id="65f68-401">设置输出的数据和上下文信息的格式。</span><span class="sxs-lookup"><span data-stu-id="65f68-401">Formats the data and context information for output.</span></span>  
  
2.  <span data-ttu-id="65f68-402">如有必要，创建新的日志文件。</span><span class="sxs-lookup"><span data-stu-id="65f68-402">Creates a new log file, if necessary.</span></span>  
  
3.  <span data-ttu-id="65f68-403">将信息写入日志文件。</span><span class="sxs-lookup"><span data-stu-id="65f68-403">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="65f68-404">有关创建新日志文件的详细信息，请参阅 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-404">For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="65f68-405">此表按其显示顺序列出了输出字段。</span><span class="sxs-lookup"><span data-stu-id="65f68-405">This table lists the output fields in the order in which they appear.</span></span> <span data-ttu-id="65f68-406">这些字段由属性指定的字符串进行分隔 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> ，后跟行结束符。</span><span class="sxs-lookup"><span data-stu-id="65f68-406">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.</span></span>  
  
|<span data-ttu-id="65f68-407">字段</span><span class="sxs-lookup"><span data-stu-id="65f68-407">**Field**</span></span>|<span data-ttu-id="65f68-408">**输出条件**</span><span class="sxs-lookup"><span data-stu-id="65f68-408">**Output condition**</span></span>|<span data-ttu-id="65f68-409">**描述**</span><span class="sxs-lookup"><span data-stu-id="65f68-409">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="65f68-410">始终。</span><span class="sxs-lookup"><span data-stu-id="65f68-410">Always.</span></span>|<span data-ttu-id="65f68-411">`name` 的值。</span><span class="sxs-lookup"><span data-stu-id="65f68-411">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="65f68-412">始终。</span><span class="sxs-lookup"><span data-stu-id="65f68-412">Always.</span></span>|<span data-ttu-id="65f68-413">的枚举值名称 `eventType` 。</span><span class="sxs-lookup"><span data-stu-id="65f68-413">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="65f68-414">始终。</span><span class="sxs-lookup"><span data-stu-id="65f68-414">Always.</span></span>|<span data-ttu-id="65f68-415">`id` 的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="65f68-415">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="65f68-416">始终。</span><span class="sxs-lookup"><span data-stu-id="65f68-416">Always.</span></span>|<span data-ttu-id="65f68-417">`message` 的值。</span><span class="sxs-lookup"><span data-stu-id="65f68-417">The value of `message`.</span></span>|  
|`callStack`|<span data-ttu-id="65f68-418">如果在 <xref:System.Diagnostics.TraceOptions.Callstack> 属性中设置了标志，则为 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-418">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="65f68-419">的 <xref:System.Diagnostics.TraceEventCache.Callstack%2A> 属性 `eventCache` 。</span><span class="sxs-lookup"><span data-stu-id="65f68-419">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="65f68-420">如果在 <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> 属性中设置了标志，则为 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-420">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="65f68-421">的 <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> 属性 `eventCache` 。</span><span class="sxs-lookup"><span data-stu-id="65f68-421">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="65f68-422">如果在 <xref:System.Diagnostics.TraceOptions.DateTime> 属性中设置了标志，则为 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-422">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="65f68-423">的属性的字符串表示形式 <xref:System.Diagnostics.TraceEventCache.DateTime%2A> `eventCache` 。</span><span class="sxs-lookup"><span data-stu-id="65f68-423">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="65f68-424">固定区域性用于字符串转换。</span><span class="sxs-lookup"><span data-stu-id="65f68-424">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="65f68-425">如果在 <xref:System.Diagnostics.TraceOptions.ProcessId> 属性中设置了标志，则为 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-425">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="65f68-426">的属性的字符串表示形式 <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> `eventCache` 。</span><span class="sxs-lookup"><span data-stu-id="65f68-426">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="65f68-427">固定区域性用于字符串转换。</span><span class="sxs-lookup"><span data-stu-id="65f68-427">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="65f68-428">如果在 <xref:System.Diagnostics.TraceOptions.ThreadId> 属性中设置了标志，则为 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-428">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="65f68-429">的 <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> 属性 `eventCache` 。</span><span class="sxs-lookup"><span data-stu-id="65f68-429">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="65f68-430">如果在 <xref:System.Diagnostics.TraceOptions.Timestamp> 属性中设置了标志，则为 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-430">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="65f68-431">的属性的字符串表示形式 <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> `eventCache` 。</span><span class="sxs-lookup"><span data-stu-id="65f68-431">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="65f68-432">固定区域性用于字符串转换。</span><span class="sxs-lookup"><span data-stu-id="65f68-432">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="65f68-433">当 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> 属性为时 `True` 。</span><span class="sxs-lookup"><span data-stu-id="65f68-433">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="65f68-434">计算机的名称。</span><span class="sxs-lookup"><span data-stu-id="65f68-434">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" FrameworkAlternate="net-5.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="fileLogTraceListener.TraceEvent (eventCache, source, eventType, id, format, args)" />
      <MemberSignature Language="ILAsm" Value=".method public virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="net-5.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="65f68-435">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="65f68-435">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="65f68-436">调用此方法的跟踪源的名称。</span><span class="sxs-lookup"><span data-stu-id="65f68-436">A name of the trace source that invoked this method.</span></span></param>
        <param name="eventType"><span data-ttu-id="65f68-437"><see cref="T:System.Diagnostics.TraceEventType" /> 枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="65f68-437">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span></span></param>
        <param name="id"><span data-ttu-id="65f68-438">事件的数值标识符。</span><span class="sxs-lookup"><span data-stu-id="65f68-438">A numeric identifier for the event.</span></span></param>
        <param name="format"><span data-ttu-id="65f68-439">一个格式字符串，其中包含零个或多个格式项，它们对应于 <paramref name="args" /> 数组中的对象。</span><span class="sxs-lookup"><span data-stu-id="65f68-439">A format string that contains zero or more format items, which correspond to objects in the <paramref name="args" /> array.</span></span></param>
        <param name="args"><span data-ttu-id="65f68-440">包含零个或多个要格式化的对象的 <see langword="Object" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="65f68-440">An <see langword="Object" /> array containing zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="65f68-441">将跟踪信息、格式化对象数组和事件信息写入输出文件或流中。</span><span class="sxs-lookup"><span data-stu-id="65f68-441">Writes trace information, a formatted array of objects, and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65f68-442">此方法：</span><span class="sxs-lookup"><span data-stu-id="65f68-442">This method:</span></span>  
  
1.  <span data-ttu-id="65f68-443">设置输出的数据和上下文信息的格式。</span><span class="sxs-lookup"><span data-stu-id="65f68-443">Formats the data and context information for output.</span></span>  
  
2.  <span data-ttu-id="65f68-444">创建新的日志文件（如有必要）。</span><span class="sxs-lookup"><span data-stu-id="65f68-444">Creates a new a new log file, if necessary.</span></span>  
  
3.  <span data-ttu-id="65f68-445">将信息写入日志文件。</span><span class="sxs-lookup"><span data-stu-id="65f68-445">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="65f68-446">有关创建新日志文件的详细信息，请参阅 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-446">For more information on creating new log file, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="65f68-447">此表按其显示顺序列出了输出字段。</span><span class="sxs-lookup"><span data-stu-id="65f68-447">This table lists the output fields in the order in which they appear.</span></span> <span data-ttu-id="65f68-448">这些字段由属性指定的字符串分隔 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> ，后跟行结束符。</span><span class="sxs-lookup"><span data-stu-id="65f68-448">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and followed by a line terminator.</span></span>  
  
|<span data-ttu-id="65f68-449">字段</span><span class="sxs-lookup"><span data-stu-id="65f68-449">**Field**</span></span>|<span data-ttu-id="65f68-450">**输出条件**</span><span class="sxs-lookup"><span data-stu-id="65f68-450">**Output condition**</span></span>|<span data-ttu-id="65f68-451">**描述**</span><span class="sxs-lookup"><span data-stu-id="65f68-451">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="65f68-452">始终</span><span class="sxs-lookup"><span data-stu-id="65f68-452">Always</span></span>|<span data-ttu-id="65f68-453">`name` 的值。</span><span class="sxs-lookup"><span data-stu-id="65f68-453">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="65f68-454">始终</span><span class="sxs-lookup"><span data-stu-id="65f68-454">Always</span></span>|<span data-ttu-id="65f68-455">的枚举值名称 `eventType` 。</span><span class="sxs-lookup"><span data-stu-id="65f68-455">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="65f68-456">始终</span><span class="sxs-lookup"><span data-stu-id="65f68-456">Always</span></span>|<span data-ttu-id="65f68-457">`id` 的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="65f68-457">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="65f68-458">始终</span><span class="sxs-lookup"><span data-stu-id="65f68-458">Always</span></span>|<span data-ttu-id="65f68-459">`args`使用字符串格式化的数据 `format` ，并使用固定区域性进行字符串转换。</span><span class="sxs-lookup"><span data-stu-id="65f68-459">The data in `args` formatted with the `format` string and using the invariant culture for string conversions.</span></span>|  
|`callStack`|<span data-ttu-id="65f68-460">如果在 <xref:System.Diagnostics.TraceOptions.Callstack> 属性中设置了标志，则为 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-460">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="65f68-461">的 <xref:System.Diagnostics.TraceEventCache.Callstack%2A> 属性 `eventCache` 。</span><span class="sxs-lookup"><span data-stu-id="65f68-461">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="65f68-462">如果在 <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> 属性中设置了标志，则为 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-462">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="65f68-463">的 <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> 属性 `eventCache` 。</span><span class="sxs-lookup"><span data-stu-id="65f68-463">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="65f68-464">如果在 <xref:System.Diagnostics.TraceOptions.DateTime> 属性中设置了标志，则为 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-464">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="65f68-465">的属性的字符串表示形式 <xref:System.Diagnostics.TraceEventCache.DateTime%2A> `eventCache` 。</span><span class="sxs-lookup"><span data-stu-id="65f68-465">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="65f68-466">固定区域性用于字符串转换。</span><span class="sxs-lookup"><span data-stu-id="65f68-466">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="65f68-467">如果在 <xref:System.Diagnostics.TraceOptions.ProcessId> 属性中设置了标志，则为 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-467">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="65f68-468">的属性的字符串表示形式 <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> `eventCache` 。</span><span class="sxs-lookup"><span data-stu-id="65f68-468">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="65f68-469">固定区域性用于字符串转换。</span><span class="sxs-lookup"><span data-stu-id="65f68-469">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="65f68-470">如果在 <xref:System.Diagnostics.TraceOptions.ThreadId> 属性中设置了标志，则为 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-470">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="65f68-471">的 <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> 属性 `eventCache` 。</span><span class="sxs-lookup"><span data-stu-id="65f68-471">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="65f68-472">如果在 <xref:System.Diagnostics.TraceOptions.Timestamp> 属性中设置了标志，则为 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65f68-472">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="65f68-473">的属性的字符串表示形式 <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> `eventCache` 。</span><span class="sxs-lookup"><span data-stu-id="65f68-473">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="65f68-474">固定区域性用于字符串转换。</span><span class="sxs-lookup"><span data-stu-id="65f68-474">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="65f68-475">当 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> 属性为时 `True` 。</span><span class="sxs-lookup"><span data-stu-id="65f68-475">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="65f68-476">计算机的名称。</span><span class="sxs-lookup"><span data-stu-id="65f68-476">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="fileLogTraceListener.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="65f68-477"><see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="65f68-477"><see langword="String" />.</span></span> <span data-ttu-id="65f68-478">要写入的自定义消息。</span><span class="sxs-lookup"><span data-stu-id="65f68-478">The custom message to write.</span></span></param>
        <summary><span data-ttu-id="65f68-479">将消息逐字写入磁盘，不带任何附加上下文信息。</span><span class="sxs-lookup"><span data-stu-id="65f68-479">Writes a verbatim message to disk, without any additional context information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65f68-480"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write%2A>方法将特定消息写入日志文件，而不包含任何其他上下文信息。</span><span class="sxs-lookup"><span data-stu-id="65f68-480">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write%2A> method writes a specific message to the log file, without any additional context information.</span></span>  
  
 <span data-ttu-id="65f68-481">使用其中一种 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> 方法在日志输出中包含上下文信息。</span><span class="sxs-lookup"><span data-stu-id="65f68-481">Use the one of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods to include the context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string -&gt; unit" Usage="fileLogTraceListener.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="65f68-482"><see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="65f68-482"><see langword="String" />.</span></span> <span data-ttu-id="65f68-483">要写入的自定义消息。</span><span class="sxs-lookup"><span data-stu-id="65f68-483">The custom message to write.</span></span></param>
        <summary><span data-ttu-id="65f68-484">将消息逐字写入磁盘，后跟当前行分隔符，不带任何附加上下文信息。</span><span class="sxs-lookup"><span data-stu-id="65f68-484">Writes a verbatim message to disk, followed by the current line terminator, without any additional context information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65f68-485"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine%2A>方法将特定消息写入日志文件，而不包含任何其他上下文信息。</span><span class="sxs-lookup"><span data-stu-id="65f68-485">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine%2A> method writes a specific message to the log file, without any additional context information.</span></span>  
  
 <span data-ttu-id="65f68-486">使用其中一种 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> 方法在日志输出中包含上下文信息。</span><span class="sxs-lookup"><span data-stu-id="65f68-486">Use the one of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods to include the context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
