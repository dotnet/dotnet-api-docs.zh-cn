<Type Name="DebugLoggerFactoryExtensions" FullName="Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c782cbb23daa47490927afe2b466f4de5c97d1ad" /><Meta Name="ms.sourcegitcommit" Value="3001e6bfbacb09c47be86e2ade5b0c2bd91bb0cb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/31/2020" /><Meta Name="ms.locfileid" Value="87467572" /></Metadata><TypeSignature Language="C#" Value="public static class DebugLoggerFactoryExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DebugLoggerFactoryExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module DebugLoggerFactoryExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class DebugLoggerFactoryExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type DebugLoggerFactoryExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Logging.Debug</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:Microsoft.Extensions.Logging.ILoggerFactory" /> 类的扩展方法。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddDebug">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggerFactory AddDebug (this Microsoft.Extensions.Logging.ILoggerFactory factory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggerFactory AddDebug(class Microsoft.Extensions.Logging.ILoggerFactory factory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddDebug (factory As ILoggerFactory) As ILoggerFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggerFactory ^ AddDebug(Microsoft::Extensions::Logging::ILoggerFactory ^ factory);" />
      <MemberSignature Language="F#" Value="static member AddDebug : Microsoft.Extensions.Logging.ILoggerFactory -&gt; Microsoft.Extensions.Logging.ILoggerFactory" Usage="Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug factory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Debug</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-plat-ext-2.2">
          <AttributeName Language="C#">[System.Obsolete("This method is obsolete and will be removed in a future version. The recommended alternative is AddDebug(this ILoggingBuilder builder).")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This method is obsolete and will be removed in a future version. The recommended alternative is AddDebug(this ILoggingBuilder builder).")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggerFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factory" Type="Microsoft.Extensions.Logging.ILoggerFactory" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-1.0;dotnet-plat-ext-1.1;dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
      </Parameters>
      <Docs>
        <param name="factory">扩展方法参数。</param>
        <summary>添加为 <see cref="T:Microsoft.Extensions.Logging.LogLevel" />.Information 或更高级别启用的调试记录器。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDebug">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddDebug (this Microsoft.Extensions.Logging.ILoggingBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddDebug(class Microsoft.Extensions.Logging.ILoggingBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggingBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddDebug (builder As ILoggingBuilder) As ILoggingBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddDebug(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member AddDebug : Microsoft.Extensions.Logging.ILoggingBuilder -&gt; Microsoft.Extensions.Logging.ILoggingBuilder" Usage="Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Debug</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="builder">扩展方法参数。</param>
        <summary>将名为“Debug”的调试记录器添加到工厂。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDebug">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggerFactory AddDebug (this Microsoft.Extensions.Logging.ILoggerFactory factory, Microsoft.Extensions.Logging.LogLevel minLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggerFactory AddDebug(class Microsoft.Extensions.Logging.ILoggerFactory factory, valuetype Microsoft.Extensions.Logging.LogLevel minLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddDebug (factory As ILoggerFactory, minLevel As LogLevel) As ILoggerFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggerFactory ^ AddDebug(Microsoft::Extensions::Logging::ILoggerFactory ^ factory, Microsoft::Extensions::Logging::LogLevel minLevel);" />
      <MemberSignature Language="F#" Value="static member AddDebug : Microsoft.Extensions.Logging.ILoggerFactory * Microsoft.Extensions.Logging.LogLevel -&gt; Microsoft.Extensions.Logging.ILoggerFactory" Usage="Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug (factory, minLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Debug</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-plat-ext-2.2">
          <AttributeName Language="C#">[System.Obsolete("This method is obsolete and will be removed in a future version. The recommended alternative is AddDebug(this ILoggingBuilder builder).")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This method is obsolete and will be removed in a future version. The recommended alternative is AddDebug(this ILoggingBuilder builder).")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggerFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factory" Type="Microsoft.Extensions.Logging.ILoggerFactory" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-1.0;dotnet-plat-ext-1.1;dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
        <Parameter Name="minLevel" Type="Microsoft.Extensions.Logging.LogLevel" Index="1" FrameworkAlternate="dotnet-plat-ext-1.0;dotnet-plat-ext-1.1;dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
      </Parameters>
      <Docs>
        <param name="factory">扩展方法参数。</param>
        <param name="minLevel">要记录的最小 <see cref="T:Microsoft.Extensions.Logging.LogLevel" /></param>
        <summary>添加为 minLevel 或更高级别的 <see cref="T:Microsoft.Extensions.Logging.LogLevel" /> 启用的调试记录器。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDebug">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggerFactory AddDebug (this Microsoft.Extensions.Logging.ILoggerFactory factory, Func&lt;string,Microsoft.Extensions.Logging.LogLevel,bool&gt; filter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggerFactory AddDebug(class Microsoft.Extensions.Logging.ILoggerFactory factory, class System.Func`3&lt;string, valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddDebug (factory As ILoggerFactory, filter As Func(Of String, LogLevel, Boolean)) As ILoggerFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggerFactory ^ AddDebug(Microsoft::Extensions::Logging::ILoggerFactory ^ factory, Func&lt;System::String ^, Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="static member AddDebug : Microsoft.Extensions.Logging.ILoggerFactory * Func&lt;string, Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.ILoggerFactory" Usage="Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug (factory, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Debug</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-plat-ext-2.2">
          <AttributeName Language="C#">[System.Obsolete("This method is obsolete and will be removed in a future version. The recommended alternative is AddDebug(this ILoggingBuilder builder).")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This method is obsolete and will be removed in a future version. The recommended alternative is AddDebug(this ILoggingBuilder builder).")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggerFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factory" Type="Microsoft.Extensions.Logging.ILoggerFactory" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-1.0;dotnet-plat-ext-1.1;dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
        <Parameter Name="filter" Type="System.Func&lt;System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" Index="1" FrameworkAlternate="dotnet-plat-ext-1.0;dotnet-plat-ext-1.1;dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
      </Parameters>
      <Docs>
        <param name="factory">扩展方法参数。</param>
        <param name="filter">用于根据日志级别筛选事件的函数。</param>
        <summary>添加由筛选器函数定义的已启用的调试记录器。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
