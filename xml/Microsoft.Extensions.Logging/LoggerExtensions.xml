<Type Name="LoggerExtensions" FullName="Microsoft.Extensions.Logging.LoggerExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f4e5ded16c2c3927c9de8c743518fb498f085cc6" /><Meta Name="ms.sourcegitcommit" Value="3001e6bfbacb09c47be86e2ade5b0c2bd91bb0cb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/31/2020" /><Meta Name="ms.locfileid" Value="87469826" /></Metadata><TypeSignature Language="C#" Value="public static class LoggerExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit LoggerExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Logging.LoggerExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module LoggerExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class LoggerExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type LoggerExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>适用于常见方案的 ILogger 扩展方法。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginScope">
      <MemberSignature Language="C#" Value="public static IDisposable BeginScope (this Microsoft.Extensions.Logging.ILogger logger, string messageFormat, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable BeginScope(class Microsoft.Extensions.Logging.ILogger logger, string messageFormat, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.BeginScope(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BeginScope (logger As ILogger, messageFormat As String, ParamArray args As Object()) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IDisposable ^ BeginScope(Microsoft::Extensions::Logging::ILogger ^ logger, System::String ^ messageFormat, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member BeginScope : Microsoft.Extensions.Logging.ILogger * string * obj[] -&gt; IDisposable" Usage="Microsoft.Extensions.Logging.LoggerExtensions.BeginScope (logger, messageFormat, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="messageFormat" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger">要在其中创建范围的 <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</param>
        <param name="messageFormat">采用消息模板格式的日志消息的格式字符串。 示例： <code>"User {User} logged in from {Address}"</code></param>
        <param name="args">一个对象数组，其中包含零个或多个要设置格式的对象。</param>
        <summary>设置消息格式并创建范围。</summary>
        <returns>一个可处置的范围对象。 可以为 null。</returns>
        <remarks>To be added.</remarks>
        <example>使用（记录器。BeginScope （"从 {Address} 处理请求"，地址）） {}</example>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static void Log (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.LogLevel logLevel, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Log(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.LogLevel logLevel, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.Log(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Log (logger As ILogger, logLevel As LogLevel, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Log(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::LogLevel logLevel, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member Log : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.LogLevel * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.Log (logger, logLevel, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="logLevel" Type="Microsoft.Extensions.Logging.LogLevel" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="message" Type="System.String" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="args" Type="System.Object[]" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger">要向其中进行写入的 <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</param>
        <param name="logLevel">将在此级别上写入项。</param>
        <param name="message">日志消息的格式字符串。</param>
        <param name="args">一个对象数组，其中包含零个或多个要设置格式的对象。</param>
        <summary>在指定的日志级别设置日志消息格式并写入该消息。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static void Log (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.LogLevel logLevel, Microsoft.Extensions.Logging.EventId eventId, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Log(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.LogLevel logLevel, valuetype Microsoft.Extensions.Logging.EventId eventId, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.Log(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Log (logger As ILogger, logLevel As LogLevel, eventId As EventId, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Log(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::LogLevel logLevel, Microsoft::Extensions::Logging::EventId eventId, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member Log : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.LogLevel * Microsoft.Extensions.Logging.EventId * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.Log (logger, logLevel, eventId, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="logLevel" Type="Microsoft.Extensions.Logging.LogLevel" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="message" Type="System.String" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="args" Type="System.Object[]" Index="4" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger">要向其中进行写入的 <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</param>
        <param name="logLevel">将在此级别上写入项。</param>
        <param name="eventId">与日志关联的事件 ID。</param>
        <param name="message">日志消息的格式字符串。</param>
        <param name="args">一个对象数组，其中包含零个或多个要设置格式的对象。</param>
        <summary>在指定的日志级别设置日志消息格式并写入该消息。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static void Log (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.LogLevel logLevel, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Log(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.LogLevel logLevel, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.Log(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Log (logger As ILogger, logLevel As LogLevel, exception As Exception, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Log(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::LogLevel logLevel, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member Log : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.LogLevel * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.Log (logger, logLevel, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="logLevel" Type="Microsoft.Extensions.Logging.LogLevel" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="exception" Type="System.Exception" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="message" Type="System.String" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="args" Type="System.Object[]" Index="4" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger">要向其中进行写入的 <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</param>
        <param name="logLevel">将在此级别上写入项。</param>
        <param name="exception">要记录的异常。</param>
        <param name="message">日志消息的格式字符串。</param>
        <param name="args">一个对象数组，其中包含零个或多个要设置格式的对象。</param>
        <summary>在指定的日志级别设置日志消息格式并写入该消息。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static void Log (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.LogLevel logLevel, Microsoft.Extensions.Logging.EventId eventId, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Log(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.LogLevel logLevel, valuetype Microsoft.Extensions.Logging.EventId eventId, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.Log(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Log (logger As ILogger, logLevel As LogLevel, eventId As EventId, exception As Exception, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Log(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::LogLevel logLevel, Microsoft::Extensions::Logging::EventId eventId, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member Log : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.LogLevel * Microsoft.Extensions.Logging.EventId * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.Log (logger, logLevel, eventId, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="logLevel" Type="Microsoft.Extensions.Logging.LogLevel" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="exception" Type="System.Exception" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="message" Type="System.String" Index="4" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="args" Type="System.Object[]" Index="5" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger">要向其中进行写入的 <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</param>
        <param name="logLevel">将在此级别上写入项。</param>
        <param name="eventId">与日志关联的事件 ID。</param>
        <param name="exception">要记录的异常。</param>
        <param name="message">日志消息的格式字符串。</param>
        <param name="args">一个对象数组，其中包含零个或多个要设置格式的对象。</param>
        <summary>在指定的日志级别设置日志消息格式并写入该消息。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogCritical">
      <MemberSignature Language="C#" Value="public static void LogCritical (this Microsoft.Extensions.Logging.ILogger logger, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogCritical(class Microsoft.Extensions.Logging.ILogger logger, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogCritical (logger As ILogger, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogCritical(Microsoft::Extensions::Logging::ILogger ^ logger, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogCritical : Microsoft.Extensions.Logging.ILogger * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogCritical (logger, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger">要向其中进行写入的 <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</param>
        <param name="message">采用消息模板格式的日志消息的格式字符串。 示例： <code>"User {User} logged in from {Address}"</code></param>
        <param name="args">一个对象数组，其中包含零个或多个要设置格式的对象。</param>
        <summary>设置关键日志消息格式并写入该消息。</summary>
        <remarks>To be added.</remarks>
        <example>记录器.LogCritical （"处理来自 {Address} 的请求"，地址）</example>
      </Docs>
    </Member>
    <Member MemberName="LogCritical">
      <MemberSignature Language="C#" Value="public static void LogCritical (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.EventId eventId, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogCritical(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.EventId eventId, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogCritical (logger As ILogger, eventId As EventId, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogCritical(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::EventId eventId, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogCritical : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.EventId * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogCritical (logger, eventId, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger">要向其中进行写入的 <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</param>
        <param name="eventId">与日志关联的事件 ID。</param>
        <param name="message">采用消息模板格式的日志消息的格式字符串。 示例： <code>"User {User} logged in from {Address}"</code></param>
        <param name="args">一个对象数组，其中包含零个或多个要设置格式的对象。</param>
        <summary>设置关键日志消息格式并写入该消息。</summary>
        <remarks>To be added.</remarks>
        <example>记录器.LogCritical （0，"处理来自 {Address} 的请求"，地址）</example>
      </Docs>
    </Member>
    <Member MemberName="LogCritical">
      <MemberSignature Language="C#" Value="public static void LogCritical (this Microsoft.Extensions.Logging.ILogger logger, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogCritical(class Microsoft.Extensions.Logging.ILogger logger, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogCritical (logger As ILogger, exception As Exception, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogCritical(Microsoft::Extensions::Logging::ILogger ^ logger, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogCritical : Microsoft.Extensions.Logging.ILogger * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogCritical (logger, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="exception" Type="System.Exception" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="message" Type="System.String" Index="2" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="args" Type="System.Object[]" Index="3" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger">要向其中进行写入的 <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</param>
        <param name="exception">要记录的异常。</param>
        <param name="message">采用消息模板格式的日志消息的格式字符串。 示例： <code>"User {User} logged in from {Address}"</code></param>
        <param name="args">一个对象数组，其中包含零个或多个要设置格式的对象。</param>
        <summary>设置关键日志消息格式并写入该消息。</summary>
        <remarks>To be added.</remarks>
        <example>记录器.LogCritical （异常，"处理来自 {Address} 的请求时出错"，地址）</example>
      </Docs>
    </Member>
    <Member MemberName="LogCritical">
      <MemberSignature Language="C#" Value="public static void LogCritical (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.EventId eventId, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogCritical(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.EventId eventId, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogCritical (logger As ILogger, eventId As EventId, exception As Exception, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogCritical(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::EventId eventId, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogCritical : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.EventId * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogCritical (logger, eventId, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger">要向其中进行写入的 <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</param>
        <param name="eventId">与日志关联的事件 ID。</param>
        <param name="exception">要记录的异常。</param>
        <param name="message">采用消息模板格式的日志消息的格式字符串。 示例： <code>"User {User} logged in from {Address}"</code></param>
        <param name="args">一个对象数组，其中包含零个或多个要设置格式的对象。</param>
        <summary>设置关键日志消息格式并写入该消息。</summary>
        <remarks>To be added.</remarks>
        <example>记录器.LogCritical （0，exception，"处理来自 {Address} 的请求时出错"，地址）</example>
      </Docs>
    </Member>
    <Member MemberName="LogDebug">
      <MemberSignature Language="C#" Value="public static void LogDebug (this Microsoft.Extensions.Logging.ILogger logger, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogDebug(class Microsoft.Extensions.Logging.ILogger logger, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogDebug (logger As ILogger, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogDebug(Microsoft::Extensions::Logging::ILogger ^ logger, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogDebug : Microsoft.Extensions.Logging.ILogger * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogDebug (logger, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger">要向其中进行写入的 <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</param>
        <param name="message">采用消息模板格式的日志消息的格式字符串。 示例： <code>"User {User} logged in from {Address}"</code></param>
        <param name="args">一个对象数组，其中包含零个或多个要设置格式的对象。</param>
        <summary>设置调试日志消息格式并写入该消息。</summary>
        <remarks>To be added.</remarks>
        <example>记录器.LogDebug （"处理来自 {Address} 的请求"，地址）</example>
      </Docs>
    </Member>
    <Member MemberName="LogDebug">
      <MemberSignature Language="C#" Value="public static void LogDebug (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.EventId eventId, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogDebug(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.EventId eventId, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogDebug (logger As ILogger, eventId As EventId, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogDebug(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::EventId eventId, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogDebug : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.EventId * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogDebug (logger, eventId, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger">要向其中进行写入的 <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</param>
        <param name="eventId">与日志关联的事件 ID。</param>
        <param name="message">采用消息模板格式的日志消息的格式字符串。 示例： <code>"User {User} logged in from {Address}"</code></param>
        <param name="args">一个对象数组，其中包含零个或多个要设置格式的对象。</param>
        <summary>设置调试日志消息格式并写入该消息。</summary>
        <remarks>To be added.</remarks>
        <example>记录器.LogDebug （0，"处理来自 {Address} 的请求"，地址）</example>
      </Docs>
    </Member>
    <Member MemberName="LogDebug">
      <MemberSignature Language="C#" Value="public static void LogDebug (this Microsoft.Extensions.Logging.ILogger logger, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogDebug(class Microsoft.Extensions.Logging.ILogger logger, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogDebug (logger As ILogger, exception As Exception, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogDebug(Microsoft::Extensions::Logging::ILogger ^ logger, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogDebug : Microsoft.Extensions.Logging.ILogger * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogDebug (logger, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="exception" Type="System.Exception" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="message" Type="System.String" Index="2" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="args" Type="System.Object[]" Index="3" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger">要向其中进行写入的 <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</param>
        <param name="exception">要记录的异常。</param>
        <param name="message">采用消息模板格式的日志消息的格式字符串。 示例： <code>"User {User} logged in from {Address}"</code></param>
        <param name="args">一个对象数组，其中包含零个或多个要设置格式的对象。</param>
        <summary>设置调试日志消息格式并写入该消息。</summary>
        <remarks>To be added.</remarks>
        <example>记录器.LogDebug （异常，"处理来自 {Address} 的请求时出错"，地址）</example>
      </Docs>
    </Member>
    <Member MemberName="LogDebug">
      <MemberSignature Language="C#" Value="public static void LogDebug (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.EventId eventId, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogDebug(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.EventId eventId, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogDebug (logger As ILogger, eventId As EventId, exception As Exception, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogDebug(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::EventId eventId, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogDebug : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.EventId * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogDebug (logger, eventId, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger">要向其中进行写入的 <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</param>
        <param name="eventId">与日志关联的事件 ID。</param>
        <param name="exception">要记录的异常。</param>
        <param name="message">采用消息模板格式的日志消息的格式字符串。 示例： <code>"User {User} logged in from {Address}"</code></param>
        <param name="args">一个对象数组，其中包含零个或多个要设置格式的对象。</param>
        <summary>设置调试日志消息格式并写入该消息。</summary>
        <remarks>To be added.</remarks>
        <example>记录器.LogDebug （0，exception，"处理来自 {Address} 的请求时出错"，地址）</example>
      </Docs>
    </Member>
    <Member MemberName="LogError">
      <MemberSignature Language="C#" Value="public static void LogError (this Microsoft.Extensions.Logging.ILogger logger, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogError(class Microsoft.Extensions.Logging.ILogger logger, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogError (logger As ILogger, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogError(Microsoft::Extensions::Logging::ILogger ^ logger, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogError : Microsoft.Extensions.Logging.ILogger * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogError (logger, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger">要向其中进行写入的 <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</param>
        <param name="message">采用消息模板格式的日志消息的格式字符串。 示例： <code>"User {User} logged in from {Address}"</code></param>
        <param name="args">一个对象数组，其中包含零个或多个要设置格式的对象。</param>
        <summary>设置错误日志消息格式并写入该消息。</summary>
        <remarks>To be added.</remarks>
        <example>记录器.LogError （"处理来自 {Address} 的请求"，地址）</example>
      </Docs>
    </Member>
    <Member MemberName="LogError">
      <MemberSignature Language="C#" Value="public static void LogError (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.EventId eventId, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogError(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.EventId eventId, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogError (logger As ILogger, eventId As EventId, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogError(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::EventId eventId, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogError : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.EventId * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogError (logger, eventId, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger">要向其中进行写入的 <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</param>
        <param name="eventId">与日志关联的事件 ID。</param>
        <param name="message">采用消息模板格式的日志消息的格式字符串。 示例： <code>"User {User} logged in from {Address}"</code></param>
        <param name="args">一个对象数组，其中包含零个或多个要设置格式的对象。</param>
        <summary>设置错误日志消息格式并写入该消息。</summary>
        <remarks>To be added.</remarks>
        <example>记录器.LogError （0，"处理来自 {Address} 的请求"，地址）</example>
      </Docs>
    </Member>
    <Member MemberName="LogError">
      <MemberSignature Language="C#" Value="public static void LogError (this Microsoft.Extensions.Logging.ILogger logger, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogError(class Microsoft.Extensions.Logging.ILogger logger, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogError (logger As ILogger, exception As Exception, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogError(Microsoft::Extensions::Logging::ILogger ^ logger, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogError : Microsoft.Extensions.Logging.ILogger * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogError (logger, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="exception" Type="System.Exception" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="message" Type="System.String" Index="2" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="args" Type="System.Object[]" Index="3" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger">要向其中进行写入的 <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</param>
        <param name="exception">要记录的异常。</param>
        <param name="message">采用消息模板格式的日志消息的格式字符串。 示例： <code>"User {User} logged in from {Address}"</code></param>
        <param name="args">一个对象数组，其中包含零个或多个要设置格式的对象。</param>
        <summary>设置错误日志消息格式并写入该消息。</summary>
        <remarks>To be added.</remarks>
        <example>记录器.LogError （异常，"处理来自 {Address} 的请求时出错"，地址）</example>
      </Docs>
    </Member>
    <Member MemberName="LogError">
      <MemberSignature Language="C#" Value="public static void LogError (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.EventId eventId, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogError(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.EventId eventId, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogError (logger As ILogger, eventId As EventId, exception As Exception, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogError(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::EventId eventId, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogError : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.EventId * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogError (logger, eventId, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger">要向其中进行写入的 <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</param>
        <param name="eventId">与日志关联的事件 ID。</param>
        <param name="exception">要记录的异常。</param>
        <param name="message">采用消息模板格式的日志消息的格式字符串。 示例： <code>"User {User} logged in from {Address}"</code></param>
        <param name="args">一个对象数组，其中包含零个或多个要设置格式的对象。</param>
        <summary>设置错误日志消息格式并写入该消息。</summary>
        <remarks>To be added.</remarks>
        <example>记录器.LogError （0，exception，"处理来自 {Address} 的请求时出错"，地址）</example>
      </Docs>
    </Member>
    <Member MemberName="LogInformation">
      <MemberSignature Language="C#" Value="public static void LogInformation (this Microsoft.Extensions.Logging.ILogger logger, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogInformation(class Microsoft.Extensions.Logging.ILogger logger, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogInformation (logger As ILogger, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogInformation(Microsoft::Extensions::Logging::ILogger ^ logger, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogInformation : Microsoft.Extensions.Logging.ILogger * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogInformation (logger, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger">要向其中进行写入的 <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</param>
        <param name="message">采用消息模板格式的日志消息的格式字符串。 示例： <code>"User {User} logged in from {Address}"</code></param>
        <param name="args">一个对象数组，其中包含零个或多个要设置格式的对象。</param>
        <summary>设置信息日志消息格式并写入该消息。</summary>
        <remarks>To be added.</remarks>
        <example>记录器.LogInformation （"处理来自 {Address} 的请求"，地址）</example>
      </Docs>
    </Member>
    <Member MemberName="LogInformation">
      <MemberSignature Language="C#" Value="public static void LogInformation (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.EventId eventId, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogInformation(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.EventId eventId, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogInformation (logger As ILogger, eventId As EventId, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogInformation(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::EventId eventId, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogInformation : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.EventId * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogInformation (logger, eventId, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger">要向其中进行写入的 <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</param>
        <param name="eventId">与日志关联的事件 ID。</param>
        <param name="message">采用消息模板格式的日志消息的格式字符串。 示例： <code>"User {User} logged in from {Address}"</code></param>
        <param name="args">一个对象数组，其中包含零个或多个要设置格式的对象。</param>
        <summary>设置信息日志消息格式并写入该消息。</summary>
        <remarks>To be added.</remarks>
        <example>记录器.LogInformation （0，"处理来自 {Address} 的请求"，地址）</example>
      </Docs>
    </Member>
    <Member MemberName="LogInformation">
      <MemberSignature Language="C#" Value="public static void LogInformation (this Microsoft.Extensions.Logging.ILogger logger, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogInformation(class Microsoft.Extensions.Logging.ILogger logger, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogInformation (logger As ILogger, exception As Exception, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogInformation(Microsoft::Extensions::Logging::ILogger ^ logger, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogInformation : Microsoft.Extensions.Logging.ILogger * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogInformation (logger, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="exception" Type="System.Exception" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="message" Type="System.String" Index="2" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="args" Type="System.Object[]" Index="3" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger">要向其中进行写入的 <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</param>
        <param name="exception">要记录的异常。</param>
        <param name="message">采用消息模板格式的日志消息的格式字符串。 示例： <code>"User {User} logged in from {Address}"</code></param>
        <param name="args">一个对象数组，其中包含零个或多个要设置格式的对象。</param>
        <summary>设置信息日志消息格式并写入该消息。</summary>
        <remarks>To be added.</remarks>
        <example>记录器.LogInformation （异常，"处理来自 {Address} 的请求时出错"，地址）</example>
      </Docs>
    </Member>
    <Member MemberName="LogInformation">
      <MemberSignature Language="C#" Value="public static void LogInformation (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.EventId eventId, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogInformation(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.EventId eventId, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogInformation (logger As ILogger, eventId As EventId, exception As Exception, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogInformation(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::EventId eventId, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogInformation : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.EventId * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogInformation (logger, eventId, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger">要向其中进行写入的 <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</param>
        <param name="eventId">与日志关联的事件 ID。</param>
        <param name="exception">要记录的异常。</param>
        <param name="message">采用消息模板格式的日志消息的格式字符串。 示例： <code>"User {User} logged in from {Address}"</code></param>
        <param name="args">一个对象数组，其中包含零个或多个要设置格式的对象。</param>
        <summary>设置信息日志消息格式并写入该消息。</summary>
        <remarks>To be added.</remarks>
        <example>记录器.LogInformation （0，exception，"处理来自 {Address} 的请求时出错"，地址）</example>
      </Docs>
    </Member>
    <Member MemberName="LogTrace">
      <MemberSignature Language="C#" Value="public static void LogTrace (this Microsoft.Extensions.Logging.ILogger logger, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogTrace(class Microsoft.Extensions.Logging.ILogger logger, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogTrace (logger As ILogger, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogTrace(Microsoft::Extensions::Logging::ILogger ^ logger, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogTrace : Microsoft.Extensions.Logging.ILogger * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogTrace (logger, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger">要向其中进行写入的 <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</param>
        <param name="message">采用消息模板格式的日志消息的格式字符串。 示例： <code>"User {User} logged in from {Address}"</code></param>
        <param name="args">一个对象数组，其中包含零个或多个要设置格式的对象。</param>
        <summary>设置跟踪日志消息格式并写入该消息。</summary>
        <remarks>To be added.</remarks>
        <example>记录器.LogTrace （"处理来自 {Address} 的请求"，地址）</example>
      </Docs>
    </Member>
    <Member MemberName="LogTrace">
      <MemberSignature Language="C#" Value="public static void LogTrace (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.EventId eventId, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogTrace(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.EventId eventId, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogTrace (logger As ILogger, eventId As EventId, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogTrace(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::EventId eventId, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogTrace : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.EventId * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogTrace (logger, eventId, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger">要向其中进行写入的 <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</param>
        <param name="eventId">与日志关联的事件 ID。</param>
        <param name="message">采用消息模板格式的日志消息的格式字符串。 示例： <code>"User {User} logged in from {Address}"</code></param>
        <param name="args">一个对象数组，其中包含零个或多个要设置格式的对象。</param>
        <summary>设置跟踪日志消息格式并写入该消息。</summary>
        <remarks>To be added.</remarks>
        <example>记录器.LogTrace （0，"处理来自 {Address} 的请求"，地址）</example>
      </Docs>
    </Member>
    <Member MemberName="LogTrace">
      <MemberSignature Language="C#" Value="public static void LogTrace (this Microsoft.Extensions.Logging.ILogger logger, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogTrace(class Microsoft.Extensions.Logging.ILogger logger, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogTrace (logger As ILogger, exception As Exception, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogTrace(Microsoft::Extensions::Logging::ILogger ^ logger, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogTrace : Microsoft.Extensions.Logging.ILogger * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogTrace (logger, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="exception" Type="System.Exception" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="message" Type="System.String" Index="2" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="args" Type="System.Object[]" Index="3" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger">要向其中进行写入的 <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</param>
        <param name="exception">要记录的异常。</param>
        <param name="message">采用消息模板格式的日志消息的格式字符串。 示例： <code>"User {User} logged in from {Address}"</code></param>
        <param name="args">一个对象数组，其中包含零个或多个要设置格式的对象。</param>
        <summary>设置跟踪日志消息格式并写入该消息。</summary>
        <remarks>To be added.</remarks>
        <example>记录器.LogTrace （异常，"处理来自 {Address} 的请求时出错"，地址）</example>
      </Docs>
    </Member>
    <Member MemberName="LogTrace">
      <MemberSignature Language="C#" Value="public static void LogTrace (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.EventId eventId, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogTrace(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.EventId eventId, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogTrace (logger As ILogger, eventId As EventId, exception As Exception, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogTrace(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::EventId eventId, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogTrace : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.EventId * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogTrace (logger, eventId, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger">要向其中进行写入的 <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</param>
        <param name="eventId">与日志关联的事件 ID。</param>
        <param name="exception">要记录的异常。</param>
        <param name="message">采用消息模板格式的日志消息的格式字符串。 示例： <code>"User {User} logged in from {Address}"</code></param>
        <param name="args">一个对象数组，其中包含零个或多个要设置格式的对象。</param>
        <summary>设置跟踪日志消息格式并写入该消息。</summary>
        <remarks>To be added.</remarks>
        <example>记录器.LogTrace （0，exception，"处理来自 {Address} 的请求时出错"，地址）</example>
      </Docs>
    </Member>
    <Member MemberName="LogWarning">
      <MemberSignature Language="C#" Value="public static void LogWarning (this Microsoft.Extensions.Logging.ILogger logger, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogWarning(class Microsoft.Extensions.Logging.ILogger logger, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogWarning (logger As ILogger, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogWarning(Microsoft::Extensions::Logging::ILogger ^ logger, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogWarning : Microsoft.Extensions.Logging.ILogger * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogWarning (logger, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger">要向其中进行写入的 <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</param>
        <param name="message">采用消息模板格式的日志消息的格式字符串。 示例： <code>"User {User} logged in from {Address}"</code></param>
        <param name="args">一个对象数组，其中包含零个或多个要设置格式的对象。</param>
        <summary>设置警告日志消息格式并写入该消息。</summary>
        <remarks>To be added.</remarks>
        <example>记录器.LogWarning （"处理来自 {Address} 的请求"，地址）</example>
      </Docs>
    </Member>
    <Member MemberName="LogWarning">
      <MemberSignature Language="C#" Value="public static void LogWarning (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.EventId eventId, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogWarning(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.EventId eventId, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogWarning (logger As ILogger, eventId As EventId, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogWarning(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::EventId eventId, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogWarning : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.EventId * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogWarning (logger, eventId, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger">要向其中进行写入的 <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</param>
        <param name="eventId">与日志关联的事件 ID。</param>
        <param name="message">采用消息模板格式的日志消息的格式字符串。 示例： <code>"User {User} logged in from {Address}"</code></param>
        <param name="args">一个对象数组，其中包含零个或多个要设置格式的对象。</param>
        <summary>设置警告日志消息格式并写入该消息。</summary>
        <remarks>To be added.</remarks>
        <example>记录器.LogWarning （0，"处理来自 {Address} 的请求"，地址）</example>
      </Docs>
    </Member>
    <Member MemberName="LogWarning">
      <MemberSignature Language="C#" Value="public static void LogWarning (this Microsoft.Extensions.Logging.ILogger logger, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogWarning(class Microsoft.Extensions.Logging.ILogger logger, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogWarning (logger As ILogger, exception As Exception, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogWarning(Microsoft::Extensions::Logging::ILogger ^ logger, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogWarning : Microsoft.Extensions.Logging.ILogger * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogWarning (logger, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="exception" Type="System.Exception" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="message" Type="System.String" Index="2" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="args" Type="System.Object[]" Index="3" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger">要向其中进行写入的 <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</param>
        <param name="exception">要记录的异常。</param>
        <param name="message">采用消息模板格式的日志消息的格式字符串。 示例： <code>"User {User} logged in from {Address}"</code></param>
        <param name="args">一个对象数组，其中包含零个或多个要设置格式的对象。</param>
        <summary>设置警告日志消息格式并写入该消息。</summary>
        <remarks>To be added.</remarks>
        <example>记录器.LogWarning （异常，"处理来自 {Address} 的请求时出错"，地址）</example>
      </Docs>
    </Member>
    <Member MemberName="LogWarning">
      <MemberSignature Language="C#" Value="public static void LogWarning (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.EventId eventId, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogWarning(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.EventId eventId, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogWarning (logger As ILogger, eventId As EventId, exception As Exception, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogWarning(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::EventId eventId, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogWarning : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.EventId * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogWarning (logger, eventId, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger">要向其中进行写入的 <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</param>
        <param name="eventId">与日志关联的事件 ID。</param>
        <param name="exception">要记录的异常。</param>
        <param name="message">采用消息模板格式的日志消息的格式字符串。 示例： <code>"User {User} logged in from {Address}"</code></param>
        <param name="args">一个对象数组，其中包含零个或多个要设置格式的对象。</param>
        <summary>设置警告日志消息格式并写入该消息。</summary>
        <remarks>To be added.</remarks>
        <example>记录器.LogWarning （0，exception，"处理来自 {Address} 的请求时出错"，地址）</example>
      </Docs>
    </Member>
  </Members>
</Type>
