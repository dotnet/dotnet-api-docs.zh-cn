<Type Name="IExternalScopeProvider" FullName="Microsoft.Extensions.Logging.IExternalScopeProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a6a7863bc84403d96103e4dc5e19be67561ab75e" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89824090" /></Metadata><TypeSignature Language="C#" Value="public interface IExternalScopeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IExternalScopeProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Logging.IExternalScopeProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IExternalScopeProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IExternalScopeProvider" />
  <TypeSignature Language="F#" Value="type IExternalScopeProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>表示公共作用域数据的存储。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ForEachScope&lt;TState&gt;">
      <MemberSignature Language="C#" Value="public void ForEachScope&lt;TState&gt; (Action&lt;object,TState&gt; callback, TState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachScope&lt;TState&gt;(class System.Action`2&lt;object, !!TState&gt; callback, !!TState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.IExternalScopeProvider.ForEachScope``1(System.Action{System.Object,``0},``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ForEachScope(Of TState) (callback As Action(Of Object, TState), state As TState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TState&gt;&#xA; void ForEachScope(Action&lt;System::Object ^, TState&gt; ^ callback, TState state);" />
      <MemberSignature Language="F#" Value="abstract member ForEachScope : Action&lt;obj, 'State&gt; * 'State -&gt; unit" Usage="iExternalScopeProvider.ForEachScope (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TState" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;System.Object,TState&gt;" />
        <Parameter Name="state" Type="TState" />
      </Parameters>
      <Docs>
        <typeparam name="TState">要接受的状态的类型。</typeparam>
        <param name="callback">要对每个作用域对象执行的回叫</param>
        <param name="state">要传递给该回叫的状态对象</param>
        <summary>按创建顺序对每个当前活动的作用域对象执行回叫。
保证所有回叫都通过此方法进行内联调用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Push">
      <MemberSignature Language="C#" Value="public IDisposable Push (object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable Push(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.IExternalScopeProvider.Push(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Push (state As Object) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ Push(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member Push : obj -&gt; IDisposable" Usage="iExternalScopeProvider.Push state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">作用域对象</param>
        <summary>向列表中添加作用域对象。</summary>
        <returns>在释放时删除作用域的 <see cref="T:System.IDisposable" /> 标记。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
