<Type Name="BatchingLogger" FullName="Microsoft.Extensions.Logging.AzureAppServices.Internal.BatchingLogger">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f526cf52e9b9536537f342423799f0b0fede5963" /><Meta Name="ms.sourcegitcommit" Value="0bd9d099f2522ef14c6f48a8ea5f2c0650df0f6f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/15/2020" /><Meta Name="ms.locfileid" Value="92086153" /></Metadata><TypeSignature Language="C#" Value="public class BatchingLogger : Microsoft.Extensions.Logging.ILogger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BatchingLogger extends System.Object implements class Microsoft.Extensions.Logging.ILogger" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Logging.AzureAppServices.Internal.BatchingLogger" />
  <TypeSignature Language="VB.NET" Value="Public Class BatchingLogger&#xA;Implements ILogger" />
  <TypeSignature Language="C++ CLI" Value="public ref class BatchingLogger : Microsoft::Extensions::Logging::ILogger" />
  <TypeSignature Language="F#" Value="type BatchingLogger = class&#xA;    interface ILogger" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Logging.AzureAppServices</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.Logging.ILogger</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BatchingLogger (Microsoft.Extensions.Logging.AzureAppServices.Internal.BatchingLoggerProvider loggerProvider, string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Logging.AzureAppServices.Internal.BatchingLoggerProvider loggerProvider, string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.BatchingLogger.#ctor(Microsoft.Extensions.Logging.AzureAppServices.Internal.BatchingLoggerProvider,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (loggerProvider As BatchingLoggerProvider, categoryName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BatchingLogger(Microsoft::Extensions::Logging::AzureAppServices::Internal::BatchingLoggerProvider ^ loggerProvider, System::String ^ categoryName);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Logging.AzureAppServices.Internal.BatchingLogger : Microsoft.Extensions.Logging.AzureAppServices.Internal.BatchingLoggerProvider * string -&gt; Microsoft.Extensions.Logging.AzureAppServices.Internal.BatchingLogger" Usage="new Microsoft.Extensions.Logging.AzureAppServices.Internal.BatchingLogger (loggerProvider, categoryName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.AzureAppServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="loggerProvider" Type="Microsoft.Extensions.Logging.AzureAppServices.Internal.BatchingLoggerProvider" />
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="loggerProvider">To be added.</param>
        <param name="categoryName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginScope&lt;TState&gt;">
      <MemberSignature Language="C#" Value="public IDisposable BeginScope&lt;TState&gt; (TState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable BeginScope&lt;TState&gt;(!!TState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.BatchingLogger.BeginScope``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginScope(Of TState) (state As TState) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TState&gt;&#xA; virtual IDisposable ^ BeginScope(TState state);" />
      <MemberSignature Language="F#" Value="abstract member BeginScope : 'State -&gt; IDisposable&#xA;override this.BeginScope : 'State -&gt; IDisposable" Usage="batchingLogger.BeginScope state" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Logging.ILogger.BeginScope``1(``0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.AzureAppServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TState" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="state" Type="TState" />
      </Parameters>
      <Docs>
        <typeparam name="TState">To be added.</typeparam>
        <param name="state"><span data-ttu-id="fe3b1-101">范围的标识符。</span><span class="sxs-lookup"><span data-stu-id="fe3b1-101">The identifier for the scope.</span></span></param>
        <summary><span data-ttu-id="fe3b1-102">开始逻辑操作范围。</span><span class="sxs-lookup"><span data-stu-id="fe3b1-102">Begins a logical operation scope.</span></span></summary>
        <returns><span data-ttu-id="fe3b1-103">一个可释放对象，它在释放时会结束逻辑操作范围。</span><span class="sxs-lookup"><span data-stu-id="fe3b1-103">A disposable object that ends the logical operation scope on dispose.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled (Microsoft.Extensions.Logging.LogLevel logLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEnabled(valuetype Microsoft.Extensions.Logging.LogLevel logLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.BatchingLogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEnabled (logLevel As LogLevel) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsEnabled(Microsoft::Extensions::Logging::LogLevel logLevel);" />
      <MemberSignature Language="F#" Value="abstract member IsEnabled : Microsoft.Extensions.Logging.LogLevel -&gt; bool&#xA;override this.IsEnabled : Microsoft.Extensions.Logging.LogLevel -&gt; bool" Usage="batchingLogger.IsEnabled logLevel" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Logging.ILogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.AzureAppServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logLevel" Type="Microsoft.Extensions.Logging.LogLevel" />
      </Parameters>
      <Docs>
        <param name="logLevel"><span data-ttu-id="fe3b1-104">要检查的级别。</span><span class="sxs-lookup"><span data-stu-id="fe3b1-104">level to be checked.</span></span></param>
        <summary><span data-ttu-id="fe3b1-105">检查是否已启用给定 <paramref name="logLevel" />。</span><span class="sxs-lookup"><span data-stu-id="fe3b1-105">Checks if the given <paramref name="logLevel" /> is enabled.</span></span></summary>
        <returns><span data-ttu-id="fe3b1-106">如果已启用，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fe3b1-106"><see langword="true" /> if enabled; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Log&lt;TState&gt;">
      <MemberSignature Language="C#" Value="public void Log&lt;TState&gt; (Microsoft.Extensions.Logging.LogLevel logLevel, Microsoft.Extensions.Logging.EventId eventId, TState state, Exception exception, Func&lt;TState,Exception,string&gt; formatter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Log&lt;TState&gt;(valuetype Microsoft.Extensions.Logging.LogLevel logLevel, valuetype Microsoft.Extensions.Logging.EventId eventId, !!TState state, class System.Exception exception, class System.Func`3&lt;!!TState, class System.Exception, string&gt; formatter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.BatchingLogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Log(Of TState) (logLevel As LogLevel, eventId As EventId, state As TState, exception As Exception, formatter As Func(Of TState, Exception, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TState&gt;&#xA; virtual void Log(Microsoft::Extensions::Logging::LogLevel logLevel, Microsoft::Extensions::Logging::EventId eventId, TState state, Exception ^ exception, Func&lt;TState, Exception ^, System::String ^&gt; ^ formatter);" />
      <MemberSignature Language="F#" Value="abstract member Log : Microsoft.Extensions.Logging.LogLevel * Microsoft.Extensions.Logging.EventId * 'State * Exception * Func&lt;'State, Exception, string&gt; -&gt; unit&#xA;override this.Log : Microsoft.Extensions.Logging.LogLevel * Microsoft.Extensions.Logging.EventId * 'State * Exception * Func&lt;'State, Exception, string&gt; -&gt; unit" Usage="batchingLogger.Log (logLevel, eventId, state, exception, formatter)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Logging.ILogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.AzureAppServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TState" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="logLevel" Type="Microsoft.Extensions.Logging.LogLevel" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="state" Type="TState" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="formatter" Type="System.Func&lt;TState,System.Exception,System.String&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TState">To be added.</typeparam>
        <param name="logLevel"><span data-ttu-id="fe3b1-107">将在此级别上写入项。</span><span class="sxs-lookup"><span data-stu-id="fe3b1-107">Entry will be written on this level.</span></span></param>
        <param name="eventId"><span data-ttu-id="fe3b1-108">事件的 ID。</span><span class="sxs-lookup"><span data-stu-id="fe3b1-108">Id of the event.</span></span></param>
        <param name="state"><span data-ttu-id="fe3b1-109">要写入的项。</span><span class="sxs-lookup"><span data-stu-id="fe3b1-109">The entry to be written.</span></span> <span data-ttu-id="fe3b1-110">也可以是对象。</span><span class="sxs-lookup"><span data-stu-id="fe3b1-110">Can be also an object.</span></span></param>
        <param name="exception"><span data-ttu-id="fe3b1-111">与此项相关的异常。</span><span class="sxs-lookup"><span data-stu-id="fe3b1-111">The exception related to this entry.</span></span></param>
        <param name="formatter"><span data-ttu-id="fe3b1-112">函数，用于创建 <paramref name="state" /> 和 <paramref name="exception" /> 的 <see cref="T:System.String" /> 消息。</span><span class="sxs-lookup"><span data-stu-id="fe3b1-112">Function to create a <see cref="T:System.String" /> message of the <paramref name="state" /> and <paramref name="exception" />.</span></span></param>
        <summary><span data-ttu-id="fe3b1-113">写入日志项。</span><span class="sxs-lookup"><span data-stu-id="fe3b1-113">Writes a log entry.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Log&lt;TState&gt;">
      <MemberSignature Language="C#" Value="public void Log&lt;TState&gt; (DateTimeOffset timestamp, Microsoft.Extensions.Logging.LogLevel logLevel, Microsoft.Extensions.Logging.EventId eventId, TState state, Exception exception, Func&lt;TState,Exception,string&gt; formatter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Log&lt;TState&gt;(valuetype System.DateTimeOffset timestamp, valuetype Microsoft.Extensions.Logging.LogLevel logLevel, valuetype Microsoft.Extensions.Logging.EventId eventId, !!TState state, class System.Exception exception, class System.Func`3&lt;!!TState, class System.Exception, string&gt; formatter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.AzureAppServices.Internal.BatchingLogger.Log``1(System.DateTimeOffset,Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Log(Of TState) (timestamp As DateTimeOffset, logLevel As LogLevel, eventId As EventId, state As TState, exception As Exception, formatter As Func(Of TState, Exception, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TState&gt;&#xA; void Log(DateTimeOffset timestamp, Microsoft::Extensions::Logging::LogLevel logLevel, Microsoft::Extensions::Logging::EventId eventId, TState state, Exception ^ exception, Func&lt;TState, Exception ^, System::String ^&gt; ^ formatter);" />
      <MemberSignature Language="F#" Value="member this.Log : DateTimeOffset * Microsoft.Extensions.Logging.LogLevel * Microsoft.Extensions.Logging.EventId * 'State * Exception * Func&lt;'State, Exception, string&gt; -&gt; unit" Usage="batchingLogger.Log (timestamp, logLevel, eventId, state, exception, formatter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.AzureAppServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TState" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="timestamp" Type="System.DateTimeOffset" />
        <Parameter Name="logLevel" Type="Microsoft.Extensions.Logging.LogLevel" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="state" Type="TState" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="formatter" Type="System.Func&lt;TState,System.Exception,System.String&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TState">To be added.</typeparam>
        <param name="timestamp">To be added.</param>
        <param name="logLevel">To be added.</param>
        <param name="eventId">To be added.</param>
        <param name="state">To be added.</param>
        <param name="exception">To be added.</param>
        <param name="formatter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
